import{_ as n,p as s,q as a,a1 as t}from"./framework-96b046e1.js";const p="/assets/f01422d89e394a48ac730c669c39880b-25a5078c.svg",e="/assets/929ed05b5ef141dbb308e0f3149f4b2a-ee29391c.svg",o={},c=t('<h2 id="与路由的配合" tabindex="-1"><a class="header-anchor" href="#与路由的配合" aria-hidden="true">#</a> 与路由的配合</h2><blockquote><p>这种方式很容易出现问题，应该将 language 存储到 <code>localStorage</code> 或其他缓存，而非根据 url 匹配</p></blockquote><p>重点是<strong>加载</strong>与<strong>切换</strong></p><p>i18n 下的路由示例（hash 模式要加前缀）</p><ul><li><code>/en-US/***</code></li><li><code>/zh-CN/***</code></li><li><code>/zh-TW/***</code></li></ul><p>示意图</p><p><img src="'+p+'" alt="加载机制.drawio.svg"><img src="'+e+`" alt="切换机制.drawio.svg"></p><hr><p>与 react-router 结合的核心代码</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useHistory<span class="token punctuation">,</span> useLocation <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-router-dom&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useMemo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> LanguageEnum <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@liuli-util/i18next-util&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">convertLanguagePrefix</span><span class="token punctuation">(</span>value<span class="token operator">:</span> LanguageEnum<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">convertLanguagePrefix</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> LanguageEnum
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">convertLanguagePrefix</span><span class="token punctuation">(</span>
  value<span class="token operator">:</span> LanguageEnum <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> LanguageEnum <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> LanguagePrefixMap <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>LanguageEnum<span class="token punctuation">.</span>En<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;/en-US/&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>LanguageEnum<span class="token punctuation">.</span>ZhCN<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;/zh-CN/&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;/zh-CN/&#39;</span><span class="token operator">:</span> LanguageEnum<span class="token punctuation">.</span>ZhCN<span class="token punctuation">,</span>
    <span class="token string-property property">&#39;/en-US/&#39;</span><span class="token operator">:</span> LanguageEnum<span class="token punctuation">.</span>En<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> LanguagePrefixMap<span class="token punctuation">[</span>value <span class="token keyword">as</span> <span class="token keyword">keyof</span> <span class="token keyword">typeof</span> LanguagePrefixMap<span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useLanguage</span><span class="token punctuation">(</span>init<span class="token operator">:</span> LanguageEnum<span class="token punctuation">)</span><span class="token operator">:</span> LanguageEnum <span class="token punctuation">{</span>
  <span class="token keyword">const</span> location <span class="token operator">=</span> <span class="token function">useLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> history <span class="token operator">=</span> <span class="token function">useHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token function">useMemo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> regexp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\/.+?\\/)</span><span class="token regex-delimiter">/</span></span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> regexp<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>location<span class="token punctuation">.</span>pathname<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      history<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">convertLanguagePrefix</span><span class="token punctuation">(</span>init<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> init
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">convertLanguagePrefix</span><span class="token punctuation">(</span>res<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>history<span class="token punctuation">,</span> location<span class="token punctuation">.</span>pathname<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> language <span class="token operator">=</span> <span class="token function">useLanguage</span><span class="token punctuation">(</span>LanguageEnum<span class="token punctuation">.</span>En<span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> value<span class="token operator">:</span> list <span class="token punctuation">}</span><span class="token punctuation">,</span> fetch<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useAsyncFn</span><span class="token punctuation">(</span>
    <span class="token keyword">async</span> <span class="token punctuation">(</span>language<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;language: &#39;</span><span class="token punctuation">,</span> language<span class="token punctuation">)</span>
      <span class="token keyword">await</span> i18n<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span> en<span class="token punctuation">,</span> zhCN <span class="token punctuation">}</span><span class="token punctuation">,</span> language<span class="token punctuation">)</span>
      <span class="token keyword">const</span> prefix <span class="token operator">=</span> <span class="token function">convertLanguagePrefix</span><span class="token punctuation">(</span>language<span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token function">routeList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token operator">...</span>item<span class="token punctuation">,</span>
        path<span class="token operator">:</span> PathUtil<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>prefix<span class="token punctuation">,</span> item<span class="token punctuation">.</span>path <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>language<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span>

  <span class="token function">useMount</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">fetch</span><span class="token punctuation">(</span>language<span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> location <span class="token operator">=</span> <span class="token function">useLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> history <span class="token operator">=</span> <span class="token function">useHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">changeLanguage</span><span class="token punctuation">(</span>value<span class="token operator">:</span> LanguageEnum<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> path <span class="token operator">=</span> location<span class="token punctuation">.</span>pathname<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>
      <span class="token function">convertLanguagePrefix</span><span class="token punctuation">(</span>language<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">convertLanguagePrefix</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;path: &#39;</span><span class="token punctuation">,</span> language<span class="token punctuation">,</span> value<span class="token punctuation">,</span> path<span class="token punctuation">)</span>
    <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
    history<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          </span><span class="token punctuation">{</span>list <span class="token operator">&amp;&amp;</span>
            list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>path <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">to</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>path <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>title<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Link</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
              </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
            <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">changeLanguage</span><span class="token punctuation">(</span>LanguageEnum<span class="token punctuation">.</span>En<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            English
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">changeLanguage</span><span class="token punctuation">(</span>LanguageEnum<span class="token punctuation">.</span>ZhCN<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
            中文
          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Suspense</span></span> <span class="token attr-name">fallback</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token string">&#39;loading...&#39;</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token function">renderRoutes</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Suspense</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),l=[c];function u(i,k){return s(),a("div",null,l)}const d=n(o,[["render",u],["__file","e76cfaa1f454465bbeb62006b53b2c78.html.vue"]]);export{d as default};
