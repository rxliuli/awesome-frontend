import{r as e,o,c,a as n,d as t,F as l,b as s,e as p}from"./app.23916856.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const i={},u=n("h2",{id:"\u524D\u8A00",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u524D\u8A00","aria-hidden":"true"},"#"),s(" \u524D\u8A00")],-1),k=n("blockquote",null,[n("p",null,"TypeScript \u6539\u53D8\u4E86\u543E\u8F88\u5BF9\u4E8E\u7C7B\u578B\u7CFB\u7EDF\u7684\u8BA4\u77E5\uFF0C\u5B83\u5F3A\u5927\u7684\u7C7B\u578B\u7CFB\u7EDF\u4F7F\u5F97\u7C7B\u578B\u672C\u8EAB\u4E5F\u662F\u53EF\u7F16\u7A0B\u7684\u3002")],-1),b=n("p",null,"\u6700\u8FD1 TypeScript \u66F4\u65B0\u4E86\u4E00\u4E2A\u5927\u7248\u672C v4\uFF0C\u65B0\u589E\u4E86\u4E00\u4E9B\u975E\u5E38\u5F3A\u5927\u7684\u7279\u6027\uFF0C\u8BA9\u4E4B\u524D\u96BE\u4EE5\u505A\u5230\u7684\u4E8B\u60C5\u4E5F\u80FD\u591F\u5B9E\u73B0\u4E86\u3002",-1),d=n("ul",null,[n("li",null,"\u6A21\u677F\u5B57\u7B26\u4E32\u7C7B\u578B"),n("li",null,"\u9012\u5F52\u7C7B\u578B")],-1),m=n("h2",{id:"\u7B80\u4ECB",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7B80\u4ECB","aria-hidden":"true"},"#"),s(" \u7B80\u4ECB")],-1),g=s("\u53C2\u8003\uFF1A"),y={href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-4-1.html",target:"_blank",rel:"noopener noreferrer"},w=s("TypeScript 4.1"),h=p(`<h3 id="\u6A21\u677F\u5B57\u7B26\u4E32\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6A21\u677F\u5B57\u7B26\u4E32\u7C7B\u578B" aria-hidden="true">#</a> \u6A21\u677F\u5B57\u7B26\u4E32\u7C7B\u578B</h3><p>\u5C24\u5176\u9002\u5408\u5728 CSS Properties \u76F8\u5173\u7684\u7C7B\u578B\u5B9A\u4E49\u4E2D\u4F7F\u7528\uFF0C\u4F8B\u5982 css \u7684 <code>width</code>\uFF0C\u5C31\u53EF\u4EE5\u4F7F\u7528\u6A21\u677F\u5B57\u7B26\u4E32\u8FDB\u884C\u68C0\u67E5\u907F\u514D\u4F4E\u7EA7\u9519\u8BEF\u3002</p><p>\u4E4B\u524D</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Width</span> <span class="token operator">=</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> i<span class="token operator">:</span> Width <span class="token operator">=</span> <span class="token string">&quot;1px&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> i2<span class="token operator">:</span> Width <span class="token operator">=</span> <span class="token string">&quot;1px2&quot;</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0D\u4F1A\u62A5\u9519</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u73B0\u5728</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Unit</span> <span class="token operator">=</span> <span class="token string">&quot;px&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;%&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;em&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;rem&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Width</span> <span class="token operator">=</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token builtin">number</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Unit<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token keyword">const</span> i<span class="token operator">:</span> Width <span class="token operator">=</span> <span class="token string">&quot;1px&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> i2<span class="token operator">:</span> Width <span class="token operator">=</span> <span class="token string">&quot;1px2&quot;</span><span class="token punctuation">;</span> <span class="token comment">// TS2322: Type &#39;&quot;1px2&quot;&#39; is not assignable to type &#39;Width&#39;.</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>\u8BE5\u7279\u6027\u5728 Grid \u7EC4\u4EF6\u8FDB\u884C\u4E86\u5B9E\u7528\uFF0C\u80FD\u591F\u907F\u514D\u4E00\u4E9B\u4F4E\u7EA7\u9519\u8BEF\u3002</p></blockquote><h3 id="\u9012\u5F52\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u9012\u5F52\u7C7B\u578B" aria-hidden="true">#</a> \u9012\u5F52\u7C7B\u578B</h3><p>\u4E8B\u5B9E\u4E0A\uFF0C\u9012\u5F52\u7C7B\u578B\u7684\u9700\u6C42\u7531\u6765\u5DF2\u4E45\u3002\u4F8B\u5982\u5178\u578B\u7684 <code>Array.prototype.flat</code> \u51FD\u6570\u7684\u7C7B\u578B\u5B9A\u4E49\uFF0C\u6216\u662F\u51FD\u6570\u5F0F\u4E2D\u90E8\u5206\u5E94\u7528\u51FD\u6570\u7684\u7C7B\u578B\u5B9A\u4E49\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u5C06\u5D4C\u5957\u6570\u7EC4\u4E9A\u5E73\u7684\u51FD\u6570\u7684\u7C7B\u578B\u5B9A\u4E49\u793A\u4F8B\uFF08\u6765\u81EA TypeScript \u5B98\u7F51\uFF09</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ElementType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">ReadonlyArray<span class="token operator">&lt;</span><span class="token keyword">infer</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">?</span> ElementType<span class="token operator">&lt;</span><span class="token constant">U</span><span class="token operator">&gt;</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">deepFlatten</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token keyword">readonly</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> ElementType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token string">&quot;not implemented&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// All of these return the type &#39;number[]&#39;:</span>
<span class="token function">deepFlatten</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">deepFlatten</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">deepFlatten</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="\u5B9E\u9645\u7684\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u9645\u7684\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> \u5B9E\u9645\u7684\u4F7F\u7528\u573A\u666F</h2><h3 id="\u5728-i18next-\u4E2D\u6839\u636E-key-\u83B7\u53D6\u7FFB\u8BD1\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u5728-i18next-\u4E2D\u6839\u636E-key-\u83B7\u53D6\u7FFB\u8BD1\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u5728 i18next \u4E2D\u6839\u636E key \u83B7\u53D6\u7FFB\u8BD1\u5B57\u7B26\u4E32</h3>`,13),x={href:"https://stackoverflow.com/a/58308279/8409380",target:"_blank",rel:"noopener noreferrer"},f=s("i18next \u7684\u7C7B\u578B\u5B9A\u4E49"),S=p(`<p>\u6700\u8FD1\u9047\u5230\u4E86\u901A\u8FC7 i18n \u6846\u67B6\u83B7\u53D6\u7FFB\u8BD1\u6587\u672C\u7684\u9700\u6C42\uFF0C\u5176\u4E2D\u7FFB\u8BD1\u6587\u672C\u901A\u8FC7\u4E00\u4E2A\u5BF9\u8C61\u7684\u5F62\u5F0F\u5B9A\u4E49\uFF0C\u6240\u4EE5\u543E\u8F88\u5C31\u9700\u8981\u4E00\u79CD\u80FD\u591F\u6839\u636E key \u83B7\u53D6\u5230\u7C7B\u578B\u7684\u65B9\u6CD5\u3002</p><p>\u9700\u8981\u652F\u6301\u4EE5\u4E0B\u60C5\u51B5</p><ul><li>\u6839\u636E key \u83B7\u53D6\u5BF9\u5E94\u7684\u6587\u672C</li><li>\u6839\u636E key \u6DF1\u5C42\u83B7\u53D6\u6587\u672C</li><li>\u6839\u636E key \u83B7\u53D6\u6587\u672C\u5E76\u8FDB\u884C\u53C2\u6570\u6CE8\u5165</li></ul><p>\u4E0B\u9762\u662F\u543E\u8F88\u5BF9 i18next \u7684\u5C01\u88C5</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> zhCN <span class="token keyword">from</span> <span class="token string">&quot;../i18n/zhCN&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> en <span class="token keyword">from</span> <span class="token string">&quot;../i18n/en&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> i18next<span class="token punctuation">,</span> <span class="token punctuation">{</span> TOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;i18next&quot;</span><span class="token punctuation">;</span>

<span class="token comment">//region \u7C7B\u578B\u5B9A\u4E49</span>

<span class="token comment">// returns the same string literal T, if props match, else never</span>
<span class="token keyword">type</span> <span class="token class-name">CheckDictString<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token constant">O</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> <span class="token constant">A</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> <span class="token constant">B</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token operator">?</span> <span class="token constant">A</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">O</span>
    <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">A</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Extract<span class="token operator">&lt;</span>CheckDictString<span class="token operator">&lt;</span><span class="token constant">B</span><span class="token punctuation">,</span> <span class="token constant">O</span><span class="token punctuation">[</span><span class="token constant">A</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token operator">:</span> <span class="token builtin">never</span>
  <span class="token operator">:</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">O</span>
  <span class="token operator">?</span> <span class="token constant">T</span>
  <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>

<span class="token comment">// returns the property value from object O given property path T</span>
<span class="token keyword">type</span> <span class="token class-name">GetDictValue<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token constant">O</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> <span class="token constant">A</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> <span class="token constant">B</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token operator">?</span> <span class="token constant">A</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">O</span>
    <span class="token operator">?</span> GetDictValue<span class="token operator">&lt;</span><span class="token constant">B</span><span class="token punctuation">,</span> <span class="token constant">O</span><span class="token punctuation">[</span><span class="token constant">A</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
    <span class="token operator">:</span> <span class="token builtin">never</span>
  <span class="token operator">:</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">O</span>
  <span class="token operator">?</span> <span class="token constant">O</span><span class="token punctuation">[</span><span class="token constant">T</span><span class="token punctuation">]</span>
  <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>

<span class="token comment">// retrieves all variable placeholder names as tuple</span>
<span class="token keyword">type</span> <span class="token class-name">Keys<span class="token operator">&lt;</span><span class="token constant">S</span> <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">S</span> <span class="token keyword">extends</span> <span class="token string">&quot;&quot;</span>
  <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token operator">:</span> <span class="token constant">S</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> _<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">{{</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> <span class="token constant">B</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}}</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> <span class="token constant">C</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token constant">B</span><span class="token punctuation">,</span> <span class="token operator">...</span>Keys<span class="token operator">&lt;</span><span class="token constant">C</span><span class="token operator">&gt;</span><span class="token punctuation">]</span>
  <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>

<span class="token comment">// substitutes placeholder variables with input values</span>
<span class="token keyword">type</span> <span class="token class-name">Interpolate<span class="token operator">&lt;</span>
  <span class="token constant">S</span> <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  <span class="token constant">I</span> <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span>Keys<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span>
<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">S</span> <span class="token keyword">extends</span> <span class="token string">&quot;&quot;</span>
  <span class="token operator">?</span> <span class="token string">&quot;&quot;</span>
  <span class="token operator">:</span> <span class="token constant">S</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> <span class="token constant">A</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">{{</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> <span class="token constant">B</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}}</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> <span class="token constant">C</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">A</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">I</span><span class="token punctuation">[</span>Extract<span class="token operator">&lt;</span><span class="token constant">B</span><span class="token punctuation">,</span> <span class="token keyword">keyof</span> <span class="token constant">I</span><span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Interpolate<span class="token operator">&lt;</span><span class="token constant">C</span><span class="token punctuation">,</span> <span class="token constant">I</span><span class="token operator">&gt;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>

<span class="token comment">//endregion</span>

<span class="token keyword">type</span> <span class="token class-name">Dict</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> zhCN <span class="token operator">|</span> <span class="token keyword">typeof</span> en<span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">enum</span> LanguageEnum <span class="token punctuation">{</span>
  ZhCN <span class="token operator">=</span> <span class="token string">&quot;zhCN&quot;</span><span class="token punctuation">,</span>
  En <span class="token operator">=</span> <span class="token string">&quot;en&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">I18nLoader</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * \u52A0\u8F7D\u56FD\u9645\u5316
   */</span>

  <span class="token keyword">async</span> <span class="token function">load</span><span class="token punctuation">(</span>language<span class="token operator">:</span> LanguageEnum<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> i18next<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      lng<span class="token operator">:</span> language<span class="token punctuation">,</span>
      resources<span class="token operator">:</span> <span class="token punctuation">{</span>
        en<span class="token operator">:</span> <span class="token punctuation">{</span>
          translation<span class="token operator">:</span> en<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        zhCN<span class="token operator">:</span> <span class="token punctuation">{</span>
          translation<span class="token operator">:</span> zhCN<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * \u6839\u636E key \u83B7\u53D6\u7FFB\u8BD1\u7684\u6587\u672C
   * <span class="token keyword">@param</span> <span class="token parameter">key</span>
   */</span>
  <span class="token generic-function"><span class="token function">getText</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
    key<span class="token operator">:</span> <span class="token keyword">keyof</span> Dict <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token constant">K</span> <span class="token operator">&amp;</span> CheckDictString<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> Dict<span class="token operator">&gt;</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> GetDictValue<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> Dict<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token generic-function"><span class="token function">getText</span><span class="token generic class-name"><span class="token operator">&lt;</span>
    <span class="token constant">D</span> <span class="token keyword">extends</span> Dict <span class="token operator">&amp;</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">D</span><span class="token punctuation">,</span>
    <span class="token constant">I</span> <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span>Keys<span class="token operator">&lt;</span><span class="token constant">D</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span>
  <span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>k<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span> args<span class="token operator">:</span> <span class="token constant">I</span><span class="token punctuation">)</span><span class="token operator">:</span> Interpolate<span class="token operator">&lt;</span><span class="token constant">D</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">I</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token generic-function"><span class="token function">getText</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
    key<span class="token operator">:</span> <span class="token keyword">keyof</span> Dict <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token constant">K</span> <span class="token operator">&amp;</span> CheckDictString<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> Dict<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    args<span class="token operator">?</span><span class="token operator">:</span> TOptions
  <span class="token punctuation">)</span><span class="token operator">:</span> GetDictValue<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> Dict<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> i18next<span class="token punctuation">.</span><span class="token function">t</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br></div></div><p>\u4F7F\u7528\u8D77\u6765\u5F88\u7B80\u5355</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> i18nLoader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">I18nLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> i18nLoader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>LanguageEnum<span class="token punctuation">.</span>ZhCN<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i18nLoader<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4F60\u597D</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u63A5\u4E0B\u6765\uFF0C\u6211\u4EEC\u5206\u6790\u4EE5\u4E0B <code>CheckDictString</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">CheckDictString<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token constant">O</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> <span class="token constant">A</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> <span class="token constant">B</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token operator">?</span> <span class="token constant">A</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">O</span>
    <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">A</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Extract<span class="token operator">&lt;</span>CheckDictString<span class="token operator">&lt;</span><span class="token constant">B</span><span class="token punctuation">,</span> <span class="token constant">O</span><span class="token punctuation">[</span><span class="token constant">A</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token operator">:</span> <span class="token builtin">never</span>
  <span class="token operator">:</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">O</span>
  <span class="token operator">?</span> <span class="token constant">T</span>
  <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ol><li>\u4F20\u5165\u6CDB\u578B\u53C2\u6570 <code>T</code> \u548C <code>O</code>\uFF0C<code>T</code> \u5FC5\u987B\u7EE7\u627F\u81EA <code>string</code></li><li>\u5224\u65AD <code>T</code> \u662F\u5426\u7EE7\u627F\u81EA <code>\${infer A}.\${infer B}</code>\uFF0C\u5373\u5224\u65AD <code>T</code> \u662F\u5426\u5305\u542B <code>.</code>\uFF0C\u5E76\u89E3\u6784\u5F97\u5230 <code>A</code>\uFF08\u7B2C\u4E00\u4E2A <code>.</code> \u4E4B\u524D\uFF09,<code>B</code>\uFF08\u7B2C\u4E00\u4E2A <code>.</code> \u4E4B\u540E\uFF0C\u53EF\u80FD\u8FD8\u5305\u542B <code>.</code>\uFF09 <ol><li>\u5982\u679C\u662F\uFF0C\u5219\u7EE7\u7EED\u5224\u65AD <code>A</code> \u662F\u5426\u4E3A\u4F20\u5165\u5BF9\u8C61\u7684\u5B57\u6BB5 <ol><li>\u5982\u679C\u662F\uFF0C\u5219\u7EE7\u7EED\u9012\u5F52\u68C0\u67E5 <code>B</code> \u662F\u5426\u4E3A <code>O[A]</code> \u7684\u4E00\u4E2A\u5B57\u6BB5</li><li>\u5426\u5219\uFF0C\u8FD4\u56DE <code>never</code></li></ol></li><li>\u5426\u5219\uFF0C\u5219\u5224\u65AD <code>T</code> \u662F\u5426\u662F <code>O</code> \u7684\u5B57\u6BB5 <ol><li>\u5982\u679C\u662F\uFF0C\u5219\u8FD4\u56DE <code>T</code></li><li>\u5426\u5219\uFF0C\u8FD4\u56DE <code>never</code></li></ol></li></ol></li></ol><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u5982\u679C\u68C0\u67E5\u51FA\u73B0\u9519\u8BEF\uFF0C\u5219\u8FD4\u56DE <code>never</code>\uFF0C\u4F46\u6211\u4EEC\u4F20\u5165\u7684 <code>string</code> \u662F\u4E0D\u80FD\u5408\u5E76\u4E3A <code>never</code> \u7684\uFF0C\u8FD9\u5C06\u4F1A\u5BFC\u81F4 ts \u7C7B\u578B\u68C0\u67E5\u51FA\u9519\uFF08\u5176\u5B83\u7684\u7C7B\u578B\u57FA\u672C\u4E0A\u4E5F\u662F\u4E00\u6837\u7684\u63A8\u5BFC\u65B9\u5F0F\uFF09\u3002</p><hr><p>\u9644\u5F55</p><p>\u867D\u7136\u770B\u8D77\u6765\u4E0D\u9519\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u7C7B\u578B\u662F\u5426\u6EE1\u8DB3\u6211\u4EEC\u7B80\u5316 i18next \u4F7F\u7528\u7684\u9700\u6C42\u5462\uFF1F \u5B9E\u9645\u4E0A\u6CA1\u6709\u3002\u5373\u4FBF\u6709\u5982\u6B64\u5F3A\u5927\u7684\u7C7B\u578B\u7CFB\u7EDF\uFF0C\u4F46\u5B83\u4ECD\u7136\u4E0D\u8DB3\u4EE5\u6EE1\u8DB3\u7279\u522B\u7075\u6D3B\u7684\u9700\u6C42\u3002\u5B9E\u9645\u4F7F\u7528\u65F6\u4ECD\u53D1\u73B0\u4EE5\u4E0B\u95EE\u9898\uFF1A</p><ul><li>\u5D4C\u5957\u5BF9\u8C61\u7684\u53C2\u6570\u6CE8\u5165\u6CA1\u6709\u8FDB\u884C\u68C0\u67E5</li><li>\u53C2\u6570\u6CE8\u5165\u7684\u7FFB\u8BD1\u6587\u672C\u6CA1\u6709\u63D0\u793A\u6CE8\u5165\u53C2\u6570</li></ul><p>\u89E3\u51B3\u65B9\u6848\u6709\u4E24\u4E2A\u65B9\u5411</p><ul><li>linter rule</li><li>code generate</li></ul><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u7B80\u5355\u7684\u5BF9\u6BD4</p><table><thead><tr><th>\u5206\u7C7B</th><th>typescript</th><th>linter rule</th><th>code generate</th></tr></thead><tbody><tr><td>\u4F7F\u7528</td><td>\u76F4\u63A5\u4F7F\u7528</td><td>\u901A\u8FC7 eslint \u63D2\u4EF6</td><td>\u901A\u8FC7 cli \u547D\u4EE4\u884C</td></tr><tr><td>\u590D\u6742\u5EA6</td><td>\u4E00\u822C\uFF08\u4E0D\u7528\u4E86\u89E3 <code>ast</code>\uFF09</td><td>\u9AD8</td><td>\u8F83\u9AD8</td></tr><tr><td>\u9002\u7528\u573A\u666F</td><td>\u7EDD\u5927\u591A\u6570\u573A\u666F</td><td>\u5BB9\u6613\u7F16\u5199\u7684\u5C11\u91CF\u4EE3\u7801\u7684\u68C0\u67E5</td><td>\u5927\u91CF\u91CD\u590D\u53EF\u81EA\u52A8\u5316\u751F\u6210\u7684\u4EE3\u7801</td></tr></tbody></table><h3 id="\u4F7F\u7528\u7C7B\u578B\u7CFB\u7EDF\u89E3\u6790-json-\u5B57\u7B26\u4E32-\u597D\u73A9\u6027\u8D28" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u7C7B\u578B\u7CFB\u7EDF\u89E3\u6790-json-\u5B57\u7B26\u4E32-\u597D\u73A9\u6027\u8D28" aria-hidden="true">#</a> \u4F7F\u7528\u7C7B\u578B\u7CFB\u7EDF\u89E3\u6790 json \u5B57\u7B26\u4E32\uFF08\u597D\u73A9\u6027\u8D28\uFF09</h3>`,20),q={href:"https://twitter.com/buildsghost/status/1301976526603206657",target:"_blank",rel:"noopener noreferrer"},v=s("twitter \u4E0A"),E=s(" \u751A\u81F3\u6709\u4EBA\u4F7F\u7528 TypeScript \u7684\u6A21\u677F\u5B57\u7B26\u4E32\u548C\u9012\u5F52\u7C7B\u578B\u89E3\u6790\u4E86 json \u5B57\u7B26\u4E32\u3002"),_=p('<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ParserError<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> error<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token operator">&amp;</span> <span class="token constant">T</span><span class="token punctuation">;</span>\n<span class="token keyword">type</span> <span class="token class-name">EatWhitespace<span class="token operator">&lt;</span>State <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token keyword">extends</span> <span class="token class-name">State</span>\n  <span class="token operator">?</span> ParserError<span class="token operator">&lt;</span><span class="token string">&quot;EatWhitespace got generic string type&quot;</span><span class="token operator">&gt;</span>\n  <span class="token operator">:</span> State <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">infer</span> State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token operator">|</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">infer</span> State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n  <span class="token operator">?</span> EatWhitespace<span class="token operator">&lt;</span>State<span class="token operator">&gt;</span>\n  <span class="token operator">:</span> State<span class="token punctuation">;</span>\n<span class="token keyword">type</span> <span class="token class-name">AddKeyValue<span class="token operator">&lt;</span>\n  Memo <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  Key <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n  Value <span class="token keyword">extends</span> <span class="token builtin">any</span>\n<span class="token operator">&gt;</span></span> <span class="token operator">=</span> Memo <span class="token operator">&amp;</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> Key<span class="token punctuation">]</span><span class="token operator">:</span> Value <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">type</span> <span class="token class-name">ParseJsonObject<span class="token operator">&lt;</span>\n  State <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n  Memo <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token keyword">extends</span> <span class="token class-name">State</span>\n  <span class="token operator">?</span> ParserError<span class="token operator">&lt;</span><span class="token string">&quot;ParseJsonObject got generic string type&quot;</span><span class="token operator">&gt;</span>\n  <span class="token operator">:</span> EatWhitespace<span class="token operator">&lt;</span>State<span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">}</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">infer</span> State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n  <span class="token operator">?</span> <span class="token punctuation">[</span>Memo<span class="token punctuation">,</span> State<span class="token punctuation">]</span>\n  <span class="token operator">:</span> EatWhitespace<span class="token operator">&lt;</span>State<span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">infer</span> Key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">infer</span> State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n  <span class="token operator">?</span> EatWhitespace<span class="token operator">&lt;</span>State<span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">infer</span> State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n    <span class="token operator">?</span> ParseJsonValue<span class="token operator">&lt;</span>State<span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token keyword">infer</span> Value<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">infer</span> State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">]</span>\n      <span class="token operator">?</span> EatWhitespace<span class="token operator">&lt;</span>State<span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">infer</span> State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n        <span class="token operator">?</span> ParseJsonObject<span class="token operator">&lt;</span>State<span class="token punctuation">,</span> AddKeyValue<span class="token operator">&lt;</span>Memo<span class="token punctuation">,</span> Key<span class="token punctuation">,</span> Value<span class="token operator">&gt;&gt;</span>\n        <span class="token operator">:</span> EatWhitespace<span class="token operator">&lt;</span>State<span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">}</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">infer</span> State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n        <span class="token operator">?</span> <span class="token punctuation">[</span>AddKeyValue<span class="token operator">&lt;</span>Memo<span class="token punctuation">,</span> Key<span class="token punctuation">,</span> Value<span class="token operator">&gt;</span><span class="token punctuation">,</span> State<span class="token punctuation">]</span>\n        <span class="token operator">:</span> ParserError<span class="token operator">&lt;</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">ParseJsonObject received unexpected token: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token operator">&gt;</span>\n      <span class="token operator">:</span> ParserError<span class="token operator">&lt;</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">ParseJsonValue returned unexpected value for: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token operator">&gt;</span>\n    <span class="token operator">:</span> ParserError<span class="token operator">&lt;</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">ParseJsonObject received unexpected token: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token operator">&gt;</span>\n  <span class="token operator">:</span> ParserError<span class="token operator">&lt;</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">ParseJsonObject received unexpected token: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n<span class="token keyword">type</span> <span class="token class-name">ParseJsonArray<span class="token operator">&lt;</span>\n  State <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n  Memo <span class="token keyword">extends</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token keyword">extends</span> <span class="token class-name">State</span>\n  <span class="token operator">?</span> ParserError<span class="token operator">&lt;</span><span class="token string">&quot;ParseJsonArray got generic string type&quot;</span><span class="token operator">&gt;</span>\n  <span class="token operator">:</span> EatWhitespace<span class="token operator">&lt;</span>State<span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">]</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">infer</span> State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n  <span class="token operator">?</span> <span class="token punctuation">[</span>Memo<span class="token punctuation">,</span> State<span class="token punctuation">]</span>\n  <span class="token operator">:</span> ParseJsonValue<span class="token operator">&lt;</span>State<span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token keyword">infer</span> Value<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">infer</span> State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">]</span>\n  <span class="token operator">?</span> EatWhitespace<span class="token operator">&lt;</span>State<span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">infer</span> State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n    <span class="token operator">?</span> ParseJsonArray<span class="token operator">&lt;</span>EatWhitespace<span class="token operator">&lt;</span>State<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">...</span>Memo<span class="token punctuation">,</span> Value<span class="token punctuation">]</span><span class="token operator">&gt;</span>\n    <span class="token operator">:</span> EatWhitespace<span class="token operator">&lt;</span>State<span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">]</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">infer</span> State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n    <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token operator">...</span>Memo<span class="token punctuation">,</span> Value<span class="token punctuation">]</span><span class="token punctuation">,</span> State<span class="token punctuation">]</span>\n    <span class="token operator">:</span> ParserError<span class="token operator">&lt;</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">ParseJsonArray received unexpected token: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token operator">&gt;</span>\n  <span class="token operator">:</span> ParserError<span class="token operator">&lt;</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">ParseJsonValue returned unexpected value for: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n<span class="token keyword">type</span> <span class="token class-name">ParseJsonValue<span class="token operator">&lt;</span>State <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token keyword">extends</span> <span class="token class-name">State</span>\n  <span class="token operator">?</span> ParserError<span class="token operator">&lt;</span><span class="token string">&quot;ParseJsonValue got generic string type&quot;</span><span class="token operator">&gt;</span>\n  <span class="token operator">:</span> EatWhitespace<span class="token operator">&lt;</span>State<span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">null</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">infer</span> State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n  <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token keyword">null</span><span class="token punctuation">,</span> State<span class="token punctuation">]</span>\n  <span class="token operator">:</span> EatWhitespace<span class="token operator">&lt;</span>State<span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">infer</span> Value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">infer</span> State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n  <span class="token operator">?</span> <span class="token punctuation">[</span>Value<span class="token punctuation">,</span> State<span class="token punctuation">]</span>\n  <span class="token operator">:</span> EatWhitespace<span class="token operator">&lt;</span>State<span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">infer</span> State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n  <span class="token operator">?</span> ParseJsonArray<span class="token operator">&lt;</span>State<span class="token operator">&gt;</span>\n  <span class="token operator">:</span> EatWhitespace<span class="token operator">&lt;</span>State<span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">{</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">infer</span> State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n  <span class="token operator">?</span> ParseJsonObject<span class="token operator">&lt;</span>State<span class="token operator">&gt;</span>\n  <span class="token operator">:</span> ParserError<span class="token operator">&lt;</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">ParseJsonValue received unexpected token: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>State<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n<span class="token keyword">type</span> <span class="token class-name">ParseJson<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> ParseJsonValue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token keyword">infer</span></span> Result\n  <span class="token operator">?</span> Result <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token keyword">infer</span> Value<span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">]</span>\n    <span class="token operator">?</span> Value\n    <span class="token operator">:</span> Result <span class="token keyword">extends</span> <span class="token class-name">ParserError<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span></span>\n    <span class="token operator">?</span> Result\n    <span class="token operator">:</span> ParserError<span class="token operator">&lt;</span><span class="token string">&quot;ParseJsonValue returned unexpected Result&quot;</span><span class="token operator">&gt;</span>\n  <span class="token operator">:</span> ParserError<span class="token operator">&lt;</span><span class="token string">&quot;ParseJsonValue returned uninferrable Result&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">type</span> <span class="token class-name">Json</span> <span class="token operator">=</span> ParseJson<span class="token operator">&lt;</span><span class="token string">&#39;{ &quot;key1&quot;: [&quot;value1&quot;, null], &quot;key2&quot;: &quot;value2&quot; }&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// type Json = { key1: [&quot;value1&quot;, null]; } &amp; { key2: &quot;value2&quot;; }</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br></div></div><blockquote><p>\u6211\u60F3\u540E\u7AEF\u8BED\u8A00\uFF08Java/GoLang\uFF09\u81F3\u4ECA\u4E5F\u6CA1\u6709\u51FA\u73B0\u5982\u6B64\u590D\u6742\u7684\u7C7B\u578B\u5B9A\u4E49\u3002</p></blockquote><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u867D\u7136 TypeScript \u7684\u7C7B\u578B\u7CFB\u7EDF\u5DF2\u7ECF\u5982\u6B64\u5F3A\u5927\uFF0C\u4F46\u5B83\u5E76\u975E\u6CA1\u6709\u5C40\u9650\u6027\uFF0C\u50CF\u5728\u4E0A\u9762\u7684 <a href="#%E5%9C%A8-i18next-%E4%B8%AD%E6%A0%B9%E6%8D%AE-key-%E8%8E%B7%E5%8F%96%E7%BF%BB%E8%AF%91%E5%AD%97%E7%AC%A6%E4%B8%B2">\u5728 i18next \u4E2D\u6839\u636E key \u83B7\u53D6\u7FFB\u8BD1\u5B57\u7B26\u4E32</a> \u4FBF\u662F\u4E00\u4F8B\u3002</p>',4);function T($,P){const a=e("ExternalLinkIcon");return o(),c(l,null,[u,k,b,d,m,n("blockquote",null,[n("p",null,[g,n("a",y,[w,t(a)])])]),h,n("blockquote",null,[n("p",null,[n("a",x,[f,t(a)])])]),S,n("p",null,[n("a",q,[v,t(a)]),E]),_],64)}var J=r(i,[["render",T]]);export{J as default};
