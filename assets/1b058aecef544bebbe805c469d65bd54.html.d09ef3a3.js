import{r as o,o as e,c,a as s,d as p,F as l,b as n,e as t}from"./app.23916856.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";var i="/assets/ad55b7b6016f4e099a2df120df913a2c.bbe0dd0b.svg",r="/assets/65fcc537ed0349ccbe722d5eb2a8c228.9aede7a7.png",k="/assets/3d18e37a137740f1a99f94e602925021.03a6b779.png";const b={},d=s("h2",{id:"\u573A\u666F",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u573A\u666F","aria-hidden":"true"},"#"),n(" \u573A\u666F")],-1),m=n("\u5728\u524D\u6587 "),w=s("a",{href:"/p/c0232eb08d0f4fb5a1ed997bbd04e130"},"\u57FA\u4E8E quickjs \u5C01\u88C5 JavaScript \u6C99\u7BB1",-1),h=n(" \u5DF2\u7ECF\u57FA\u4E8E quickjs \u5B9E\u73B0\u4E86\u4E00\u4E2A\u6C99\u7BB1\uFF0C\u8FD9\u91CC\u518D\u57FA\u4E8E web worker \u5B9E\u73B0\u5907\u7528\u65B9\u6848\u3002\u5982\u679C\u4F60\u4E0D\u77E5\u9053 web worker \u662F\u4EC0\u4E48\u6216\u8005\u4ECE\u672A\u4E86\u89E3\u8FC7\uFF0C\u53EF\u4EE5\u67E5\u770B "),g={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Workers_API",target:"_blank",rel:"noopener noreferrer"},f=n("Web Workers API"),y=n("\u3002\u7B80\u800C\u8A00\u4E4B\uFF0C\u5B83\u662F\u4E00\u4E2A\u6D4F\u89C8\u5668\u5B9E\u73B0\u7684\u591A\u7EBF\u7A0B\uFF0C\u53EF\u4EE5\u8FD0\u884C\u4E00\u6BB5\u4EE3\u7801\u5728\u53E6\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u5E76\u4E14\u63D0\u4F9B\u4E0E\u4E4B\u901A\u4FE1\u7684\u529F\u80FD\u3002"),v=t(`<h2 id="\u5B9E\u73B0-ijavascriptshadowbox" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-ijavascriptshadowbox" aria-hidden="true">#</a> \u5B9E\u73B0 IJavaScriptShadowbox</h2><p>\u4E8B\u5B9E\u4E0A\uFF0Cweb worker \u63D0\u4F9B\u4E86 event emitter \u7684 api\uFF0C\u5373 <code>postMessage/onmessage</code>\uFF0C\u6240\u4EE5\u5B9E\u73B0\u975E\u5E38\u7B80\u5355\u3002</p><p>\u5B9E\u73B0\u5206\u4E3A\u4E24\u90E8\u5206\uFF0C\u4E00\u90E8\u5206\u662F\u5728\u4E3B\u7EBF\u7A0B\u5B9E\u73B0 <code>IJavaScriptShadowbox</code>\uFF0C\u53E6\u4E00\u90E8\u5206\u5219\u662F\u9700\u8981\u5728 web worker \u7EBF\u7A0B\u5B9E\u73B0 <code>IEventEmitter</code></p><h3 id="\u4E3B\u7EBF\u7A0B\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4E3B\u7EBF\u7A0B\u7684\u5B9E\u73B0" aria-hidden="true">#</a> \u4E3B\u7EBF\u7A0B\u7684\u5B9E\u73B0</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> IJavaScriptShadowbox <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./IJavaScriptShadowbox&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">WebWorkerShadowbox</span> <span class="token keyword">implements</span> <span class="token class-name">IJavaScriptShadowbox</span> <span class="token punctuation">{</span>
  <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>worker<span class="token punctuation">.</span><span class="token function">terminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> worker<span class="token operator">!</span><span class="token operator">:</span> Worker<span class="token punctuation">;</span>
  <span class="token function">eval</span><span class="token punctuation">(</span>code<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>code<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token string">&quot;application/javascript&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>worker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      credentials<span class="token operator">:</span> <span class="token string">&quot;include&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>worker<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> msg <span class="token operator">=</span> ev<span class="token punctuation">.</span>data <span class="token keyword">as</span> <span class="token punctuation">{</span> channel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> data<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token comment">// console.log(&#39;msg.data: &#39;, msg)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>listenerMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>channel<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>listenerMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>channel<span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">handle</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token keyword">readonly</span> listenerMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">emit</span><span class="token punctuation">(</span>channel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>worker<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      channel<span class="token operator">:</span> channel<span class="token punctuation">,</span>
      data<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">on</span><span class="token punctuation">(</span>channel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token function-variable function">handle</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>listenerMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>listenerMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listenerMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">offByChannel</span><span class="token punctuation">(</span>channel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listenerMap<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h3 id="web-worker-\u7EBF\u7A0B\u7684\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#web-worker-\u7EBF\u7A0B\u7684\u5B9E\u73B0" aria-hidden="true">#</a> web worker \u7EBF\u7A0B\u7684\u5B9E\u73B0</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> IEventEmitter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./IEventEmitter&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">WebWorkerEventEmitter</span> <span class="token keyword">implements</span> <span class="token class-name">IEventEmitter</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token keyword">readonly</span> listenerMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">emit</span><span class="token punctuation">(</span>channel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      channel<span class="token operator">:</span> channel<span class="token punctuation">,</span>
      data<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">on</span><span class="token punctuation">(</span>channel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token function-variable function">handle</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>listenerMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>listenerMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listenerMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">offByChannel</span><span class="token punctuation">(</span>channel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listenerMap<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">onmessage</span> <span class="token operator">=</span> <span class="token punctuation">(</span>ev<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> msg <span class="token operator">=</span> ev<span class="token punctuation">.</span>data <span class="token keyword">as</span> <span class="token punctuation">{</span> channel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> data<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>listenerMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>channel<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>listenerMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>channel<span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">handle</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>listenerMap<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    onmessage <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h2 id="\u4F7F\u7528-webworkershadowbox-webworkereventemitter" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-webworkershadowbox-webworkereventemitter" aria-hidden="true">#</a> \u4F7F\u7528 WebWorkerShadowbox/WebWorkerEventEmitter</h2><p>\u4E3B\u7EBF\u7A0B\u4EE3\u7801</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> shadowbox<span class="token operator">:</span> IJavaScriptShadowbox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebWorkerShadowbox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
shadowbox<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8FD9\u91CC\u7684 code \u6307\u7684\u662F\u4E0B\u9762 web worker \u7EBF\u7A0B\u7684\u4EE3\u7801</span>
shadowbox<span class="token punctuation">.</span><span class="token function">eval</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
shadowbox<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;open&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>web worker \u7EBF\u7A0B\u4EE3\u7801</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> em <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebWorkerEventEmitter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
em<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;open&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> em<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;liuli&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u4E0B\u9762\u662F\u4EE3\u7801\u7684\u6267\u884C\u6D41\u7A0B\u793A\u610F\u56FE</p><p><img src="`+i+'" alt="web worker \u6C99\u7BB1\u5B9E\u73B0\u4F7F\u7528\u793A\u4F8B\u4EE3\u7801\u7684\u6267\u884C\u6D41\u7A0B.drawio.svg"></p><h2 id="\u9650\u5236-web-worker-\u5168\u5C40-api" tabindex="-1"><a class="header-anchor" href="#\u9650\u5236-web-worker-\u5168\u5C40-api" aria-hidden="true">#</a> \u9650\u5236 web worker \u5168\u5C40 api</h2><p>\u7ECF\u5927\u4F6C JackWorks \u63D0\u9192\uFF0Cweb worker \u6709\u8BB8\u591A\u4E0D\u5B89\u5168\u7684 api\uFF0C\u6240\u4EE5\u5FC5\u987B\u9650\u5236\uFF0C\u5305\u542B\u4F46\u4E0D\u9650\u4E8E\u4EE5\u4E0B api</p><ul><li><code>fetch</code></li><li><code>indexedDB</code></li><li><code>performance</code></li></ul><p>\u4E8B\u5B9E\u4E0A\uFF0Cweb worker \u9ED8\u8BA4\u81EA\u5E26\u4E86 <strong>276</strong> \u4E2A\u5168\u5C40 api\uFF0C\u53EF\u80FD\u6BD4\u6211\u4EEC\u60F3\u8C61\u4E2D\u591A\u5F88\u591A\u3002</p><p><img src="'+r+'" alt="Snipaste_2021-10-24_23-05-18"></p>',19),q=n("\u6709\u7BC7 "),_={href:"http://www.cs.columbia.edu/~simha/spyjs.ccs15.pdf",target:"_blank",rel:"noopener noreferrer"},x=n("\u6587\u7AE0"),S=n(" \u9610\u8FF0\u4E86\u5982\u4F55\u5728 web \u4E0A\u901A\u8FC7 "),W=s("code",null,"performance/SharedArrayBuffer",-1),M=n(" api \u505A\u4FA7\u4FE1\u9053\u653B\u51FB\uFF0C\u5373\u4FBF\u73B0\u5728 "),E=s("code",null,"SharedArrayBuffer",-1),I=n(" api \u73B0\u5728\u6D4F\u89C8\u5668\u9ED8\u8BA4\u5DF2\u7ECF\u7981\u7528\u4E86\uFF0C\u4F46\u5929\u77E5\u9053\u8FD8\u6709\u6CA1\u6709\u5176\u4ED6\u65B9\u6CD5\u3002\u6240\u4EE5\u6700\u5B89\u5168\u7684\u65B9\u6CD5\u662F\u8BBE\u7F6E\u4E00\u4E2A api \u767D\u540D\u5355\uFF0C\u7136\u540E\u5220\u9664\u6389\u975E\u767D\u540D\u5355\u7684 api\u3002"),j=t(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// whitelistWorkerGlobalScope.ts</span>
<span class="token doc-comment comment">/**
 * \u8BBE\u5B9A web worker \u8FD0\u884C\u65F6\u767D\u540D\u5355\uFF0Cban \u6389\u6240\u6709\u4E0D\u5B89\u5168\u7684 api
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">whitelistWorkerGlobalScope</span><span class="token punctuation">(</span>list<span class="token operator">:</span> PropertyKey<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> whitelist <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> all <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>globalThis<span class="token punctuation">)</span><span class="token punctuation">;</span>
  all<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>whitelist<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">===</span> <span class="token string">&quot;window&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;window: &quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    Reflect<span class="token punctuation">.</span><span class="token function">deleteProperty</span><span class="token punctuation">(</span>globalThis<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u5168\u5C40\u503C\u7684\u767D\u540D\u5355
 */</span>
<span class="token keyword">const</span> whitelist<span class="token operator">:</span> <span class="token punctuation">(</span>
  <span class="token operator">|</span> <span class="token keyword">keyof</span> <span class="token keyword">typeof</span> global
  <span class="token operator">|</span> <span class="token keyword">keyof</span> WindowOrWorkerGlobalScope
  <span class="token operator">|</span> <span class="token string">&quot;console&quot;</span>
<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;globalThis&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;console&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;setTimeout&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;clearTimeout&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;setInterval&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;clearInterval&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;postMessage&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;onmessage&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;Reflect&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;Array&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;Map&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;Set&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;Function&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;Object&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;Boolean&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;String&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;Number&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;Math&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;Date&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;JSON&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token function">whitelistWorkerGlobalScope</span><span class="token punctuation">(</span>whitelist<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><p>\u7136\u540E\u5728\u6267\u884C\u7B2C\u4E09\u65B9\u4EE3\u7801\u524D\u5148\u6267\u884C\u4E0A\u9762\u7684\u4EE3\u7801</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> beforeCode <span class="token keyword">from</span> <span class="token string">&quot;./whitelistWorkerGlobalScope.js?raw&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">WebWorkerShadowbox</span> <span class="token keyword">implements</span> <span class="token class-name">IJavaScriptShadowbox</span> <span class="token punctuation">{</span>
  <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>worker<span class="token punctuation">.</span><span class="token function">terminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> worker<span class="token operator">!</span><span class="token operator">:</span> Worker<span class="token punctuation">;</span>
  <span class="token function">eval</span><span class="token punctuation">(</span>code<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u884C\u662F\u5173\u952E</span>
    <span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>beforeCode <span class="token operator">+</span> <span class="token string">&quot;\\n&quot;</span> <span class="token operator">+</span> code<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      type<span class="token operator">:</span> <span class="token string">&quot;application/javascript&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5176\u4ED6\u4EE3\u7801\u3002\u3002\u3002</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u7531\u4E8E\u6211\u4EEC\u4F7F\u7528 ts \u7F16\u5199\u6E90\u7801\uFF0C\u6240\u4EE5\u8FD8\u5FC5\u987B\u5C06 ts \u6253\u5305\u4E3A js bundle\uFF0C\u7136\u540E\u901A\u8FC7 vite \u7684 <code>?raw</code> \u4F5C\u4E3A\u5B57\u7B26\u4E32\u5F15\u5165\uFF0C\u4E0B\u9762\u543E\u8F88\u5199\u4E86\u4E00\u4E2A\u7B80\u5355\u7684\u63D2\u4EF6\u6765\u5B8C\u6210\u8FD9\u4EF6\u4E8B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig<span class="token punctuation">,</span> Plugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> reactRefresh <span class="token keyword">from</span> <span class="token string">&quot;@vitejs/plugin-react-refresh&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> checker <span class="token keyword">from</span> <span class="token string">&quot;vite-plugin-checker&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> build <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;esbuild&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> path <span class="token keyword">from</span> <span class="token string">&quot;path&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">buildScript</span><span class="token punctuation">(</span>scriptList<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> Plugin <span class="token punctuation">{</span>
  <span class="token keyword">const</span> _scriptList <span class="token operator">=</span> scriptList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">buildScript</span><span class="token punctuation">(</span>src<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      entryPoints<span class="token operator">:</span> <span class="token punctuation">[</span>src<span class="token punctuation">]</span><span class="token punctuation">,</span>
      outfile<span class="token operator">:</span> src<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> src<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;js&quot;</span><span class="token punctuation">,</span>
      format<span class="token operator">:</span> <span class="token string">&quot;iife&quot;</span><span class="token punctuation">,</span>
      bundle<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      platform<span class="token operator">:</span> <span class="token string">&quot;browser&quot;</span><span class="token punctuation">,</span>
      sourcemap<span class="token operator">:</span> <span class="token string">&quot;inline&quot;</span><span class="token punctuation">,</span>
      allowOverwrite<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6784\u5EFA\u5B8C\u6210: &quot;</span><span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> src<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&quot;vite-plugin-build-script&quot;</span><span class="token punctuation">,</span>

    <span class="token keyword">async</span> <span class="token function">configureServer</span><span class="token punctuation">(</span>server<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      server<span class="token punctuation">.</span>watcher<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>_scriptList<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> scriptSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>_scriptList<span class="token punctuation">)</span><span class="token punctuation">;</span>
      server<span class="token punctuation">.</span>watcher<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;change&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>filePath<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// console.log(&#39;change: &#39;, filePath)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>scriptSet<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">buildScript</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">async</span> <span class="token function">buildStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// console.log(&#39;buildStart: &#39;, this.meta.watchMode)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>watchMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        _scriptList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addWatchFile</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">await</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>_scriptList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>buildScript<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// https://vitejs.dev/config/</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">reactRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">checker</span><span class="token punctuation">(</span><span class="token punctuation">{</span> typescript<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">buildScript</span><span class="token punctuation">(</span><span class="token punctuation">[</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;src/utils/app/whitelistWorkerGlobalScope.ts&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div></div><p>\u73B0\u5728\uFF0C\u6211\u4EEC\u53EF\u4EE5\u770B\u5230 web worker \u4E2D\u7684\u5168\u5C40 api \u53EA\u6709\u767D\u540D\u5355\u4E2D\u7684\u90A3\u4E9B\u4E86\u3002</p><p><img src="`+k+'" alt="1635097498575"></p><blockquote><p>\u8FD9\u4F1A\u5BFC\u81F4 sourcemap \u9519\u8BEF\uFF0C\u6211\u4EEC\u5C06\u5728\u4E4B\u540E\u4F7F\u7528 esbuild-wasm \u5728\u6D4F\u89C8\u5668\u6784\u5EFA\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898</p></blockquote><h2 id="web-worker-\u6C99\u7BB1\u7684\u4E3B\u8981\u4F18\u52BF" tabindex="-1"><a class="header-anchor" href="#web-worker-\u6C99\u7BB1\u7684\u4E3B\u8981\u4F18\u52BF" aria-hidden="true">#</a> web worker \u6C99\u7BB1\u7684\u4E3B\u8981\u4F18\u52BF</h2><ul><li>\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528 chrome devtool \u8C03\u8BD5</li><li>\u76F4\u63A5\u652F\u6301 <code>console/setTimeout/setInterval</code> api</li><li>\u76F4\u63A5\u652F\u6301\u6D88\u606F\u901A\u4FE1\u7684 api</li></ul>',10);function P(L,B){const a=o("ExternalLinkIcon");return e(),c(l,null,[d,s("p",null,[m,w,h,s("a",g,[f,p(a)]),y]),v,s("p",null,[q,s("a",_,[x,p(a)]),S,W,M,E,I]),j],64)}var N=u(b,[["render",P]]);export{N as default};
