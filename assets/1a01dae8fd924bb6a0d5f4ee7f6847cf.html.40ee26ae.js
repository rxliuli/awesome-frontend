import{r as t,o as l,c as r,a as e,F as a,d,b as i}from"./app.9c7fb106.js";const n={},o=d('<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><blockquote><p>吾辈就是一个从 Java Web 后端转到前端的人。</p></blockquote><p>吾辈今天又在看到人说 <strong>前端很简单，而且还比后端工资高</strong>，这里吾辈还是想做一些澄清的。</p><h2 id="对话" tabindex="-1"><a class="header-anchor" href="#对话" aria-hidden="true">#</a> 对话</h2><ul><li>后端 A: 我发现这两年前端的工作特别好找，而且工资很高</li><li>后端 A：后端内卷太严重了。</li><li>后端 B: #无语</li><li>后端 B: 前端要会啥啊到底才能称得上前端</li><li>后端 A: 我们这边。H5+小程序 就行了</li><li>后端 A: 主要是 CSS 要能处理好。。。</li><li>后端 A: 设计做出来的东西要不能有折扣的做出来。。而不是向组件找不到妥协。。。。</li><li>后端 B：我感觉我很合适唉，虽然我没怎么做过小程序</li><li>后端 B: 有没有 Java 转前端的啊</li><li>吾辈：吾辈就是 @后端 B</li><li>吾辈：可能泥萌那是 2c 的业务，像吾辈这边偏向于 2b 的，业务和架构的复杂度相当高，事实上，吾辈这边的前端架构都已经需要微服务化了（即所谓的微前端）</li><li>后端 C：微前端</li><li>后端 A：不知道是不是后端的错觉。。感觉前端好简单啊，为啥还要比后端工资高。。</li><li>吾辈: 这其实有个错觉就是，前端开发岗位多，开发人员多，就一定好找工作。Java 还不是有很多培训班为市场注入了许多后端，而 web 其实也很糟糕，因为似乎所有人都开始觉得前端只要会 vuejs 加点 html/css/js 就可以开始工作了，恰好市场这两年的缺口还很大，所以培训班其实也为市场注入了相当的人员，导致招聘很难招，工作很难找。（不过不吹不黑，吾辈确实因为转到前端发生了发生了很多变化，尤其是在开源项目方面，之前基本不做，现在嘛，有时间就会做一些 #本质原因可能还是因为前端还不够成熟吧）</li><li>后端 A：不知道是不是后端的错觉。。感觉前端好简单啊，为啥还要比后端工资高。。。@吾辈</li><li>后端 D: 不是说前端比较抗骂嘛</li><li>吾辈：你什么时候产生了前端比后端工资高的错觉，就那吾辈的公司来说，前端 10-20，后端 golang 15-20，Java 18-35 (´-ι_-｀)</li><li>吾辈：另外前端技术栈迭代非常快，前后端的边界正在后移，想想之前后端还要负责模板引擎，路由，状态管理，逻辑代码，工程化方面的任务，现在，这些都成为了前端的任务，而且之前的任务 ui 还原还没少，而后端在吾辈看来的一个主要问题在于用户量不够的情况下基本没得折腾，意味着许多 idea 无法在生产环境落地，后端技术栈迭代也很慢（主要是由于风险更高以及成熟度），现在还是 Java 8，而前端，基本都是跟着版本跑（当然这会带来 js 疲劳暂且不说），生产环境吾辈已经上了 ts 4（半年之前更新的大版本）。还有一点我不确定是否是常事，一般后端似乎没有自己维护的开源项目，这很显然是没法在生产之外尝鲜新技术的，一年经验用十年，不外如是。</li><li>吾辈：另外觉得前端简单的可以看一下这一系列谈话（前后端之间的，2016 年的，现在前端更加复杂化了）<a href="/p/333051b25bd047e8864d161a9a6982de">2016 年里做前端是怎样一种体验 </a></li></ul><h2 id="感想" tabindex="-1"><a class="header-anchor" href="#感想" aria-hidden="true">#</a> 感想</h2><p>就吾辈个人的感觉而言，似乎许多后端还不清楚前端领域到底发生了什么，觉得前端还仅仅是 <strong>切图</strong>，而这显然是个错误。</p>',7),h=i("前端近几年发展迅速，几乎可以说是日新月异，尽管可能大部分都会被扫进历史的垃圾堆，但至少能够切身参与到发展的历史进程中。而且，现在前端要解决的问题域也在发生变化，在传统前端眼里，CSS（UI 还原）和兼容性问题是最重要的，但现在，已然天翻地覆，前端本身的知识领域也在发生割裂，参考: "),s={href:"https://css-tricks.com/the-great-divide/",target:"_blank",rel:"noopener noreferrer"},u=i("大分裂"),c=i("。"),b=e("blockquote",null,[e("p",null,"当然在很久以前，前端也有独特的「复杂问题」，比如我刚工作那会需要掌握的精确到 1px 的兼容到 IE6 的高保真切图技巧，但这类问题更偏向「手艺人」的工作，而非工程师的技术价值体现，更重要的是，它无法被沉淀为技术人的长期价值。")],-1),p=i("而后端，经过几十年的长足发展，已经非常完善，似乎没有太大的变化了。当然，就像 "),f={href:"https://www.zhihu.com/question/375448022",target:"_blank",rel:"noopener noreferrer"},g=i("前端为什么会越来越复杂？"),k=i(" 所言，"),m=e("strong",null,"「后端是在业务方面革自己的命，使劲在平台化、中台化发展，然后把具体业务这块解放给前端」",-1),v=i("。"),A=d("<table><thead><tr><th>分类</th><th>前端</th><th>后端</th></tr></thead><tbody><tr><td>发展速度</td><td>迅速</td><td>缓慢</td></tr><tr><td>发展程度</td><td>发展中</td><td>成熟</td></tr><tr><td>试错成本</td><td>低</td><td>高（后台服务炸掉是很难被接受的）</td></tr><tr><td>知识价值</td><td>低（发展迅速带来的疲劳）</td><td>高</td></tr><tr><td>入门难度</td><td>低（学会三大件就能写）</td><td>高</td></tr><tr><td>个人成长机会</td><td>一般</td><td>低（很难有机会应用自己的轮子）</td></tr></tbody></table>",1),j=i("注：以上均为吾辈在小公司的一些体会，并不一定意味着"),q=e("strong",null,"正确",-1),w=i("。而且，前端并不一定意味着简单，也有可能是根本没有接触过复杂的应用场景。例如前端工程化、智能化、编辑器、富文本、可视化图表之类的。当然，前后端其实面临着相似的问题：在小公司很多东西并没有使用场景，低层次的工作重复十年也做不出来一个 "),x={href:"https://juejin.cn/post/6924591257452806152/",target:"_blank",rel:"noopener noreferrer"},B=i("设计稿智能生成代码 imgcook"),J=i(" 注 2：但同时，吾辈也不得不承认两者确实在天花板上有着差异，尤其而且是在大型互联网公司（例如阿里），参考："),_={href:"https://blog.alswl.com/2019/07/frontend-backend-ceiling/",target:"_blank",rel:"noopener noreferrer"},S=i("漫谈前后端天花板");n.render=function(d,i){const n=t("OutboundLink");return l(),r(a,null,[o,e("p",null,[h,e("a",s,[u,e(n)]),c]),b,e("p",null,[p,e("a",f,[g,e(n)]),k,m,v]),A,e("blockquote",null,[e("p",null,[j,q,w,e("a",x,[B,e(n)]),J,e("a",_,[S,e(n)])])])],64)};export{n as default};
