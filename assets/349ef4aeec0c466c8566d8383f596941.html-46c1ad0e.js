import{_ as t,M as o,p as c,q as i,R as n,t as s,N as e,a1 as p}from"./framework-96b046e1.js";const l="/assets/994d6f1aee71444b983d982bf216fd1c-c68b9849.png",u="/assets/6dd72b1c51114beebd38ba4f65ca4976-fe204b88.png",r="/assets/c25e1b9401594c90b73adab510439194-055e85c6.png",d={},k=p(`<h2 id="场景" tabindex="-1"><a class="header-anchor" href="#场景" aria-hidden="true">#</a> 场景</h2><p>graphql 提供前后端一致的 api 架构元数据，同时通过请求合并、按需获取加快 web 与后端交互的性能。</p><h2 id="结合-ts-使用" tabindex="-1"><a class="header-anchor" href="#结合-ts-使用" aria-hidden="true">#</a> 结合 ts 使用</h2><p>基本思路</p><ol><li>扫描 <code>gql</code> 文件中的查询文件</li><li>生成类型定义与 document 对象</li><li>使用这些类型定义</li></ol><h2 id="使用步骤" tabindex="-1"><a class="header-anchor" href="#使用步骤" aria-hidden="true">#</a> 使用步骤</h2><blockquote><p>以下使用 github api@v4 进行演示</p></blockquote><p>获取后端的元数据</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> i <span class="token parameter variable">-g</span> get-graphql-schema
get-graphql-schema https://docs.github.com/public/schema.docs.graphql <span class="token operator">&gt;</span> schema.graphql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,9),v={href:"https://stackoverflow.com/questions/37397886/get-graphql-whole-schema-query",target:"_blank",rel:"noopener noreferrer"},m=p(`<p>安装基础 sdk</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> i @apollo/client graphql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装代码生成器相关依赖</p><ul><li><code>@graphql-codegen/cli</code> 基础 cli</li><li><code>@graphql-codegen/typescript</code> ts 插件</li><li><code>@graphql-codegen/typescript-operations</code> ts 操作生成插件</li><li><code>@graphql-codegen/typed-document-node</code> 生成 document 对象</li><li><code>@graphql-codegen/near-operation-file-preset</code> ts 预设配置</li></ul><p>创建配置 <em>codegen.yml</em></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">overwrite</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">schema</span><span class="token punctuation">:</span> schema.graphql
<span class="token key atrule">generates</span><span class="token punctuation">:</span>
  <span class="token key atrule">./src/graphql.generated.ts</span><span class="token punctuation">:</span>
    <span class="token key atrule">plugins</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> typescript
  <span class="token key atrule">./</span><span class="token punctuation">:</span>
    <span class="token key atrule">documents</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> src/<span class="token important">**/*.gql</span>
    <span class="token key atrule">preset</span><span class="token punctuation">:</span> near<span class="token punctuation">-</span>operation<span class="token punctuation">-</span>file
    <span class="token key atrule">presetConfig</span><span class="token punctuation">:</span>
      <span class="token key atrule">baseTypesPath</span><span class="token punctuation">:</span> ./src/graphql.generated.ts
      <span class="token key atrule">extension</span><span class="token punctuation">:</span> .generated.ts
    <span class="token key atrule">plugins</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> typescript<span class="token punctuation">-</span>operations
      <span class="token punctuation">-</span> typed<span class="token punctuation">-</span>document<span class="token punctuation">-</span>node
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <em>src/api/RepoQuery.gql</em> 编写 graphql 查询语句</p><blockquote><p>注: 在非 react 项目中，请从 <code>@apollo/client/core</code> 导入所有非 react 的内容。</p></blockquote><div class="language-gql line-numbers-mode" data-ext="gql"><pre class="language-gql"><code>fragment Repo on Repository {
  id
  name
}

query findRepoStar($name: String!, $owner: String!) {
  repository(name: $name, owner: $owner) {
    ...Repo
    stargazerCount
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 cli 生成类型定义</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>pnpm graphql<span class="token operator">-</span>codegen <span class="token operator">--</span>config codegen<span class="token punctuation">.</span>yml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>生成结果大致如下，基本上就是参数和结果类型</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// src/api/RepoQuery.generated.ts</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> Types <span class="token keyword">from</span> <span class="token string">&#39;../graphql.generated&#39;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> TypedDocumentNode <span class="token keyword">as</span> DocumentNode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@graphql-typed-document-node/core&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">RepoFragment</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  __typename<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">&#39;Repository&#39;</span>
  id<span class="token operator">:</span> <span class="token builtin">string</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">FindRepoStarQueryVariables</span> <span class="token operator">=</span> Types<span class="token punctuation">.</span>Exact<span class="token operator">&lt;</span><span class="token punctuation">{</span>
  name<span class="token operator">:</span> Types<span class="token punctuation">.</span>Scalars<span class="token punctuation">[</span><span class="token string">&#39;String&#39;</span><span class="token punctuation">]</span>
  owner<span class="token operator">:</span> Types<span class="token punctuation">.</span>Scalars<span class="token punctuation">[</span><span class="token string">&#39;String&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token operator">&gt;</span>

<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">FindRepoStarQuery</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  __typename<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">&#39;Query&#39;</span>
  repository<span class="token operator">?</span><span class="token operator">:</span>
    <span class="token operator">|</span> <span class="token punctuation">{</span>
        __typename<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">&#39;Repository&#39;</span>
        stargazerCount<span class="token operator">:</span> <span class="token builtin">number</span>
        id<span class="token operator">:</span> <span class="token builtin">string</span>
        name<span class="token operator">:</span> <span class="token builtin">string</span>
      <span class="token punctuation">}</span>
    <span class="token operator">|</span> <span class="token keyword">null</span>
    <span class="token operator">|</span> <span class="token keyword">undefined</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> RepoFragmentDoc <span class="token operator">=</span> <span class="token punctuation">{</span>
  kind<span class="token operator">:</span> <span class="token string">&#39;Document&#39;</span><span class="token punctuation">,</span>
  definitions<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      kind<span class="token operator">:</span> <span class="token string">&#39;FragmentDefinition&#39;</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;Repo&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      typeCondition<span class="token operator">:</span> <span class="token punctuation">{</span>
        kind<span class="token operator">:</span> <span class="token string">&#39;NamedType&#39;</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;Repository&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      selectionSet<span class="token operator">:</span> <span class="token punctuation">{</span>
        kind<span class="token operator">:</span> <span class="token string">&#39;SelectionSet&#39;</span><span class="token punctuation">,</span>
        selections<span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&#39;Field&#39;</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;id&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&#39;Field&#39;</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token builtin">unknown</span> <span class="token keyword">as</span> DocumentNode<span class="token operator">&lt;</span>RepoFragment<span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">&gt;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> FindRepoStarDocument <span class="token operator">=</span> <span class="token punctuation">{</span>
  kind<span class="token operator">:</span> <span class="token string">&#39;Document&#39;</span><span class="token punctuation">,</span>
  definitions<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      kind<span class="token operator">:</span> <span class="token string">&#39;OperationDefinition&#39;</span><span class="token punctuation">,</span>
      operation<span class="token operator">:</span> <span class="token string">&#39;query&#39;</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;findRepoStar&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      variableDefinitions<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          kind<span class="token operator">:</span> <span class="token string">&#39;VariableDefinition&#39;</span><span class="token punctuation">,</span>
          variable<span class="token operator">:</span> <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&#39;Variable&#39;</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          type<span class="token operator">:</span> <span class="token punctuation">{</span>
            kind<span class="token operator">:</span> <span class="token string">&#39;NonNullType&#39;</span><span class="token punctuation">,</span>
            type<span class="token operator">:</span> <span class="token punctuation">{</span>
              kind<span class="token operator">:</span> <span class="token string">&#39;NamedType&#39;</span><span class="token punctuation">,</span>
              name<span class="token operator">:</span> <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;String&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          kind<span class="token operator">:</span> <span class="token string">&#39;VariableDefinition&#39;</span><span class="token punctuation">,</span>
          variable<span class="token operator">:</span> <span class="token punctuation">{</span>
            kind<span class="token operator">:</span> <span class="token string">&#39;Variable&#39;</span><span class="token punctuation">,</span>
            name<span class="token operator">:</span> <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;owner&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          type<span class="token operator">:</span> <span class="token punctuation">{</span>
            kind<span class="token operator">:</span> <span class="token string">&#39;NonNullType&#39;</span><span class="token punctuation">,</span>
            type<span class="token operator">:</span> <span class="token punctuation">{</span>
              kind<span class="token operator">:</span> <span class="token string">&#39;NamedType&#39;</span><span class="token punctuation">,</span>
              name<span class="token operator">:</span> <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;String&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      selectionSet<span class="token operator">:</span> <span class="token punctuation">{</span>
        kind<span class="token operator">:</span> <span class="token string">&#39;SelectionSet&#39;</span><span class="token punctuation">,</span>
        selections<span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            kind<span class="token operator">:</span> <span class="token string">&#39;Field&#39;</span><span class="token punctuation">,</span>
            name<span class="token operator">:</span> <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;repository&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            arguments<span class="token operator">:</span> <span class="token punctuation">[</span>
              <span class="token punctuation">{</span>
                kind<span class="token operator">:</span> <span class="token string">&#39;Argument&#39;</span><span class="token punctuation">,</span>
                name<span class="token operator">:</span> <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                value<span class="token operator">:</span> <span class="token punctuation">{</span>
                  kind<span class="token operator">:</span> <span class="token string">&#39;Variable&#39;</span><span class="token punctuation">,</span>
                  name<span class="token operator">:</span> <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;name&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token punctuation">{</span>
                kind<span class="token operator">:</span> <span class="token string">&#39;Argument&#39;</span><span class="token punctuation">,</span>
                name<span class="token operator">:</span> <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;owner&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                value<span class="token operator">:</span> <span class="token punctuation">{</span>
                  kind<span class="token operator">:</span> <span class="token string">&#39;Variable&#39;</span><span class="token punctuation">,</span>
                  name<span class="token operator">:</span> <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;owner&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
            selectionSet<span class="token operator">:</span> <span class="token punctuation">{</span>
              kind<span class="token operator">:</span> <span class="token string">&#39;SelectionSet&#39;</span><span class="token punctuation">,</span>
              selections<span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
                  kind<span class="token operator">:</span> <span class="token string">&#39;FragmentSpread&#39;</span><span class="token punctuation">,</span>
                  name<span class="token operator">:</span> <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;Repo&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span>
                  kind<span class="token operator">:</span> <span class="token string">&#39;Field&#39;</span><span class="token punctuation">,</span>
                  name<span class="token operator">:</span> <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">&#39;stargazerCount&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>RepoFragmentDoc<span class="token punctuation">.</span>definitions<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token builtin">unknown</span> <span class="token keyword">as</span> DocumentNode<span class="token operator">&lt;</span>FindRepoStarQuery<span class="token punctuation">,</span> FindRepoStarQueryVariables<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以这样使用它</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  query<span class="token operator">:</span> FindRepoStarDocument<span class="token punctuation">,</span>
  variables<span class="token operator">:</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;liuli-tools&#39;</span><span class="token punctuation">,</span>
    owner<span class="token operator">:</span> <span class="token string">&#39;rxliuli&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res: &#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>repository<span class="token operator">?.</span>stargazerCount<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="jetbrains-ide-支持" tabindex="-1"><a class="header-anchor" href="#jetbrains-ide-支持" aria-hidden="true">#</a> Jetbrains IDE 支持</h2>`,16),b={href:"https://plugins.jetbrains.com/plugin/8097",target:"_blank",rel:"noopener noreferrer"},g=p(`<li><p>创建 graphql 基础配置文件 <em>.graphqlconfig</em></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;github GraphQL Schema&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;schemaPath&quot;</span><span class="token operator">:</span> <span class="token string">&quot;schema.graphql&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;extensions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;endpoints&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;Default GraphQL Endpoint&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://api.github.com/graphql&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;headers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;user-agent&quot;</span><span class="token operator">:</span> <span class="token string">&quot;JS GraphQL&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;Authorization&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bearer \${env:GH_TOKEN}&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;introspect&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>最终效果 <img src="`+l+'" alt="1635317727128"></p></li>',2),h=n("h2",{id:"vscode-支持",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vscode-支持","aria-hidden":"true"},"#"),s(" VSCode 支持")],-1),y={href:"https://marketplace.visualstudio.com/items?itemName=GraphQL.vscode-graphql",target:"_blank",rel:"noopener noreferrer"},w=p(`<li><p>在根目录添加配置 <em>.graphqlconfig</em></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">client</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">service</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;github GraphQL Schema&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">localSchemaFile</span><span class="token operator">:</span> <span class="token string">&#39;./schema.graphql&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>最终效果 <img src="`+u+'" alt="1635316734084"></p></li>',2),f=n("blockquote",null,[n("p",null,"注：在 monorepo 中，vscode 插件仅支持在根目录添加配置文件，所以其它子目录中的配置仅用于与生态中的其他工具结合。 graphql 插件不支持查询参数的体验，只有一个非常简单的输入框")],-1),q=n("h2",{id:"集成到-vite",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#集成到-vite","aria-hidden":"true"},"#"),s(" 集成到 vite")],-1),_=n("p",null,[s("关于为什么要将自动生成作为 vite 插件集成，之前在 "),n("a",{href:":/3e5d207024444d3e9f8395c1302d6201"},"是否需要将 cli 工具集成到构建工具中"),s(" 中已经说明了。")],-1),x={href:"https://github.com/danielwaltz/vite-plugin-graphql-codegen",target:"_blank",rel:"noopener noreferrer"},S=p(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Plugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> CodegenContext<span class="token punctuation">,</span> generate<span class="token punctuation">,</span> loadContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@graphql-codegen/cli&#39;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">codegen</span><span class="token punctuation">(</span>watch<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> codegenContext <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">loadContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  codegenContext<span class="token punctuation">.</span><span class="token function">updateConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span> watch <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">generate</span><span class="token punctuation">(</span>codegenContext<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Something went wrong.&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">graphQLCodegen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Plugin <span class="token punctuation">{</span>
  <span class="token keyword">let</span> codegenContext<span class="token operator">:</span> CodegenContext

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;rollup-plugin-graphql-codegen&#39;</span><span class="token punctuation">,</span>
    <span class="token keyword">async</span> <span class="token function">buildStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// noinspection ES6MissingAwait</span>
      <span class="token function">codegen</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>watchMode<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里其实还可以使用 <code>worker_threads</code> 尝试多线程加速</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Plugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> generate<span class="token punctuation">,</span> loadContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@graphql-codegen/cli&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> isMainThread<span class="token punctuation">,</span> parentPort<span class="token punctuation">,</span> Worker <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;worker_threads&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> expose<span class="token punctuation">,</span> wrap <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;comlink&#39;</span>
<span class="token keyword">import</span> nodeEndpoint <span class="token keyword">from</span> <span class="token string">&#39;comlink/dist/umd/node-adapter&#39;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">codegen</span><span class="token punctuation">(</span>watch<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> codegenContext <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">loadContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  codegenContext<span class="token punctuation">.</span><span class="token function">updateConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span> watch <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">generate</span><span class="token punctuation">(</span>codegenContext<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Something went wrong.&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isMainThread<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">expose</span><span class="token punctuation">(</span>codegen<span class="token punctuation">,</span> <span class="token function">nodeEndpoint</span><span class="token punctuation">(</span>parentPort<span class="token operator">!</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">graphQLCodegen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Plugin <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;rollup-plugin-graphql-codegen&#39;</span><span class="token punctuation">,</span>
    <span class="token keyword">async</span> <span class="token function">buildStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> worker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span>__filename<span class="token punctuation">)</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> codegenWorker <span class="token operator">=</span> wrap<span class="token operator">&lt;</span><span class="token punctuation">(</span>watch<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
          <span class="token function">nodeEndpoint</span><span class="token punctuation">(</span>worker<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
        <span class="token comment">// noinspection ES6MissingAwait</span>
        <span class="token function">codegenWorker</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>watchMode<span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        worker<span class="token punctuation">.</span><span class="token function">unref</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),N={href:"https://www.npmjs.com/package/@liuli-util/rollup-plugin-graphql-codegen",target:"_blank",rel:"noopener noreferrer"},C=p(`<hr><p>更新，默认包含 <code>@graphql-codegen/cli</code>，不再需要单独维护 <em>codegen.yml</em> 配置文件（当然仍然可以自行维护），使用方法</p><p>安装依赖</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> i <span class="token parameter variable">-D</span> @liuli-util/rollup-plugin-graphql-codegen @graphql-typed-document-node/core
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>配置插件</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// vite.config.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  gql2TsConfig<span class="token punctuation">,</span>
  graphQLCodegen<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@liuli-util/rollup-plugin-graphql-codegen&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">graphQLCodegen</span><span class="token punctuation">(</span>gql2TsConfig<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装-chrome-插件" tabindex="-1"><a class="header-anchor" href="#安装-chrome-插件" aria-hidden="true">#</a> 安装 chrome 插件</h2>`,7),R={href:"https://chrome.google.com/webstore/detail/ndlbedplllcgconngcnfmkadhokfaaln/",target:"_blank",rel:"noopener noreferrer"},Q=n("p",null,[n("img",{src:r,alt:"1637290440947"})],-1),D=n("h2",{id:"参考",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),s(" 参考")],-1),F={href:"https://www.apollographql.com/docs/react/get-started/",target:"_blank",rel:"noopener noreferrer"},T={href:"https://jimkyndemeyer.github.io/js-graphql-intellij-plugin/",target:"_blank",rel:"noopener noreferrer"},j={href:"https://www.graphql-code-generator.com/",target:"_blank",rel:"noopener noreferrer"},L=n("h2",{id:"其他方案",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#其他方案","aria-hidden":"true"},"#"),s(" 其他方案？")],-1),V=n("ul",null,[n("li",null,[s("使用 rollup 插件 "),n("code",null,"@rollup/plugin-graphql"),s(" 直接将 "),n("code",null,".graphql"),s(" 文件视为可导入的 es 模块 -- 主要问题是要处理相关工具的兼容性，主要包括 jest/eslint。")]),n("li",null,"将 graphql 转成复杂的类型，然后运行时将 js 对象转换为 graphql 查询对象")],-1);function E(G,P){const a=o("ExternalLinkIcon");return c(),i("div",null,[k,n("blockquote",null,[n("p",null,[s("参考："),n("a",v,[s("https://stackoverflow.com/questions/37397886/get-graphql-whole-schema-query"),e(a)])])]),m,n("ol",null,[n("li",null,[n("p",null,[s("安装插件 "),n("a",b,[s("JS GraphQL"),e(a)])])]),g]),h,n("ol",null,[n("li",null,[n("p",null,[s("安装插件 "),n("a",y,[s("GraphQL"),e(a)])])]),w]),f,q,_,n("blockquote",null,[n("p",null,[n("a",x,[s("vite-plugin-graphql-codegen"),e(a)]),s(" 监视模式实际上有 bug，所以自行维护一个 rollup 插件")])]),S,n("blockquote",null,[n("p",null,[s("已发布至 "),n("a",N,[s("@liuli-util/rollup-plugin-graphql-codegen"),e(a)])])]),C,n("blockquote",null,[n("p",null,[n("a",R,[s("GraphQL Network Inspector"),e(a)])])]),Q,D,n("ul",null,[n("li",null,[n("a",F,[s("@apollo/client"),e(a)])]),n("li",null,[n("a",T,[s("jetbrains ide 使用 graphql"),e(a)])]),n("li",null,[n("a",j,[s("graphql 代码生成器"),e(a)])])]),L,V])}const z=t(d,[["render",E],["__file","349ef4aeec0c466c8566d8383f596941.html.vue"]]);export{z as default};
