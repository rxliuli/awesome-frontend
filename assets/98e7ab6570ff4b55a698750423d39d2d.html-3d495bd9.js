import{_ as p,M as o,p as c,q as l,R as n,t as s,N as t,a1 as e}from"./framework-96b046e1.js";const i={},r=e('<h2 id="实验-marked" tabindex="-1"><a class="header-anchor" href="#实验-marked" aria-hidden="true">#</a> [实验] marked</h2><p>请使用 marked 而非 react-markdown 之类的集成库，后者非常大，基本对比</p><table><thead><tr><th>对比</th><th>marked</th><th>react-markdown</th></tr></thead><tbody><tr><td>star</td><td>27.2k</td><td>8.5k</td></tr><tr><td>大小</td><td>72kb</td><td>348kb</td></tr></tbody></table>',3),u={href:"https://www.npmtrends.com/markdown-it-vs-marked-vs-react-markdown",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/markedjs/marked/issues/655#issuecomment-712380889",target:"_blank",rel:"noopener noreferrer"},d=n("code",null,'target="_blank"',-1),m=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">linkRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">marked</span><span class="token punctuation">.</span><span class="token function">Renderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> linkRenderer <span class="token operator">=</span> renderer<span class="token punctuation">.</span>link
  renderer<span class="token punctuation">.</span><span class="token function-variable function">link</span> <span class="token operator">=</span> <span class="token punctuation">(</span>href<span class="token punctuation">,</span> title<span class="token punctuation">,</span> text<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> html <span class="token operator">=</span> <span class="token function">linkRenderer</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>renderer<span class="token punctuation">,</span> href<span class="token punctuation">,</span> title<span class="token punctuation">,</span> text<span class="token punctuation">)</span>
    <span class="token keyword">return</span> html<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^&lt;a </span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;a target=&quot;_blank&quot; rel=&quot;nofollow&quot; &#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> renderer
<span class="token punctuation">}</span>

<span class="token function">marked</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>children<span class="token punctuation">,</span> <span class="token punctuation">{</span> renderer<span class="token operator">:</span> <span class="token function">linkRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mdast-系列" tabindex="-1"><a class="header-anchor" href="#mdast-系列" aria-hidden="true">#</a> mdast 系列</h2>`,2),v={href:"https://github.com/syntax-tree/mdast",target:"_blank",rel:"noopener noreferrer"},b=e(`<p>非常灵活的 markdown 工具包，可以解析和序列化 markdown，相比于其他库默认序列化为 html 的行为，它可以仅解析 markdown 为 ast，然后对 ast 进行修改，并提供了各种各样的工具。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> fromMarkdown <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;mdast-util-from-markdown&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> gfmFromMarkdown<span class="token punctuation">,</span> gfmToMarkdown <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;mdast-util-gfm&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> toMarkdown <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;mdast-util-to-markdown&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> gfm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;micromark-extension-gfm&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> visit <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;unist-util-visit&#39;</span>

<span class="token keyword">const</span> root <span class="token operator">=</span> <span class="token function">fromMarkdown</span><span class="token punctuation">(</span><span class="token string">&#39;## Hello **World**!&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  extensions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">gfm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  mdastExtensions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">gfmFromMarkdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token function">visit</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>type<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
  <span class="token function">toMarkdown</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    extensions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">gfmToMarkdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),h={href:"https://www.npmjs.com/package/@liuli-util/markdown-util",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/remarkjs/remark",target:"_blank",rel:"noopener noreferrer"},w=n("h2",{id:"推荐-level",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#推荐-level","aria-hidden":"true"},"#"),s(" [推荐] level")],-1),g={href:"https://www.npmjs.com/package/level",target:"_blank",rel:"noopener noreferrer"},_=e(`<p>一个 kv 键值工具库，支持 nodejs 和浏览器，使用起来非常简单。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Level <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;level&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> kv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Level</span><span class="token punctuation">(</span><span class="token string">&#39;map-playground-next&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">await</span> kv<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> kv<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// world</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function y(x,q){const a=o("ExternalLinkIcon");return c(),l("div",null,[r,n("blockquote",null,[n("p",null,[s("下载量对比详情参考："),n("a",u,[s("https://www.npmtrends.com/markdown-it-vs-marked-vs-react-markdown"),t(a)])])]),n("p",null,[s("自定义链接生成逻辑请参考 "),n("a",k,[s("https://github.com/markedjs/marked/issues/655#issuecomment-712380889"),t(a)]),s("，下面是生成的链接包含 "),d,s(" 属性")]),m,n("blockquote",null,[n("p",null,[n("a",v,[s("github"),t(a)])])]),b,n("p",null,[s("但它的 lib 太过分散，很难找到正确想要的社区 lib，所以自行维护了 "),n("a",h,[s("@liuli-util/markdown-util"),t(a)]),s("，用于集中导出处理 markdown 需要的常用模块和功能。")]),n("blockquote",null,[n("p",null,[s("相比于 "),n("a",f,[s("remark"),t(a)]),s("，更推荐 mdast，它们的性能有比较大的差距。")])]),w,n("blockquote",null,[n("p",null,[n("a",g,[s("npm"),t(a)])])]),_])}const j=p(i,[["render",y],["__file","98e7ab6570ff4b55a698750423d39d2d.html.vue"]]);export{j as default};
