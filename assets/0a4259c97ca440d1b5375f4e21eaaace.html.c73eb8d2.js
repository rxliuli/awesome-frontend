import{r as e,o,c,a as n,d as p,F as l,b as s,e as t}from"./app.a472134f.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";var u="/assets/8445c03f200d46229abaab35ef6c4ea7.8b497a7b.png",i="/assets/46116b80afd84b45a11b57ac67e1550e.b5d4528a.gif";const k={},d=n("h2",{id:"\u573A\u666F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u573A\u666F","aria-hidden":"true"},"#"),s(" \u573A\u666F")],-1),b=n("p",null,"\u6709\u65F6\u5019\u9700\u8981\u4E0E\u5176\u4ED6\u7A0B\u5E8F\u8FDB\u884C\u4EA4\u4E92\u65F6\uFF0C\u81EA\u5B9A\u4E49\u534F\u8BAE\u662F\u4E00\u4E2A\u4E0D\u9519\u7684\u9009\u62E9 -- \u5B83\u80FD\u5728\u7A0B\u5E8F\u4E3A\u542F\u52A8\u65F6\u542F\u52A8\u7A0B\u5E8F\u7136\u540E\u5904\u7406\u5176\u5B83\u7A0B\u5E8F\u7684\u52A8\u4F5C\uFF0C\u800C\u8FD9\u662F\u5176\u5B83\u89E3\u51B3\u65B9\u6848\uFF0C\u5305\u62EC HTTP \u8BF7\u6C42\u3001\u5171\u4EAB\u6570\u636E\u5E93\u4E0D\u80FD\u6BD4\u7684\u3002\u5176\u5B9E\u65E5\u5E38\u751F\u6D3B\u4E2D\u4E5F\u6709\u73B0\u6210\u7684\u4F8B\u5B50\uFF0C\u8FC5\u96F7\u7684\u81EA\u5B9A\u4E49\u534F\u8BAE\u4E0B\u8F7D\u94FE\u63A5\u3001BitTorrent \u534F\u8BAE\u3001\u767E\u5EA6\u7F51\u76D8\u542F\u52A8\u672C\u5730\u5BA2\u6237\u7AEF\u7B49\u7B49\u3002",-1),m=n("h2",{id:"\u4F7F\u7528",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4F7F\u7528","aria-hidden":"true"},"#"),s(" \u4F7F\u7528")],-1),h=s("\u53C2\u8003: "),g={href:"https://www.electronjs.org/docs/api/app#appsetasdefaultprotocolclientprotocol-path-args",target:"_blank",rel:"noopener noreferrer"},_=s("\u5C06\u5F53\u524D\u53EF\u6267\u884C\u6587\u4EF6\u8BBE\u7F6E\u4E3A\u534F\u8BAE\u7684\u9ED8\u8BA4\u5904\u7406\u7A0B\u5E8F\uFF08\u6CE8\u518C\u8868\u7EA7\u522B\uFF09"),f=t('<ol><li>\u8BA9\u7A0B\u5E8F\u4FDD\u6301\u5355\u4F8B\u542F\u52A8</li><li>\u8BBE\u7F6E\u5BA2\u6237\u7AEF\u652F\u6301\u7684\u534F\u8BAE\uFF08\u5728 Windows \u4E2D\u4F1A\u5199\u5165\u5230\u6CE8\u518C\u8868\uFF09</li><li>\u5904\u7406\u547D\u4EE4\u884C\u53C2\u6570\u627E\u5230\u5176\u4E2D\u9700\u8981\u7684 <code>url</code> \u4FE1\u606F</li><li>\u76D1\u542C <code>ready</code> \u548C <code>second-instance</code> \u4E8B\u4EF6</li></ol><h3 id="\u8BA9\u7A0B\u5E8F\u4FDD\u6301\u5355\u4F8B\u542F\u52A8" tabindex="-1"><a class="header-anchor" href="#\u8BA9\u7A0B\u5E8F\u4FDD\u6301\u5355\u4F8B\u542F\u52A8" aria-hidden="true">#</a> \u8BA9\u7A0B\u5E8F\u4FDD\u6301\u5355\u4F8B\u542F\u52A8</h3>',2),w=s("\u53C2\u8003: "),y={href:"https://www.electronjs.org/docs/api/app#apprequestsingleinstancelock",target:"_blank",rel:"noopener noreferrer"},v=s("app.requestSingleInstanceLock()"),q=s(" \u6CE8: \u4EC5\u5728\u5355\u4F8B\u6A21\u5F0F\u4E0B\u624D\u80FD\u76D1\u542C "),x=n("code",null,"second-instance",-1),P=s(" \u4E8B\u4EF6"),j=t(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u8BF7\u6C42\u5355\u4F8B\u9501\uFF0C\u907F\u514D\u6253\u5F00\u591A\u4E2A electron \u5B9E\u4F8B</span>
<span class="token keyword">const</span> gotTheLock <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">requestSingleInstanceLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>gotTheLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  app<span class="token punctuation">.</span><span class="token function">quit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="\u8BBE\u7F6E\u5BA2\u6237\u7AEF\u652F\u6301\u7684\u534F\u8BAE-\u5728-windows-\u4E2D\u4F1A\u5199\u5165\u5230\u6CE8\u518C\u8868" tabindex="-1"><a class="header-anchor" href="#\u8BBE\u7F6E\u5BA2\u6237\u7AEF\u652F\u6301\u7684\u534F\u8BAE-\u5728-windows-\u4E2D\u4F1A\u5199\u5165\u5230\u6CE8\u518C\u8868" aria-hidden="true">#</a> \u8BBE\u7F6E\u5BA2\u6237\u7AEF\u652F\u6301\u7684\u534F\u8BAE\uFF08\u5728 Windows \u4E2D\u4F1A\u5199\u5165\u5230\u6CE8\u518C\u8868\uFF09</h3>`,2),B=s("\u53C2\u8003: "),D={href:"https://www.electronjs.org/docs/api/app#appsetasdefaultprotocolclientprotocol-path-args",target:"_blank",rel:"noopener noreferrer"},E=s("app.setAsDefaultProtocolClient(protocol[, path, args])"),C=t(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> app <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;electron&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> path <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u5BA2\u6237\u7AEF\u9ED8\u8BA4\u652F\u6301\u7684\u534F\u8BAE
 */</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">DefaultProtocolClient</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">public</span> <span class="token keyword">readonly</span> protocol<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * \u6CE8\u518C\u4E00\u4E2A\u9ED8\u8BA4\u652F\u6301\u6253\u5F00\u7684\u534F\u8BAE
   */</span>
  <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5F00\u53D1\u6A21\u5F0F\u4E0B\u5728 window \u8FD0\u884C\u9700\u8981\u505A\u517C\u5BB9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>
      process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&quot;development&quot;</span> <span class="token operator">&amp;&amp;</span>
      process<span class="token punctuation">.</span>platform <span class="token operator">===</span> <span class="token string">&quot;win32&quot;</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8BBE\u7F6E electron.exe \u548C app \u7684\u8DEF\u5F84</span>
      app<span class="token punctuation">.</span><span class="token function">setAsDefaultProtocolClient</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>protocol<span class="token punctuation">,</span> process<span class="token punctuation">.</span>execPath<span class="token punctuation">,</span> <span class="token punctuation">[</span>
        path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      app<span class="token punctuation">.</span><span class="token function">setAsDefaultProtocolClient</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>protocol<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * \u4ECE\u547D\u4EE4\u884C\u53C2\u6570\u4E2D\u627E\u5230 url
   * <span class="token keyword">@param</span> <span class="token parameter">argv</span>
   */</span>
  <span class="token function">findUrl</span><span class="token punctuation">(</span>argv<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> regExp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">^</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>protocol<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">://</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> argv<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> regExp<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> defaultProtocolClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultProtocolClient</span><span class="token punctuation">(</span><span class="token string">&quot;custom-protocol&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> defaultProtocolClient<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h3 id="\u5904\u7406\u547D\u4EE4\u884C\u53C2\u6570\u627E\u5230\u5176\u4E2D\u9700\u8981\u7684-url-\u4FE1\u606F" tabindex="-1"><a class="header-anchor" href="#\u5904\u7406\u547D\u4EE4\u884C\u53C2\u6570\u627E\u5230\u5176\u4E2D\u9700\u8981\u7684-url-\u4FE1\u606F" aria-hidden="true">#</a> \u5904\u7406\u547D\u4EE4\u884C\u53C2\u6570\u627E\u5230\u5176\u4E2D\u9700\u8981\u7684 <code>url</code> \u4FE1\u606F</h3><p>\u6DFB\u52A0\u51FD\u6570 <code>handleDefaultProtocol</code> \u4ECE\u547D\u4EE4\u884C\u53C2\u6570\u4E2D\u627E\u5230 url \u7136\u540E\u5904\u7406\u5B83\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * \u5904\u7406\u5BA2\u6237\u7AEF\u652F\u6301\u7684\u9ED8\u8BA4\u534F\u8BAE
 * <span class="token keyword">@param</span> <span class="token parameter">argv</span>
 */</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">handleDefaultProtocol</span><span class="token punctuation">(</span>argv<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> url <span class="token operator">=</span> defaultProtocolClient<span class="token punctuation">.</span><span class="token function">findUrl</span><span class="token punctuation">(</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>url<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">await</span> dialog<span class="token punctuation">.</span><span class="token function">showMessageBox</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    type<span class="token operator">:</span> <span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span>
    message<span class="token operator">:</span> <span class="token string">&quot;window protocol \u81EA\u5B9A\u4E49\u534F\u8BAE\u6253\u5F00&quot;</span><span class="token punctuation">,</span>
    detail<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> \u94FE\u63A5:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="\u76D1\u542C-ready-\u548C-second-instance-\u4E8B\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u76D1\u542C-ready-\u548C-second-instance-\u4E8B\u4EF6" aria-hidden="true">#</a> \u76D1\u542C <code>ready</code> \u548C <code>second-instance</code> \u4E8B\u4EF6</h3>`,5),L=s("\u53C2\u8003: "),N={href:"https://www.electronjs.org/docs/api/app#%E4%BA%8B%E4%BB%B6-second-instance",target:"_blank",rel:"noopener noreferrer"},T=s("\u4E8B\u4EF6: 'second-instance'"),V=t(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>app<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token string">&quot;second-instance&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>event<span class="token punctuation">,</span> argv<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">handleDefaultProtocol</span><span class="token punctuation">(</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token string">&quot;ready&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">createMainWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">handleDefaultProtocol</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u5916\u90E8\u8C03\u7528" tabindex="-1"><a class="header-anchor" href="#\u5916\u90E8\u8C03\u7528" aria-hidden="true">#</a> \u5916\u90E8\u8C03\u7528</h2><p>\u65E2\u7136\u6211\u4EEC\u81EA\u5B9A\u4E49\u534F\u8BAE\u7684\u76EE\u7684\u662F\u8BA9\u5916\u90E8\u7A0B\u5E8F\u8C03\u7528\uFF0C\u90A3\u4E48\u5982\u4F55\u4F7F\u7528\u5916\u90E8\u8C03\u7528\u5C31\u5F88\u91CD\u8981\u4E86\u3002</p><p>\u9996\u5148\u68C0\u67E5\u6CE8\u518C\u8868\u4E2D\u662F\u5426\u5DF2\u7ECF\u5305\u542B\u5B83\u4E86\uFF0C\u64CD\u4F5C <em>ctrl+s =&gt; \u641C\u7D22\u6CE8\u518C\u8868 =&gt; \u8FDB\u5165\u6CE8\u518C\u8868 =&gt; ctrl+f \u67E5\u627E <code>custom-protocol</code></em></p><p><img src="`+u+'" alt="\u6CE8\u518C\u8868"></p><h3 id="\u6D4F\u89C8\u5668\u6253\u5F00" tabindex="-1"><a class="header-anchor" href="#\u6D4F\u89C8\u5668\u6253\u5F00" aria-hidden="true">#</a> \u6D4F\u89C8\u5668\u6253\u5F00</h3><p>\u5982\u4E0A\u56FE\u6240\u793A\uFF0C\u53EF\u4EE5\u7B80\u5355\u5728\u6D4F\u89C8\u5668\u4E2D\u8F93\u5165 <a href="custom-protocol://test">custom-protocol://test</a> \u6765\u542F\u52A8\u7A0B\u5E8F\u3002</p><p><img src="'+i+'" alt="\u81EA\u5B9A\u4E49\u534F\u8BAE\u6548\u679C"></p><h3 id="nodejs-\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#nodejs-\u793A\u4F8B" aria-hidden="true">#</a> nodejs \u793A\u4F8B</h3>',9),A=s("\u5728 nodejs \u4E2D\u4F7F\u7528 npm \u5305 "),I={href:"https://www.npmjs.com/package/open",target:"_blank",rel:"noopener noreferrer"},S=s("open"),W=s(" \u53EF\u4EE5\u8F7B\u6613\u6253\u5F00\u81EA\u5B9A\u4E49\u9ED8\u8BA4\u94FE\u63A5\u3002"),F=t(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> open <span class="token keyword">from</span> <span class="token string">&quot;open&quot;</span><span class="token punctuation">;</span>

<span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;custom-protocol://test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,1),M=s("\u5176\u5B9E\u672C\u8D28\u4E0A\u5C31\u662F\u62FC\u63A5\u547D\u4EE4\uFF0C\u7136\u540E\u6267\u884C\u7CFB\u7EDF\u547D\u4EE4\u6253\u5F00 url\uFF0C\u53C2\u8003"),U={href:"https://github.com/sindresorhus/open/blob/master/index.js",target:"_blank",rel:"noopener noreferrer"},$=s("\u5B83\u7684\u5B9E\u73B0"),H=s("\u3002");function O(R,z){const a=e("ExternalLinkIcon");return o(),c(l,null,[d,b,m,n("blockquote",null,[n("p",null,[h,n("a",g,[_,p(a)])])]),f,n("blockquote",null,[n("p",null,[w,n("a",y,[v,p(a)]),q,x,P])]),j,n("blockquote",null,[n("p",null,[B,n("a",D,[E,p(a)])])]),C,n("blockquote",null,[n("p",null,[L,n("a",N,[T,p(a)])])]),V,n("p",null,[A,n("a",I,[S,p(a)]),W]),F,n("p",null,[M,n("a",U,[$,p(a)]),H])],64)}var K=r(k,[["render",O]]);export{K as default};
