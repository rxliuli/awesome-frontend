import{r as e,o,c,a as n,d as p,F as l,b as s,e as t}from"./app.a472134f.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";var u="/assets/a744f749ef6f4652aa82f5dbcb1e22d8.e3aafe3d.svg";const k={},i=n("h2",{id:"\u573A\u666F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u573A\u666F","aria-hidden":"true"},"#"),s(" \u573A\u666F")],-1),b=n("p",null,"\u7531\u4E8E electron \u5E94\u7528\u5206\u4E3A\u4E3B\u8FDB\u7A0B\u3001\u6E32\u67D3\u8FDB\u7A0B\uFF0C\u6240\u4EE5\u5B83\u4EEC\u4E4B\u95F4\u9700\u8981\u901A\u4FE1\u3002\u800C electron \u672C\u8EAB\u5B9E\u73B0\u4E86\u4E00\u4E2A\u7B80\u5355\u7684 event emitter \u901A\u4FE1\u6A21\u578B\uFF0C\u867D\u7136\u80FD\u7528\uFF0C\u4F46\u5E76\u4E0D\u8DB3\u591F\u597D\u3002",-1),m=s("\u53C2\u8003: "),d={href:"https://www.electronjs.org/docs/api/ipc-renderer",target:"_blank",rel:"noopener noreferrer"},y=s("https://www.electronjs.org/docs/api/ipc-renderer"),g=t('<p>\u95EE\u9898</p><ul><li>\u57FA\u4E8E\u5B57\u7B26\u4E32\u548C\u7EA6\u5B9A\u8FDB\u884C\u901A\u4FE1\u672C\u8D28\u4E0A\u548C\u5F53\u4E0B\u524D\u540E\u7AEF\u901A\u4FE1\u5DEE\u4E0D\u591A\uFF0C\u6CA1\u6709\u5229\u7528\u540C\u6784\u4F18\u52BF</li><li>\u4F7F\u7528\u8D77\u6765\u6CA1\u6709\u4EFB\u4F55\u9650\u5236\uFF0C\u610F\u5473\u7740\u5F88\u96BE\u7EF4\u62A4\uFF08\u975E\u5F3A\u5236\u6027\u7684\u7EA6\u5B9A\u57FA\u672C\u4E0A\u90FD\u5F88\u96BE\u751F\u6548\uFF09</li></ul><h2 id="\u601D\u8003" tabindex="-1"><a class="header-anchor" href="#\u601D\u8003" aria-hidden="true">#</a> \u601D\u8003</h2><p>\u90A3\u4E48\u4E00\u5171 electron \u8FDB\u7A0B\u901A\u4FE1\u6709\u54EA\u4E9B\u60C5\u51B5\u5462\uFF1F</p><ul><li>\u6E32\u67D3\u8FDB\u7A0B =&gt; \u4E3B\u8FDB\u7A0B</li><li>\u4E3B\u8FDB\u7A0B =&gt; \u6E32\u67D3\u8FDB\u7A0B</li><li>\u6E32\u67D3\u8FDB\u7A0B =&gt; \u6E32\u67D3\u8FDB\u7A0B</li></ul><p>\u800C\u5176\u4E2D\u6700\u5E38\u7528\u7684\u4FBF\u662F <code>\u6E32\u67D3\u8FDB\u7A0B =&gt; \u4E3B\u8FDB\u7A0B</code></p>',6),w=s("\u5176\u5B9E\u543E\u8F88\u4E5F\u770B\u8FC7\u8BB8\u591A electron \u8FDB\u7A0B\u901A\u4FE1\u7684 "),f={href:"https://www.npmjs.com/package/electron-rpc-api",target:"_blank",rel:"noopener noreferrer"},h=s("\u5C01\u88C5\u5E93"),v=s(" \u6216\u8005\u7C7B\u4F3C\u573A\u666F\u7684 rpc \u5B9E\u73B0 "),T={href:"https://www.npmjs.com/package/comlink",target:"_blank",rel:"noopener noreferrer"},_=s("comlink"),q=s("\uFF0C\u4F46\u6700\u7EC8\u8FD8\u662F\u51B3\u5B9A\u4F7F\u7528\u63A5\u53E3 + \u4E3B\u8FDB\u7A0B\u5B9E\u73B0 + \u6E32\u67D3\u5C42\u6839\u636E\u63A5\u53E3\u751F\u6210 Client \u7684\u65B9\u5F0F\u5B9E\u73B0\u3002"),P=t('<p>\u6700\u7EC8\uFF0C\u543E\u8F88\u9009\u62E9\u4E86\u63A5\u53E3 + \u5B9E\u73B0\u7C7B\u7684\u57FA\u672C\u6A21\u5F0F</p><p><img src="'+u+`" alt="\u8BBE\u8BA1\u56FE.drawio.svg"></p><h2 id="\u5B9E\u73B0\u6E32\u67D3\u8FDB\u7A0B-\u4E3B\u8FDB\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u6E32\u67D3\u8FDB\u7A0B-\u4E3B\u8FDB\u7A0B" aria-hidden="true">#</a> \u5B9E\u73B0\u6E32\u67D3\u8FDB\u7A0B =&gt; \u4E3B\u8FDB\u7A0B</h2><p>\u9996\u5148\u5728\u521B\u5EFA <em>libs</em> \u76EE\u5F55\u7528\u4EE5\u5B58\u653E\u901A\u7528\u6A21\u5757\uFF08\u975E\u4E1A\u52A1\uFF09\uFF0C\u7136\u540E\u521B\u5EFA\u4E09\u4E2A\u6A21\u5757</p><ul><li><code>electron_ipc_type</code>: \u4E00\u4E9B\u9700\u8981\u5F15\u5165\u7684\u7C7B\u578B</li><li><code>electron_ipc_main</code>: \u4E3B\u8FDB\u7A0B\u5C01\u88C5</li><li><code>electron_ipc_renderer</code>: \u6E32\u67D3\u5C42\u5C01\u88C5</li></ul><blockquote><p>\u6B64\u5904\u4F7F\u7528 rollup \u8FDB\u884C\u6253\u5305</p></blockquote><p>\u5927\u81F4\u5B9E\u73B0</p><p>electron_ipc_type: \u901A\u7528\u7684\u57FA\u672C\u63A5\u53E3\u5B9A\u4E49\uFF0C\u5FC5\u987B\u5305\u542B\u4E00\u4E2A <code>namespace</code> \u5C5E\u6027</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">BaseDefine<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  namespace<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>electron_ipc_main: \u5C01\u88C5\u4E3B\u8FDB\u7A0B\u5B9E\u73B0\u76F8\u5173\u4EE3\u7801\uFF0C\u4E3B\u8981\u4FDD\u8BC1\u7C7B\u578B\u5B89\u5168</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">FilteredKeys<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token constant">P</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u8F6C\u6362\u4E3A\u4E00\u4E2A\u4E3B\u8FDB\u7A0B\u53EF\u4EE5\u5B9E\u73B0\u7684\u63A5\u53E3
 */</span>
<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">IpcMainDefine<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> FilteredKeys<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">(</span>
    e<span class="token operator">:</span> IpcMainInvokeEvent<span class="token punctuation">,</span>
    <span class="token operator">...</span>args<span class="token operator">:</span> Parameters<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>ReturnType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">IpcMainProvider</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token keyword">readonly</span> clazzMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> object<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * \u8BA1\u7B97\u4E3B\u8FDB\u7A0B\u76D1\u542C\u7684 key
   * <span class="token keyword">@param</span> <span class="token parameter">namespace</span>
   * <span class="token keyword">@param</span> <span class="token parameter">method</span>
   * <span class="token keyword">@private</span>
   */</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">getKey</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>namespace<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> method<span class="token operator">:</span> PropertyKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> namespace <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> method<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token generic-function"><span class="token function">register</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> BaseDefine<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span>
    namespace<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token string">&quot;namespace&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    api<span class="token operator">:</span> IpcMainDefine<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> IpcMainDefine<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> instance <span class="token operator">=</span> ClassUtil<span class="token punctuation">.</span><span class="token function">bindMethodThis</span><span class="token punctuation">(</span>api<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> methods <span class="token operator">=</span> ClassUtil<span class="token punctuation">.</span><span class="token function">scan</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span><span class="token punctuation">;</span>
    methods<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> key <span class="token operator">=</span> IpcMainProvider<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span>namespace<span class="token punctuation">,</span> method<span class="token punctuation">)</span><span class="token punctuation">;</span>
      ipcMain<span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> instance<span class="token punctuation">[</span>method<span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Register ipcMain.handle: &quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>clazzMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>namespace<span class="token punctuation">,</span> instance<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> instance<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token generic-function"><span class="token function">unregister</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> BaseDefine<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span>
    namespace<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token string">&quot;namespace&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    api<span class="token operator">:</span> IpcMainDefine<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> methods <span class="token operator">=</span> ClassUtil<span class="token punctuation">.</span><span class="token function">scan</span><span class="token punctuation">(</span>api<span class="token punctuation">)</span><span class="token punctuation">;</span>
    methods<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> key <span class="token operator">=</span> IpcMainProvider<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span>namespace<span class="token punctuation">,</span> method<span class="token punctuation">)</span><span class="token punctuation">;</span>
      ipcMain<span class="token punctuation">.</span><span class="token function">removeHandler</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>clazzMap<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>namespace<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><p>electron_ipc_renderer: \u6E32\u67D3\u8FDB\u7A0B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">FilteredKeys<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token constant">P</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u8F6C\u6362\u4E3A\u4E00\u4E2A\u6E32\u67D3\u8FDB\u7A0B\u53EF\u4EE5\u8C03\u7528\u7684 Proxy \u5BF9\u8C61
 */</span>
<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">IpcRendererDefine<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> FilteredKeys<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">(</span>
    <span class="token operator">...</span>args<span class="token operator">:</span> Parameters<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>ReturnType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">NotElectronEnvError</span> <span class="token keyword">extends</span> <span class="token class-name">Error</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">IpcRendererClient</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
   * \u751F\u6210\u4E00\u4E2A\u5BA2\u6237\u7AEF\u5B9E\u4F8B
   * <span class="token keyword">@param</span> <span class="token parameter">namespace</span>
   */</span>
  <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">gen</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> BaseDefine<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span>
    namespace<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token string">&quot;namespace&quot;</span><span class="token punctuation">]</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> IpcRendererDefine<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> api<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> key <span class="token operator">=</span> namespace <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> api<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> ipcRenderer <span class="token operator">=</span> IpcRendererClient<span class="token punctuation">.</span><span class="token function">getRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ipcRenderer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NotElectronEnvError</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F53\u524D\u4F60\u4E0D\u5728 electron \u8FDB\u7A0B\u4E2D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">return</span> ipcRenderer<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * \u83B7\u53D6 electron ipc renderer \u5B9E\u4F8B
   */</span>
  <span class="token keyword">static</span> <span class="token function">getRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> IpcRenderer <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isElectron</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> window<span class="token punctuation">.</span><span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&quot;electron&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ipcRenderer <span class="token keyword">as</span> IpcRenderer<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><hr><p>\u4F7F\u7528</p><p>\u5728 apps \u4E0B\u521B\u5EFA\u4E00\u4E2A\u6A21\u5757 <code>shared_type</code>\uFF0C\u91CC\u9762\u5305\u542B\u4E00\u4E9B\u6E32\u67D3\u8FDB\u7A0B\u4E0E\u4E3B\u8FDB\u7A0B\u4E4B\u95F4\u5171\u4EAB\u7684\u7C7B\u578B\uFF0C\u4E0B\u9762\u662F\u4E00\u4E2A\u7B80\u5355\u7684\u793A\u4F8B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// HelloDefine.ts</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">HelloDefine</span> <span class="token keyword">extends</span> <span class="token class-name">BaseDefine<span class="token operator">&lt;</span><span class="token string">&quot;HelloApi&quot;</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token function">hello</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5728\u4E3B\u8FDB\u7A0B\u4E2D\u4F7F\u7528 class \u5B9E\u73B0\u5B83\u5E76\u6CE8\u518C</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// main.ts</span>

<span class="token keyword">class</span> <span class="token class-name">HelloApi</span> <span class="token punctuation">{</span>
  <span class="token keyword">async</span> <span class="token function">hello</span><span class="token punctuation">(</span>e<span class="token operator">:</span> IpcMainInvokeEvent<span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> ipcMainProvider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IpcMainProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ipcMainProvider<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">register</span><span class="token generic class-name"><span class="token operator">&lt;</span>HelloDefine<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;HelloApi&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">HelloApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5728\u6E32\u67D3\u8FDB\u7A0B\u4E2D\u521B\u5EFA\u5BA2\u6237\u7AEF\u5BF9\u8C61\u5E76\u4F7F\u7528</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> helloApi <span class="token operator">=</span> IpcRendererClient<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">gen</span><span class="token generic class-name"><span class="token operator">&lt;</span>HelloDefine<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;HelloApi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token keyword">await</span> helloApi<span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token string">&quot;liuli&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="\u5B9E\u73B0\u4E3B\u8FDB\u7A0B-\u6E32\u67D3\u8FDB\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u4E3B\u8FDB\u7A0B-\u6E32\u67D3\u8FDB\u7A0B" aria-hidden="true">#</a> \u5B9E\u73B0\u4E3B\u8FDB\u7A0B =&gt; \u6E32\u67D3\u8FDB\u7A0B</h2><p>\u7531\u4E8E\u543E\u8F88\u7684 ui \u5C42\u6846\u67B6\u4F7F\u7528\u4E86 react\uFF0C\u6240\u4EE5\u57FA\u4E8E class \u7684\u6A21\u5F0F\u5728\u6B64\u5E76\u4E0D\u9002\u7528\uFF0C\u9700\u8981\u4F7F\u7528\u67D0\u79CD\u53D8\u901A\u7684\u65B9\u5F0F\uFF08\u543E\u8F88\u4ECD\u7136\u4E0D\u613F\u610F\u653E\u5F03\u5C06 class \u4F5C\u4E3A\u547D\u540D\u7A7A\u95F4\u7684\u60F3\u6CD5\uFF09\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">IpcRendererProviderDefine<span class="token operator">&lt;</span>
  <span class="token constant">T</span> <span class="token keyword">extends</span> BaseDefine<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token constant">P</span> <span class="token keyword">extends</span> FunctionKeys<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=</span> FunctionKeys<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  type<span class="token operator">:</span> <span class="token constant">P</span><span class="token punctuation">,</span>
  <span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span> Parameters<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>ReturnType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">IpcRendererProviderHooksDefine<span class="token operator">&lt;</span>
  <span class="token constant">T</span> <span class="token keyword">extends</span> BaseDefine<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token constant">P</span> <span class="token keyword">extends</span> FunctionKeys<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=</span> FunctionKeys<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  type<span class="token operator">:</span> <span class="token constant">P</span><span class="token punctuation">,</span>
  <span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span> Parameters<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>ReturnType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span>
  deps<span class="token operator">?</span><span class="token operator">:</span> DependencyList
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u5728\u6E32\u67D3\u5C42\u7BA1\u7406\u63D0\u4F9B\u8005
 */</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">IpcRendererProvider<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> BaseDefine<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> apiMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> namespace<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token string">&quot;namespace&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token function">register</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">[</span>type<span class="token punctuation">,</span> callback<span class="token punctuation">]</span><span class="token operator">:</span> IpcRendererProviderDefine<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> ipcRenderer <span class="token operator">=</span> IpcRendererClient<span class="token punctuation">.</span><span class="token function">getRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ipcRenderer <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E0D\u5728 electron \u73AF\u5883\uFF0C\u53D6\u6D88\u6CE8\u518C: &quot;</span><span class="token punctuation">,</span> type<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>namespace <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> type<span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;IpcRendererProvider.register: &quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">listener</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;IpcRendererProvider.listener: &quot;</span><span class="token punctuation">,</span> event<span class="token punctuation">,</span> id<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">callback</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">(</span>args <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">await</span> ipcRenderer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">await</span> ipcRenderer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    ipcRenderer<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> listener<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>apiMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> listener<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">unregister</span><span class="token punctuation">(</span>type<span class="token operator">:</span> IpcRendererProviderDefine<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> ipcRenderer <span class="token operator">=</span> IpcRendererClient<span class="token punctuation">.</span><span class="token function">getRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ipcRenderer <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>namespace <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> type<span class="token punctuation">;</span>
    ipcRenderer<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>apiMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>apiMap<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * react \u4E2D\u7684\u6CE8\u518C\u94A9\u5B50\uFF0C\u81EA\u52A8\u7BA1\u7406\u6E05\u7406\u7684\u64CD\u4F5C
   * <span class="token keyword">@param</span> <span class="token parameter">type</span>
   * <span class="token keyword">@param</span> <span class="token parameter">callback</span>
   * <span class="token keyword">@param</span> <span class="token parameter">deps</span>
   */</span>
  <span class="token function">useIpcProvider</span><span class="token punctuation">(</span>
    <span class="token operator">...</span><span class="token punctuation">[</span>type<span class="token punctuation">,</span> callback<span class="token punctuation">,</span> deps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">:</span> IpcRendererProviderHooksDefine<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">unregister</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> deps<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * \u8F6C\u6362\u4E3A\u4E00\u4E2A\u6E32\u67D3\u8FDB\u7A0B\u53EF\u4EE5\u8C03\u7528\u7684 Proxy \u5BF9\u8C61
 */</span>
<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">IpcClientDefine<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> object<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> FunctionKeys<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">(</span>
    <span class="token operator">...</span>args<span class="token operator">:</span> Parameters<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>ReturnType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u5BA2\u6237\u7AEF
 */</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">IpcMainClient</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
   * \u751F\u6210\u4E00\u4E2A\u5BA2\u6237\u7AEF\u5B9E\u4F8B
   * <span class="token keyword">@param</span> <span class="token parameter">namespace</span>
   * <span class="token keyword">@param</span> <span class="token parameter">win</span>
   */</span>
  <span class="token keyword">static</span> <span class="token generic-function"><span class="token function">gen</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> BaseDefine<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span>
    namespace<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token string">&quot;namespace&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    win<span class="token operator">:</span> BrowserWindow
  <span class="token punctuation">)</span><span class="token operator">:</span> IpcClientDefine<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">K</span> <span class="token keyword">extends</span> FunctionKeys<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span>target<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> api<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> key <span class="token operator">=</span> namespace <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> api<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span><span class="token operator">&lt;</span>ReturnType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> id <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            ipcMain<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> <span class="token punctuation">(</span>event<span class="token punctuation">,</span> err<span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;callback: &quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
              <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;send: &quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> id<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            win<span class="token punctuation">.</span>webContents<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> id<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">(</span>args <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><hr><p>\u4F7F\u7528</p><p>\u5728\u6E32\u67D3\u8FDB\u7A0B\u4F7F\u7528 hooks \u6CE8\u518C\u5B83</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> ipcRendererProvider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IpcRendererProvider<span class="token operator">&lt;</span>HelloApiDefine<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;HelloApi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ipcRendererProvider<span class="token punctuation">.</span><span class="token function">useIpcProvider</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>e<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5728\u4E3B\u8FDB\u7A0B\u751F\u6210\u5BA2\u6237\u7AEF\u5B9E\u4F8B\u8C03\u7528\u5B83</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> helloApi <span class="token operator">=</span> IpcMainClient<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">gen</span><span class="token generic class-name"><span class="token operator">&lt;</span>HelloApiDefine<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  <span class="token string">&quot;HelloApi&quot;</span><span class="token punctuation">,</span>
  <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token keyword">await</span> helloApi<span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token string">&quot;liuli&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="\u7EA6\u5B9A\u4FD7\u6210" tabindex="-1"><a class="header-anchor" href="#\u7EA6\u5B9A\u4FD7\u6210" aria-hidden="true">#</a> \u7EA6\u5B9A\u4FD7\u6210</h2><ul><li>\u5728 <code>shared_type</code> \u6A21\u5757\u4E2D\u7684\u63A5\u53E3\u5B9A\u4E49\u603B\u662F <code>*Define</code> \u5F62\u5F0F\uFF0C\u4E14\u5B9E\u73B0\u7684 <code>BaseDefine&lt;T&gt;</code> \u6CDB\u578B\u53C2\u6570\u662F <code>*Api</code> \u5F62\u5F0F</li><li>\u5728 <code>main</code> \u6A21\u5757\u4E2D\u5B9E\u73B0\u7684 class \u603B\u662F <code>*Api</code> \u5F62\u5F0F</li><li>\u5728 <code>renderer</code> \u6A21\u5757\u4E2D\u83B7\u53D6\u7684 client \u5B9E\u4F8B\u603B\u662F <code>*Api</code> \u5C0F\u5199\u9A7C\u5CF0\u5F62\u5F0F</li><li>\u5B9E\u73B0 <code>BaseDefine&lt;T&gt;</code> \u4F20\u5165\u7684\u547D\u540D\u7A7A\u95F4\u53C2\u6570\u4E0D\u5E94\u8BE5\u91CD\u590D</li></ul><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>electron \u672C\u8EAB\u7684\u8FDB\u7A0B\u901A\u4FE1 api \u5728\u9010\u6E10\u53D1\u5C55\uFF0C\u4F46\u76EE\u524D\u4ECD\u7136\u6CA1\u6709\u8DB3\u591F\u597D\u7528\uFF0C\u6240\u4EE5\u543E\u8F88\u4E0D\u5F97\u4E0D\u8FDB\u884C\u4E86\u5C01\u88C5\u3002</p>`,35);function x(R,I){const a=e("ExternalLinkIcon");return o(),c(l,null,[i,b,n("blockquote",null,[n("p",null,[m,n("a",d,[y,p(a)])])]),g,n("blockquote",null,[n("p",null,[w,n("a",f,[h,p(a)]),v,n("a",T,[_,p(a)]),q])]),P],64)}var K=r(k,[["render",x]]);export{K as default};
