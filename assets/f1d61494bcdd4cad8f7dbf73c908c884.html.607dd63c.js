import{r as e,o,c,a as n,d as p,F as l,e as t,b as s}from"./app.a472134f.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";var u="/assets/19a3d23c4f024938b8e327148d9f964e.dcf4b5f7.png";const i={},k=t(`<h2 id="\u4F7F\u7528-keyof-\u9650\u5B9A\u5BF9\u8C61\u7684\u5C5E\u6027\u503C\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-keyof-\u9650\u5B9A\u5BF9\u8C61\u7684\u5C5E\u6027\u503C\u53C2\u6570" aria-hidden="true">#</a> \u4F7F\u7528 keyof \u9650\u5B9A\u5BF9\u8C61\u7684\u5C5E\u6027\u503C\u53C2\u6570</h2><p>\u5982\u679C\u53C2\u6570\u4E2D\u5305\u542B\u5BF9\u8C61\u7684\u5C5E\u6027\uFF0C\u543E\u8F88\u4E00\u822C\u4F1A\u4F7F\u7528 <code>string</code> \u6216\u8005 <code>PropertyKey</code>\uFF0C\u4F46\u5B9E\u9645\u4E0A ts \u91CC\u5728\u8FD9\u79CD\u573A\u666F\u4E0B\u6709\u66F4\u5408\u9002\u7684\u65B9\u5F0F: <code>keyof</code>\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> object<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> k<span class="token operator">:</span> PropertyKey<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> obj<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> i <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">17</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u4F18\u5316\u4E00\u4E0B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> object<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> k<span class="token operator">:</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> obj<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8FD9\u91CC\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4F1A\u6709\u7C7B\u578B\u7EA6\u675F</span>
<span class="token keyword">const</span> i <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">17</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u5C06\u5BF9\u8C61\u7684\u6240\u6709\u503C\u8FDB\u884C\u6620\u5C04" tabindex="-1"><a class="header-anchor" href="#\u5C06\u5BF9\u8C61\u7684\u6240\u6709\u503C\u8FDB\u884C\u6620\u5C04" aria-hidden="true">#</a> \u5C06\u5BF9\u8C61\u7684\u6240\u6709\u503C\u8FDB\u884C\u6620\u5C04</h2><p>ts \u5185\u90E8\u5B9E\u73B0\u4E86\u4E00\u4E2A <code>Partial</code> \u7C7B\u578B\u5C31\u662F\u8FD9\u6837</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Make all properties in T optional
 */</span>
<span class="token keyword">type</span> <span class="token class-name">Partial<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u4F7F\u7528\u793A\u4F8B\uFF0C\u5C06\u5BF9\u8C61\u4E2D\u6240\u6709\u5C5E\u6027\u7684\u503C\u6620\u5C04\u4E3A\u51FD\u6570\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">MapValueToFunc<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">mapToComputed</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> object<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> MapValueToFunc<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> k<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u6D4B\u8BD5\u4E00\u4E0B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">mapToComputed</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;rx&quot;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">17</span><span class="token punctuation">,</span>
  sex<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="infer-\u89E3\u6784" tabindex="-1"><a class="header-anchor" href="#infer-\u89E3\u6784" aria-hidden="true">#</a> infer \u89E3\u6784</h2><p>\u53EF\u4EE5\u5C06\u590D\u6742\u7C7B\u578B\u8FDB\u884C\u89E3\u6784\uFF0C\u4EE5\u5F97\u5230\u590D\u6742\u7C7B\u578B\u4E2D\u7684\u90E8\u5206\u7C7B\u578B\u3002</p><p>\u4E0B\u9762\u662F\u51E0\u4E2A\u5E94\u7528\u573A\u666F</p><ul><li>\u53D6\u51FA\u6CDB\u578B\u7C7B\u3002\u4F8B\u5982\u4ECE <code>Promise&lt;T&gt;</code> \u4E2D\u53D6\u51FA <code>T</code></li><li>\u53D6\u51FA\u51FD\u6570\u7684\u53C2\u6570\u7C7B\u578B\u5217\u8868/\u8FD4\u56DE\u503C\u3002\u4F8B\u5982\u4ECE <code>(...args: P): R</code> \u4E2D\u53D6\u51FA <code>P</code> \u548C <code>R</code></li><li>\u83B7\u53D6\u5230\u6784\u9020\u51FD\u6570\u53C2\u6570\u5217\u8868</li></ul><p>\u53D6\u51FA\u6CDB\u578B\u7C7B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u4E00\u4E2A\u7528\u4E8E</span>
<span class="token keyword">type</span> <span class="token class-name">PromiseDeconstruct<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">infer</span> <span class="token constant">R</span><span class="token operator">&gt;</span></span>
  <span class="token operator">?</span> <span class="token constant">R</span>
  <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u89E3\u6784 Promsie \u4E2D\u7684\u6CDB\u578B\u7C7B</span>
<span class="token keyword">const</span> i<span class="token operator">:</span> PromiseDeconstruct<span class="token operator">&lt;</span><span class="token keyword">typeof</span> res<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u83B7\u53D6\u51FD\u6570\u7684\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">FuncParam<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span> <span class="token builtin">any</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span>
  <span class="token operator">...</span>args<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">P</span> <span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u53D8\u91CF\u4EE5\u8FDB\u884C\u89E3\u6784\u90E8\u5206\u7C7B\u578B</span>
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span>
  <span class="token operator">?</span> <span class="token constant">P</span> <span class="token comment">// \u8FD9\u4E2A\u503C\u5176\u5B9E\u6C38\u8FDC\u4E0D\u4F1A\u5230</span>
  <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">AddParam</span> <span class="token operator">=</span> FuncParam<span class="token operator">&lt;</span><span class="token keyword">typeof</span> add<span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> arr<span class="token operator">:</span> AddParam <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="typeof-\u83B7\u53D6\u53D8\u91CF\u7684\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#typeof-\u83B7\u53D6\u53D8\u91CF\u7684\u7C7B\u578B" aria-hidden="true">#</a> typeof \u83B7\u53D6\u53D8\u91CF\u7684\u7C7B\u578B</h2><p>typeof \u5728 JS \u4E2D\u539F\u672C\u53EA\u662F\u83B7\u53D6\u53D8\u91CF\u7684\u7C7B\u578B\uFF0C\u800C\u4E14\u9664\u4E86\u57FA\u672C\u7C7B\u578B\u548C <code>Function</code> \u4E4B\u5916\uFF0C\u5176\u5B83\u7684\u6240\u6709\u7C7B\u578B\u90FD\u4F1A\u5F97\u5230 <code>object</code>\u3002\u800C\u5728 TS \u79CD\uFF0C\u8BE5\u5173\u952E\u5B57\u7684\u529F\u80FD\u5F97\u5230\u4E86\u589E\u5F3A\uFF0C\u5B83\u771F\u7684\u53D8\u6210\u4E86\u53EF\u4EE5\u83B7\u53D6\u5230\u53D8\u91CF\u7C7B\u578B\uFF0C\u5E76\u4E14\u53C2\u4E0E\u7C7B\u578B\u8FD0\u7B97\u4E86\u3002</p><ul><li><p>\u5982\u679C\u662F <code>const</code> \u58F0\u660E\u7684\u57FA\u672C\u7C7B\u578B\uFF0C\u5219\u4F1A\u88AB\u8BA4\u4E3A\u662F\u5B57\u9762\u91CF\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">CustomString</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> s<span class="token punctuation">;</span> <span class="token comment">// &#39;&#39;</span>
<span class="token keyword">const</span> str1<span class="token operator">:</span> CustomString <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> str2<span class="token operator">:</span> CustomString <span class="token operator">=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">;</span> <span class="token comment">// Type &#39;&quot;1&quot;&#39; is not assignable to type &#39;&quot;&quot;&#39;.ts(2322)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>\u5982\u679C\u662F <code>let/var</code> \u58F0\u660E\u7684\u57FA\u672C\u7C7B\u578B\u53D8\u91CF\uFF0C\u5219\u4F1A\u88AB\u6B63\u5E38\u8BA4\u4E3A\u662F\u57FA\u672C\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">CustomString</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> s<span class="token punctuation">;</span> <span class="token comment">// string</span>
<span class="token keyword">const</span> str1<span class="token operator">:</span> CustomString <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> str2<span class="token operator">:</span> CustomString <span class="token operator">=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>\u5982\u679C\u662F\u5BF9\u8C61\uFF0C\u5219\u4F1A\u88AB\u8BA4\u4E3A\u662F\u5BF9\u8C61\u7684\u771F\u5B9E\u7C7B\u578B\u800C\u975E <code>object</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">17</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
 * <span class="token punctuation">{</span>
 *   name: string;
 *   age: number;
 * <span class="token punctuation">}</span>
 */</span>
<span class="token keyword">type</span> <span class="token class-name">User</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> user<span class="token punctuation">;</span>
<span class="token keyword">const</span> user2<span class="token operator">:</span> User <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;rx&quot;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li></ul><p>\u6CE8\uFF1A\u867D\u7136\u7740 TypeScript \u7684\u7C7B\u578B\u8FD0\u7B97\u4E2D\u662F\u8FD9\u6837\u7684\uFF0C\u4F46\u5B9E\u9645\u4E0A\u4F7F\u7528 <code>console.log(typeof new Date())</code> \u6253\u5370\u7684\u8FD8\u662F <code>object</code> \u800C\u975E <code>Date</code>\uFF0C\u8BF7\u8BB0\u4F4F\uFF1A<strong>TypeScript \u53EA\u5728\u7F16\u8BD1\u671F\u751F\u6548\uFF0C\u8FD0\u884C\u65F6\u6240\u6709\u7C7B\u578B\u90FD\u4F1A\u88AB\u64E6\u9664\u3002</strong></p><h2 id="as-const-\u58F0\u660E\u5E38\u91CF" tabindex="-1"><a class="header-anchor" href="#as-const-\u58F0\u660E\u5E38\u91CF" aria-hidden="true">#</a> as const \u58F0\u660E\u5E38\u91CF</h2><p>\u4F7F\u7528 <code>as const</code> \u53EF\u4EE5\u58F0\u660E\u4E00\u4E2A\u53D8\u91CF\u4E3A\u5E38\u91CF</p><ul><li><p>\u57FA\u672C\u7C7B\u578B\uFF1A\u5C06\u4E4B\u53D8\u4E3A\u5B57\u9762\u91CF\u7C7B\u578B</p></li><li><p>\u5BF9\u8C61\uFF1A\u5C06\u4E4B\u6240\u6709\u7684\u5C5E\u6027\u53D8\u4E3A\u53EA\u8BFB</p></li><li><p>\u6570\u7EC4\uFF1A\u5C06\u4E4B\u53D8\u4E3A\u5143\u7EC4</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&quot;1&quot;</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> bool <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> tuple <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;rx&quot;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li></ul><h2 id="\u6CDB\u578B\u4E2D\u6307\u5B9A\u7C7B\u578B\u5FC5\u987B\u62E5\u6709\u67D0\u4E2A\u5B57\u6BB5" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u578B\u4E2D\u6307\u5B9A\u7C7B\u578B\u5FC5\u987B\u62E5\u6709\u67D0\u4E2A\u5B57\u6BB5" aria-hidden="true">#</a> \u6CDB\u578B\u4E2D\u6307\u5B9A\u7C7B\u578B\u5FC5\u987B\u62E5\u6709\u67D0\u4E2A\u5B57\u6BB5</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">treeMap</span><span class="token generic class-name"><span class="token operator">&lt;</span>
  <span class="token constant">T</span> <span class="token keyword">extends</span> object<span class="token punctuation">,</span>
  <span class="token constant">C</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">;</span> children<span class="token operator">:</span> <span class="token keyword">keyof</span> <span class="token constant">T</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token constant">R</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">C</span><span class="token punctuation">[</span><span class="token string">&quot;children&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">R</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>node<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> fn<span class="token operator">:</span> <span class="token punctuation">(</span>t<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> parentPath<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">C</span><span class="token punctuation">[</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">R</span><span class="token punctuation">,</span> options<span class="token operator">:</span> <span class="token constant">C</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">R</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="\u52A8\u6001\u6839\u636E\u5BF9\u8C61\u7684\u503C\u8FDB\u884C\u8FC7\u6EE4-pick-omit-\u662F\u9759\u6001\u7684" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u6839\u636E\u5BF9\u8C61\u7684\u503C\u8FDB\u884C\u8FC7\u6EE4-pick-omit-\u662F\u9759\u6001\u7684" aria-hidden="true">#</a> \u52A8\u6001\u6839\u636E\u5BF9\u8C61\u7684\u503C\u8FDB\u884C\u8FC7\u6EE4\uFF08Pick/Omit \u662F\u9759\u6001\u7684\uFF09</h2>`,30),b=s("\u53C2\u8003\uFF1A"),d={href:"https://github.com/microsoft/TypeScript/issues/23199#issuecomment-379323872",target:"_blank",rel:"noopener noreferrer"},m=s("https://github.com/microsoft/TypeScript/issues/23199#issuecomment-379323872"),y=t(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">FilteredKeys<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token constant">P</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// \u8FC7\u6EE4\u6240\u6709\u503C\u4E0D\u4E3A object \u7684\u5B57\u6BB5</span>
<span class="token keyword">type</span> <span class="token class-name">PickObject<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> object<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> FilteredKeys<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> object<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">S</span></span> <span class="token operator">=</span> PickObject<span class="token operator">&lt;</span><span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  info<span class="token operator">:</span> <span class="token punctuation">{</span>
    age<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// { info: { age: []; }; }</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="node-js-\u5728-typescript-\u4E2D\u4F7F\u7528-process-env" tabindex="-1"><a class="header-anchor" href="#node-js-\u5728-typescript-\u4E2D\u4F7F\u7528-process-env" aria-hidden="true">#</a> node.js \u5728 TypeScript \u4E2D\u4F7F\u7528 p<wbr>rocess.env</h2><p>TypeScript \u4E2D\u5B9A\u4E49 p<wbr>rocess.env \u7684\u7C7B\u578B\uFF0C\u9ED8\u8BA4\u4E3A Record&lt;string, string&gt;</p><p>\u4F7F\u7528\u4EE5\u4E0B\u5B9A\u4E49\u53EF\u7834</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// src/@types/environment.d.ts</span>

<span class="token keyword">declare</span> <span class="token keyword">namespace</span> NodeJS <span class="token punctuation">{</span>
  <span class="token keyword">interface</span> <span class="token class-name">ProcessEnv</span> <span class="token punctuation">{</span>
    <span class="token constant">GITHUB_AUTH_TOKEN</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    <span class="token constant">NODE_ENV</span><span class="token operator">:</span> <span class="token string">&quot;development&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;production&quot;</span><span class="token punctuation">;</span>
    <span class="token constant">PORT</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    <span class="token constant">PWD</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// If this file has no import/export statements (i.e. is a script)</span>
<span class="token comment">// convert it into a module by adding an empty export statement.</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,5),g=s("\u53C2\u8003: "),f={href:"https://stackoverflow.com/questions/45194598/using-process-env-in-typescript",target:"_blank",rel:"noopener noreferrer"},h=s("https://stackoverflow.com/questions/45194598/using-process-env-in-typescript"),w=t(`<h2 id="\u81EA\u52A8\u63A8\u65AD\u5305\u542B\u4E00\u822C\u503C\u4E0E\u51FD\u6570\u7684\u60C5\u51B5" tabindex="-1"><a class="header-anchor" href="#\u81EA\u52A8\u63A8\u65AD\u5305\u542B\u4E00\u822C\u503C\u4E0E\u51FD\u6570\u7684\u60C5\u51B5" aria-hidden="true">#</a> \u81EA\u52A8\u63A8\u65AD\u5305\u542B\u4E00\u822C\u503C\u4E0E\u51FD\u6570\u7684\u60C5\u51B5</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">GetValue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">GetValueType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span>
  <span class="token operator">?</span> ReturnType<span class="token operator">&lt;</span>Extract<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token operator">&gt;&gt;</span> <span class="token operator">|</span> Exclude<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token operator">&gt;</span>
  <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>

<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">f</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  map<span class="token operator">:</span> <span class="token punctuation">[</span>probability<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> GetValueType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token generic-function"><span class="token function">f</span><span class="token generic class-name"><span class="token operator">&lt;</span>GetValue<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// The type is not correctly inferred</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><img src="`+u+`" alt="1622083980387"></p><p>f \u7684\u7C7B\u578B\u5B9A\u4E49\u4FEE\u6539\u5982\u4E0B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">f</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  map<span class="token operator">:</span> <span class="token punctuation">[</span>probability<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> GetValueType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,5),v=s("\u53C2\u8003\u7B54\u6848\uFF1A"),_={href:"https://segmentfault.com/q/1010000040072586/a-1020000040073003",target:"_blank",rel:"noopener noreferrer"},T=s("https://segmentfault.com/q/1010000040072586/a-1020000040073003"),q=t(`<h2 id="\u5982\u4F55\u589E\u52A0\u65B0\u7684\u5168\u5C40\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u589E\u52A0\u65B0\u7684\u5168\u5C40\u53D8\u91CF" aria-hidden="true">#</a> \u5982\u4F55\u589E\u52A0\u65B0\u7684\u5168\u5C40\u53D8\u91CF</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u8FD9\u884C\u662F\u5FC5\u4E0D\u53EF\u5C11\u7684</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">declare</span> global <span class="token punctuation">{</span>
  <span class="token keyword">interface</span> <span class="token class-name">Global</span> <span class="token punctuation">{</span>
    config<span class="token operator">:</span> MyConfigType<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,2),x=s("\u53C2\u8003\uFF1A"),P={href:"https://stackoverflow.com/questions/57132428/",target:"_blank",rel:"noopener noreferrer"},j=s("https://stackoverflow.com/questions/57132428/"),S=n("h2",{id:"\u5982\u4F55\u4E3A\u7B2C\u4E09\u65B9\u5305\u5B9A\u4E49\u7C7B\u578B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5982\u4F55\u4E3A\u7B2C\u4E09\u65B9\u5305\u5B9A\u4E49\u7C7B\u578B","aria-hidden":"true"},"#"),s(" \u5982\u4F55\u4E3A\u7B2C\u4E09\u65B9\u5305\u5B9A\u4E49\u7C7B\u578B")],-1),C=s("\u5728\u4F7F\u7528\u67D0\u4E9B npm \u6A21\u5757\u65F6\uFF0C\u4F60\u53EF\u80FD\u53D1\u73B0 "),V={href:"https://www.typescriptlang.org/dt/search",target:"_blank",rel:"noopener noreferrer"},R=s("@types/"),D=s(" \u4E0B\u9762\u5E76\u6CA1\u6709\u793E\u533A\u7EF4\u62A4\u7684\u7C7B\u578B\u5B9A\u4E49\uFF0C\u8FD9\u65F6\u5019\u4F60\u9700\u8981\u81EA\u5DF1\u7EF4\u62A4\u4E00\u4E2A\u7C7B\u578B\u5B9A\u4E49\u3002"),E=n("p",null,"\u5927\u81F4\u4E0A\u6709\u4E09\u79CD\u65B9\u5F0F",-1),F=n("li",null,[s("\u5728\u9879\u76EE\u7684 "),n("code",null,"src/@types/<module>.d.ts"),s(" \u4E2D\u7F16\u5199\u7C7B\u578B\u5B9A\u4E49")],-1),N=n("li",null,[s("\u5728 monorepo \u9879\u76EE\u4E2D\u521B\u5EFA "),n("code",null,"types-<module>"),s(" \u6A21\u5757")],-1),G=s("\u4E3A\u793E\u533A\u9879\u76EE "),O={href:"https://github.com/DefinitelyTyped/DefinitelyTyped",target:"_blank",rel:"noopener noreferrer"},U=s("DefinitelyTyped"),K=s(" \u505A\u8D21\u732E"),M=t(`<p>\u73B0\u5728\u53EA\u8BF4\u4E00\u4E0B\u7B2C\u4E00\u3001\u7B2C\u4E8C\u79CD\u65B9\u5F0F\uFF0C\u5047\u8BBE\u6211\u4EEC\u8981\u4E3A\u540D\u5B57\u4E3A <code>a</code> \u7684\u6A21\u5757\u5B9A\u4E49\u7C7B\u578B</p><p>\u5728\u9879\u76EE\u7684 <code>src/@types/a.d.ts</code> \u4E2D\u7F16\u5199\u7C7B\u578B\u5B9A\u4E49</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// a.d.ts</span>
<span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">&quot;a&quot;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6CE8\u610F\uFF1Aimport \u5FC5\u987B\u5378\u8F7D declare module \u5185\u90E8</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span> Plugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">hello</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> Plugin<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4F7F\u7528</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> hello <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">;</span>

<span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5728 monorepo \u9879\u76EE\u4E2D\u521B\u5EFA <code>types-a</code> \u6A21\u5757</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// a.d.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Plugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">hello</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> Plugin<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u914D\u7F6E package.json \u5BFC\u51FA</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;types-a&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./a.d.ts&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u7136\u540E\u5728\u9700\u8981\u7684\u6A21\u5757\u5B89\u88C5\u5B83\u5373\u53EF</p>`,8);function B(I,A){const a=e("ExternalLinkIcon");return o(),c(l,null,[k,n("blockquote",null,[n("p",null,[b,n("a",d,[m,p(a)])])]),y,n("p",null,[g,n("a",f,[h,p(a)])]),w,n("blockquote",null,[n("p",null,[v,n("a",_,[T,p(a)])])]),q,n("blockquote",null,[n("p",null,[x,n("a",P,[j,p(a)])])]),S,n("p",null,[C,n("a",V,[R,p(a)]),D]),E,n("ol",null,[F,N,n("li",null,[G,n("a",O,[U,p(a)]),K])]),M],64)}var L=r(i,[["render",B]]);export{L as default};
