import{r as l,o as e,c as n,a,F as t,b as r}from"./app.dd6fe0d9.js";const s={},o=a("h2",{id:"webstorm-全局默认配置",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#webstorm-全局默认配置","aria-hidden":"true"},"#"),r(" WebStorm 全局默认配置")],-1),u=a("p",null,[r("使用场景："),a("br"),r(" 使用 WebStorm 经常会遇到一种情况，在这个项目自顶了一些设置（"),a("strong",null,"Settings"),r(" 而非 "),a("strong",null,"Project Structure"),r("，例如 自定义的 Maven，项目字符编码等等），到了新的项目全部恢复了默认值又要重新设定。")],-1),i=a("p",null,[r("解决方案："),a("br"),r(" 通过 WebStorm 的默认设置（"),a("strong",null,"File > Other Settings > Default Settings"),r("）就可以设定全局的 "),a("strong",null,"Settings"),r("，而不需要在每个项目中重新设定一次。")],-1),c=a("blockquote",null,[a("p",null,[r("默认设定按吾辈的理解应该是用于设定那些可以使项目级别的设置，例如 "),a("strong",null,"代码检查"),r("，"),a("strong",null,"代码样式"),r(" 等。毕竟大部分的设置都是全局的嘛")])],-1),p=a("h2",{id:"alt-enter-操作提示",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#alt-enter-操作提示","aria-hidden":"true"},"#"),r(" Alt-Enter 操作提示")],-1),d=a("p",null,"Alter-Enter 大概是 WebStorm 最强大快捷键了，放在不同的位置有不同的功能。",-1),b=a("ul",null,[a("li",null,"警告（代码下面有黄色波浪线），会自动帮我们修复警告。 代码重复，代码冗余（1/0 之类），多余的变量（声明完就立刻返回/声明完最多只使用了一次）"),a("li",null,"错误（代码下面有红色波浪线），一般会提出合适的修复建议。 代码缺少注解，具体子类有未实现的方法"),a("li",null,"接口名（接口的名字），一般会提示可以生成实现类或者跳转到实现类"),a("li",null,"自动修复变量名的问题（不符合驼峰）"),a("li",null,"普通类名，一般会提示创建测试类，没有 JavaDoc 注释还会提示生成注释"),a("li",null,[r("字符串里面，会提示使用 "),a("a",{href:"#%E8%AF%AD%E8%A8%80%E6%B3%A8%E5%85%A5"},"语言注入")]),a("li",null,"跳转到注入语言的编辑面板")],-1),g=a("h2",{id:"double-shift-任意搜索",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#double-shift-任意搜索","aria-hidden":"true"},"#"),r(" Double Shift 任意搜索")],-1),h=a("p",null,"这个功能其实是集成了多个搜索，但有时候真的很好用，集成的功能包括",-1),m=a("ul",null,[a("li",null,[r("搜索 "),a("code",null,"Settings"),r("（"),a("code",null,"CS-A"),r("）：搜索 WebStorm 的设置")]),a("li",null,[r("搜索 "),a("code",null,"class"),r("（"),a("code",null,"C-N"),r("）：搜索代码里的 class 类")]),a("li",null,[r("搜索 "),a("code",null,"File"),r("（"),a("code",null,"CS-N"),r("）：搜索任何文件")]),a("li",null,[r("搜索 "),a("code",null,"symbol"),r("（"),a("code",null,"CSA-N"),r("）：搜索符号，主要用于搜索 Spring MVC 路径")]),a("li",null,[r("搜索 "),a("code",null,"Tool Windows"),r("（"),a("code",null,"C-Tab"),r("）：搜索工具窗口")]),a("li",null,[r("搜索 "),a("code",null,"Run configuration"),r("（"),a("code",null,"SA-F9/F10"),r("）：搜索运行的配置项")]),a("li",null,[r("搜索 "),a("code",null,"Action"),r("（"),a("code",null,"Alt-Enter"),r("）：搜索当前位置的代码可执行操作")])],-1),f=a("p",null,"如果你知道需要搜索的类型，请尽量使用单独的搜索选项，毕竟速度上会有一些优势",-1),k=a("h2",{id:"列编辑",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#列编辑","aria-hidden":"true"},"#"),r(" 列编辑")],-1),S=a("p",null,"列编辑是一个非常有趣的功能，可以让你同时编辑多行文本。",-1),v=a("p",null,"共有下面几种方式触发",-1),j=a("ul",null,[a("li",null,"使用鼠标中键下拉或上拉选中多行"),a("li",null,[r("使用 "),a("code",null,"A-J"),r(" 依次选择相同的代码片段，并使用 "),a("code",null,"SA-J"),r(" 取消选择")]),a("li",null,[r("使用 "),a("code",null,"CSA-J"),r(" 选中当前文件所有匹配的代码片段")]),a("li",null,[r("使用 "),a("code",null,"CA-Top/Bottom"),r(" 向上或向下选择多行（需要添加快捷键 "),a("code",null,"Editor Actions => Clone Caret Above/Clone Caret Below"),r("）")])],-1),C=a("p",null,"GIF 演示",-1),x=a("p",null,[a("img",{src:"https://cdn.jsdelivr.net/gh/rxliuli/img-bed/20190627110522.gif",alt:"GIF 演示"})],-1),A=a("h2",{id:"常用快捷键",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#常用快捷键","aria-hidden":"true"},"#"),r(" 常用快捷键")],-1),W=r("快捷键想要熟练没有什么好的办法，却是只能多加使用了。如果你还不熟悉 WebStorm 的快捷键，可以使用 "),w={href:"https://github.com/halirutan/IntelliJ-Key-Promoter-X",target:"_blank",rel:"noopener noreferrer"},T=r("Key Promoter X"),E=r(" 插件来提示你使用快捷键操作。"),J=a("ul",null,[a("li",null,[r("搜索 "),a("ul",null,[a("li",null,[a("code",null,"C-N"),r(" ：搜索类")]),a("li",null,[a("code",null,"CS-N"),r(" ：搜索文件")]),a("li",null,[a("code",null,"CSA-N"),r(" ：搜索字段名(包含数据库字段)/方法名")]),a("li",null,[a("code",null,"SS"),r(" ：搜索接口路径，类名，文件名，字段名/方法名")]),a("li",null,[a("code",null,"CS-F"),r("：全局搜索代码（该快捷键与 Windows10 的默认输入法冲突，可以修改快捷键，或者换用其他输入法）")])])]),a("li",null,[r("面板操作 "),a("ul",null,[a("li",null,[a("code",null,"ESC"),r("：返回到编辑器中")]),a("li",null,[a("code",null,"C-E"),r(" ：列出最近操作的文件历史以及可操作面板列表，然后可以通过输入单词跳转到对应的面板")]),a("li",null,[a("code",null,"C-Tab -> *"),r("：列出最近操作的文件历史以及可操作面板，并能通过单个字母导航到对应的操作面板（需要一直按住 "),a("code",null,"Ctrl"),r("）")]),a("li",null,[a("code",null,"A-Top/Bottom/Left/Right"),r(" ：左右是切换标签页，上下是切换方法")]),a("li",null,[a("code",null,"F12"),r(" ：跳转到最后一个使用的面板")]),a("li",null,[a("code",null,"CS-F12"),r(" ：收起/显示所有面板")]),a("li",null,[a("code",null,"C-F12"),r(" ：在一个悬浮面板上列出所有字段/方法")]),a("li",null,[a("code",null,"A-F11"),r(": 列出可以快速运行的任务，支持 "),a("code",null,"npm/gulp")])])]),a("li",null,[r("选择 "),a("ul",null,[a("li",null,[a("code",null,"C-W/CS-W"),r(" ：扩大/缩小选择区域范围")]),a("li",null,[a("code",null,"CS-[/]"),r("：选择至当前区域的开始/结束")]),a("li",null,[a("code",null,"A/SA-J"),r(" ：选中/反选相同的单词进行列编辑（一个个的选中）")]),a("li",null,[a("code",null,"CSA-J"),r(" ：选中多个相同的单词（当前文件全部选中）")])])]),a("li",null,[r("代码跳转 "),a("ul",null,[a("li",null,[a("code",null,"CA-Left/Right"),r(" ：跳转到上一个/下一个浏览的位置")]),a("li",null,[a("code",null,"CS-Backspace"),r(" ：回退到上一个编辑的位置")]),a("li",null,[a("code",null,"C-Top/Bottom/Left/Right"),r("：左右是跳转到上一个/下一个单词，上下是移动屏幕（非移动光标）")]),a("li",null,[a("code",null,"C-;"),r(" ：屏幕内任意跳转（需要安装 "),a("strong",null,"Ace Jumper"),r(" 插件）")]),a("li",null,[a("code",null,"Home"),r(" ：跳转到行首/编辑器的最左侧")]),a("li",null,[a("code",null,"End"),r(" ：跳转到行尾")]),a("li",null,[a("code",null,"C-Home/End"),r(" ：跳转到文件的开始/结尾")]),a("li",null,[a("code",null,"C-Page Up/Page Down"),r(" ：跳转到当前屏幕的第一行/最后一行")]),a("li",null,[a("code",null,"F2/S-F2"),r(" ：跳转到下一个/上一个错误/警告的位置")]),a("li",null,[a("code",null,"C-Left/C-Right"),r(" ：跳转到上一个/下一个单词的位置")]),a("li",null,[a("code",null,"C-B"),r(" ：跳转到变量/方法的声明处")]),a("li",null,[a("code",null,"CS-B"),r(" ：跳转到变量/方法的具体实现处，如果不止一处就会列出下拉框 "),a("blockquote",null,[a("p",null,[r("注：这里吾辈修改了快捷键，毕竟 "),a("code",null,"CA-B"),r(" 单手按起来还真有点麻烦")])])])])])],-1),y=a("blockquote",null,[a("p",null,[r("注：在 WebStorm 看来左侧字母上面的数字键和右侧小键盘的数字键是不同的！ 注: "),a("code",null,"Shift"),r(" 一般用于 "),a("strong",null,"增强/取反"),r(" 功能。例如 "),a("code",null,"C-F"),r(" 搜索当前文件，"),a("code",null,"CS-F"),r(" 搜索所有文件，"),a("code",null,"F2"),r(" 跳转到下一个错误，"),a("code",null,"S-F2"),r(" 跳转到上一个错误。")])],-1),_=a("h2",{id:"常用插件",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#常用插件","aria-hidden":"true"},"#"),r(" 常用插件")],-1),F={href:"https://plugins.jetbrains.com/plugin/4441-jrebel-for-intellij",target:"_blank",rel:"noopener noreferrer"},L=r("JRebel for IntelliJ"),M=r("：做 Java Web 开发时真心免不了的 Plugin，能够有效解决 Web 容器（例如 Apache Tomcat）启动速度慢的问题（因为几乎所有的资源都能够热加载，热部署）"),N={href:"https://plugins.jetbrains.com/plugin/7007-liveedit",target:"_blank",rel:"noopener noreferrer"},$=r("LiveEdit"),P=r("：提供了 HTML/CSS/JavaScript 的实时预览和刷新功能"),D={href:"https://plugins.jetbrains.com/plugin/10119-mybatisx",target:"_blank",rel:"noopener noreferrer"},B=r("MybatisX"),q=r("：Mybatis 的一个辅助开发插件，能够比较愉快的使用 Mybatis 框架了"),R={href:"https://plugins.jetbrains.com/plugin/10046-alibaba-java-coding-guidelines",target:"_blank",rel:"noopener noreferrer"},G=r("Alibaba Java Coding Guidelines"),H=r("：Alibaba 出品的一个 Java 规范检查插件，能够规避一些不好的代码"),I={href:"https://plugins.jetbrains.com/plugin/8579-translation",target:"_blank",rel:"noopener noreferrer"},O=r("Translation"),Q=r("：目前使用感觉最好的翻译插件，能够提供比较长的内容进行翻译（某些翻译插件只能翻译很短的内容）"),X={href:"https://plugins.jetbrains.com/plugin/2162-string-manipulation",target:"_blank",rel:"noopener noreferrer"},K=r("String Manipulation"),V=r("：字符串操作工具，可以方便对变量名或其他字符串修改为其他风格，例如将变量从 "),Y=a("strong",null,"驼峰命名",-1),U=r("（Java 标准命名） 修改为 "),z=a("strong",null,"下划线命名",-1),Z=r("（SQL 标准命名）或者 "),ll=a("strong",null,"中缀线命名",-1),el=r("（HTML/CSS 标准命名）。 "),nl=a("blockquote",null,[a("p",null,"其实这么多命名规范真心坑。。。")],-1),al={href:"https://plugins.jetbrains.com/plugin/9792-key-promoter-x",target:"_blank",rel:"noopener noreferrer"},tl=r("Key Promoter X"),rl=r("：使用鼠标操作时提示对应的快捷键"),sl={href:"https://plugins.jetbrains.com/plugin/9862-custom-postfix-templates",target:"_blank",rel:"noopener noreferrer"},ol=r("Custom Postfix Templates"),ul=r("：提供自定义的后缀模板"),il={href:"https://plugins.jetbrains.com/plugin/7896-markdown-navigator",target:"_blank",rel:"noopener noreferrer"},cl=r("Markdown Navigator"),pl=r("：WebStorm 平台的 Markdown 写作插件，比自带的 Markdown Support 要好很多，主要在需要写的 Markdown 内容中含有代码时比较方便"),dl={href:"https://plugins.jetbrains.com/plugin/7179-maven-helper",target:"_blank",rel:"noopener noreferrer"},bl=r("Maven Helper"),gl=r("：一个 Apache Maven 的辅助操作插件"),hl={href:"https://plugins.jetbrains.com/plugin/7275-codeglance",target:"_blank",rel:"noopener noreferrer"},ml=r("CodeGlance"),fl=r("：在编辑器右侧显示一块代码缩略图，主要为了方便使用滑块进行上下滑动"),kl={href:"https://plugins.jetbrains.com/plugin/7125-grep-console",target:"_blank",rel:"noopener noreferrer"},Sl=r("Grep Console"),vl=r("：自定义控制台的输出颜色"),jl={href:"https://plugins.jetbrains.com/plugin/7495--ignore",target:"_blank",rel:"noopener noreferrer"},Cl=r(".ignore"),xl=r("：在使用版本控制时，快速忽略某些文件/文件夹，目前支持广泛"),Al={href:"https://plugins.jetbrains.com/plugin/5834-cmd-support",target:"_blank",rel:"noopener noreferrer"},Wl=r("CMD support"),wl=r("：Cmd 支持，主要是方便在 WebStorm 中直接运行 bat 脚本"),Tl={href:"https://plugins.jetbrains.com/plugin/6098-nodejs",target:"_blank",rel:"noopener noreferrer"},El=r("NodeJS"),Jl=r("：集成了 NodeJS，可以直接在 WebStorm 中运行 NodeJS"),yl={href:"https://plugins.jetbrains.com/plugin/9442-vue-js",target:"_blank",rel:"noopener noreferrer"},_l=r("Vue.js"),Fl=r("：集成 Vue.js 框架"),Ll={href:"https://plugins.jetbrains.com/plugin/7494-eslint",target:"_blank",rel:"noopener noreferrer"},Ml=r("ESLint"),Nl=r("：前端代码规范"),$l={href:"https://plugins.jetbrains.com/plugin/10456-prettier",target:"_blank",rel:"noopener noreferrer"},Pl=r("Prettier"),Dl=r("：根据上面 ESLint 的规范自动格式化代码"),Bl={href:"https://plugins.jetbrains.com/plugin/8000-properties-to-yaml-converter",target:"_blank",rel:"noopener noreferrer"},ql=r("Properties to YAML Converter"),Rl=r("：将 "),Gl=a("code",null,"Properties",-1),Hl=r(" 文件快速转换为 "),Il=a("code",null,"YAML",-1),Ol=r(" 格式的配置文件"),Ql={href:"https://plugins.jetbrains.com/plugin/7425-wakatime",target:"_blank",rel:"noopener noreferrer"},Xl=r("WakaTime"),Kl=r("：统计使用的编程语言，不同 IDE 的记录"),Vl=a("h2",{id:"语言注入",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#语言注入","aria-hidden":"true"},"#"),r(" 语言注入")],-1),Yl=a("p",null,"为某一段区域的注入其他语言，WebStorm 最常见的就是在 JavaScript 的字符串中注入了 HTML/CSS/JavaScript，使得在字符串内也有代码提示可用。",-1),Ul=a("blockquote",null,[a("p",null,[r("此功能常用于 JavaScript 字符串拼接 HTML 代码，当然目前这个需求在 ES6 中由 "),a("code",null,"模板字符串"),r(" 原生实现了。")])],-1),zl=a("p",null,"我们也可以手动注入，例如为 Java 中的字符串注入 SQL 语言，这样在写 SQL 语句就不用跑到 SQL 编辑器那里写完 SQL 语句在粘贴过来了。",-1),Zl=a("h2",{id:"live-template-postfix-template-模板",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#live-template-postfix-template-模板","aria-hidden":"true"},"#"),r(" Live Template/Postfix Template 模板")],-1),le=a("p",null,[r("Live Template 模板就是那种在 Java 中输入 "),a("code",null,"sout"),r(" 就可以生成以下代码的模板功能，而这功能在 WebStorm 还可以自定义。")],-1),ee=a("div",{class:"language-java ext-java line-numbers-mode"},[a("pre",{class:"language-java"},[a("code",null,[a("span",{class:"token class-name"},"System"),a("span",{class:"token punctuation"},"."),r("out"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"println"),a("span",{class:"token punctuation"},"("),r("$END$"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),r("\n")])]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br")])],-1),ne=a("p",null,[r("例如吾辈就定义了 "),a("code",null,"autowired"),r(" 用于生成")],-1),ae=a("div",{class:"language-java ext-java line-numbers-mode"},[a("pre",{class:"language-java"},[a("code",null,[a("span",{class:"token annotation punctuation"},"@Autowired"),r(),a("span",{class:"token keyword"},"private"),r(" $"),a("span",{class:"token class-name"},"BeanClass"),r("$ $"),a("span",{class:"token class-name"},"BeanName"),r("$"),a("span",{class:"token punctuation"},";"),r("\n$END$\n")])]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br"),a("span",{class:"line-number"},"2"),a("br")])],-1),te=a("p",null,[r("或者 "),a("code",null,"thread")],-1),re=a("div",{class:"language-java ext-java line-numbers-mode"},[a("pre",{class:"language-java"},[a("code",null,[a("span",{class:"token keyword"},"new"),r(),a("span",{class:"token class-name"},"Thread"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),r(),a("span",{class:"token operator"},"->"),r(),a("span",{class:"token punctuation"},"{"),r("\n    $END$\n"),a("span",{class:"token punctuation"},"}"),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"start"),a("span",{class:"token punctuation"},"("),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),r("\n")])]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br"),a("span",{class:"line-number"},"2"),a("br"),a("span",{class:"line-number"},"3"),a("br")])],-1),se=r("此功能使用得当甚至能大量减少重复编码。不过相比之下另外一个代码生成功能吾辈更加喜欢，但 WebStorm 在 2018.2 版本之前并不支持自定义，所以功能上来说就显得稍弱一些，当然吾辈也使用插件（Custom Postfix Templates "),oe={href:"https://github.com/xylo/intellij-postfix-templates#download",target:"_blank",rel:"noopener noreferrer"},ue=r("GitHub"),ie=r("）实现了自定义的需求。最新版本 WebStorm 原生支持了自定义功能（"),ce={href:"https://blog.jetbrains.com/idea/2014/03/postfix-completion/",target:"_blank",rel:"noopener noreferrer"},pe=r("WebStorm 官方介绍"),de=r("），但实现尚不完善。"),be=a("p",null,[r("此功能可以做到另外一种形式的模板字符串，例如输入 "),a("code",null,'"str".var'),r(" 然后回车会得到")],-1),ge=a("div",{class:"language-java ext-java line-numbers-mode"},[a("pre",{class:"language-java"},[a("code",null,[a("span",{class:"token class-name"},"String"),r(" $variableName$ "),a("span",{class:"token operator"},"="),r(),a("span",{class:"token string"},'"str"'),a("span",{class:"token punctuation"},";"),r("$END$\n")])]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br")])],-1),he=a("p",null,[r("或者 "),a("code",null,'"str".sout')],-1),me=a("div",{class:"language-java ext-java line-numbers-mode"},[a("pre",{class:"language-java"},[a("code",null,[a("span",{class:"token class-name"},"Sysout"),a("span",{class:"token punctuation"},"."),r("out"),a("span",{class:"token punctuation"},"."),a("span",{class:"token function"},"println"),a("span",{class:"token punctuation"},"("),a("span",{class:"token string"},'"str"'),a("span",{class:"token punctuation"},")"),a("span",{class:"token punctuation"},";"),r("\n")])]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br")])],-1),fe=a("p",null,[r("吾辈也自定义一些，例如输入了 "),a("code",null,'"str".val'),r("，会生成")],-1),ke=a("div",{class:"language-java ext-java line-numbers-mode"},[a("pre",{class:"language-java"},[a("code",null,[a("span",{class:"token keyword"},"final"),r(),a("span",{class:"token class-name"},"String"),r(" $variableName$ "),a("span",{class:"token operator"},"="),r(),a("span",{class:"token string"},'"str"'),a("span",{class:"token punctuation"},";"),r("$END$\n")])]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br")])],-1),Se=a("h2",{id:"一些有用的配置项",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#一些有用的配置项","aria-hidden":"true"},"#"),r(" 一些有用的配置项")],-1),ve=a("h3",{id:"soft-wrap-强制换行",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#soft-wrap-强制换行","aria-hidden":"true"},"#"),r(" soft wrap 强制换行")],-1),je=a("p",null,"WebStorm 在一行过长时会出现横向滚动条，那我们不想要它出现以便于能直接使用键盘就能看完要怎么办呢？",-1),Ce=a("p",null,[r("可以在 "),a("em",null,"Settings ⇒ Editor ⇒ General ⇒ Soft Wraps"),r(" 中找到设置，将 "),a("strong",null,"Soft-wrap files"),r(" 的值修改为 "),a("code",null,"*"),r(" 即可。")],-1),xe=a("p",null,[a("img",{src:"https://cdn.jsdelivr.net/gh/rxliuli/img-bed/20191212090747.png",alt:"强制换行"})],-1),Ae=a("h3",{id:"根据源代码自动滚动项目",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#根据源代码自动滚动项目","aria-hidden":"true"},"#"),r(" 根据源代码自动滚动项目")],-1),We=a("p",null,"可以在跳转文件时，使文件目录自动聚焦在当前编辑的文件上，这在很多时候是有利于查看目录/文件的。",-1),we=a("p",null,"2019.3 之后",-1),Te=a("p",null,[r("在 "),a("em",null,"Project ⇒ Always Select Opened File"),r(" 中可以找到这个配置，启用即在整个项目中启用了。")],-1),Ee=a("p",null,[a("img",{src:"https://cdn.jsdelivr.net/gh/rxliuli/img-bed/20191224100414.png",alt:"根据源代码自动滚动项目设置"})],-1),Je=a("p",null,"2019.3 之前",-1),ye=a("p",null,[r("在 "),a("em",null,"Project ⇒ Tool ⇒ Autoscroll from Source"),r(" 中可以找到这个配置，启用即在整个项目中启用了。")],-1),_e=a("p",null,[a("img",{src:"https://cdn.jsdelivr.net/gh/rxliuli/img-bed/20191212090627.png",alt:"根据源代码自动滚动项目设置"})],-1),Fe=a("h3",{id:"项目外部依赖",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#项目外部依赖","aria-hidden":"true"},"#"),r(" 项目外部依赖")],-1),Le=a("p",null,"在传统 web 项目中，会有需要让 IDE 索引通过 script 标签引入的依赖，但现代前端绝大多数时候不应该让 IDE 处理。",-1),Me=a("p",null,[a("img",{src:"/assets/2bceea193e1945aeac57b5342eed3fcc.a50eff27.png",alt:"1619968206663"})],-1),Ne=a("p",null,[r("你需要在设置 "),a("em",null,"File | Settings | Languages & Frameworks | JavaScript | Libraries"),r(" 中取消不需要索引的依赖项。")],-1),$e=a("p",null,[a("img",{src:"/assets/96fd64b1eae1494698b5aa092574b1e2.1a63ac9e.png",alt:"1619968548104"})],-1),Pe=a("h3",{id:"在-typescript-项目中使用强类型提示",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#在-typescript-项目中使用强类型提示","aria-hidden":"true"},"#"),r(" 在 TypeScript 项目中使用强类型提示")],-1),De=a("p",null,"在 TypeScript 项目中，我们的代码提示应该基于 TypeScript 而非 WebStorm 的索引，因为前者要精确的多。",-1),Be=a("p",null,[a("img",{src:"/assets/b3561ab309a6462386c726372f30aeb2.f72254c5.png",alt:"1619969180589"})],-1),qe=a("p",null,"涉及到以下几个选项",-1),Re=a("ul",null,[a("li",null,[a("em",null,"File | Settings | Editor | General | Code Completion => Only type-based completion")])],-1),Ge=a("h3",{id:"typescript-项目中禁用-webstorm-的索引",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#typescript-项目中禁用-webstorm-的索引","aria-hidden":"true"},"#"),r(" typescript 项目中禁用 WebStorm 的索引")],-1),He=a("h3",{id:"设置背景图片",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#设置背景图片","aria-hidden":"true"},"#"),r(" 设置背景图片")],-1),Ie=a("p",null,[r("最新的 WebStorm 支持设置背景图片，具体设置在 "),a("em",null,"File | Settings | Appearance & Behavior | Appearance"),r("，效果如下")],-1),Oe=a("p",null,[a("img",{src:"/assets/837c6b07d00449dc9f61b083087b516d.5b3bde8c.png",alt:"1623482286209"})],-1),Qe=a("h2",{id:"复制-webstorm-提示的报错",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#复制-webstorm-提示的报错","aria-hidden":"true"},"#"),r(" 复制 WebStorm 提示的报错")],-1),Xe=a("blockquote",null,[a("p",null,"这个技巧的发现来源于一个同事")],-1),Ke=a("p",null,[r("有时候 WebStorm 提示我们错误，当我们把鼠标放在上面时会有一个 "),a("code",null,"Tooltip"),r("。但当我们想要复制这个错误时，却发现选择时 "),a("code",null,"Tooltip"),r(" 很容易消失，即便在较新版本中进行了改进，但想要复制仍然是非常痛苦的一件事，那么如何更加简单的复制错误呢？ 实际上，当我们将光标移动到错误上面时，左下角的状态栏中会有该错误并且可以右键复制！")],-1),Ve=a("p",null,[a("img",{src:"https://cdn.jsdelivr.net/gh/rxliuli/img-bed/20200430145423.png",alt:"复制 WebStorm ToolTip 提示"})],-1),Ye=r("相关问题参考："),Ue={href:"https://youtrack.jetbrains.com/issue/WebStorm-70943",target:"_blank",rel:"noopener noreferrer"},ze=r("https://youtrack.jetbrains.com/issue/WebStorm-70943"),Ze=r("，这是一个相当古老（2011 年）的问题，但 JetBrains 的开发者一开始甚至不认为这是一个问题，直到最近才着手修复它。 附：或许 JetBrains 的开发人员并不需要面向 Google 编程？#笑"),ln=a("h2",{id:"浏览器报错在-webstorm-打开相应文件",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#浏览器报错在-webstorm-打开相应文件","aria-hidden":"true"},"#"),r(" 浏览器报错在 WebStorm 打开相应文件")],-1),en=a("p",null,"参考：",-1),nn={href:"https://juejin.im/post/6844903967206408206",target:"_blank",rel:"noopener noreferrer"},an=r("React 调试的时候如何打开指定的编辑器 /webstorm"),tn=a("p",null,[r("react 项目下其实就是添加环境变量 "),a("code",null,"REACT_EDITOR"),r(" 而已，可以使用 "),a("code",null,".env.local"),r(" 进行配置")],-1),rn=a("div",{class:"language-env ext-env line-numbers-mode"},[a("pre",{class:"language-env"},[a("code",null,"REACT_EDITOR=[WebStorm 的路径]\n")]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br")])],-1),sn=a("h2",{id:"设定默认-jest-运行单元测试",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#设定默认-jest-运行单元测试","aria-hidden":"true"},"#"),r(" 设定默认 jest 运行单元测试")],-1),on=a("p",null,[r("在包含 react-scripts 依赖的项目中，WebStorm 会默认使用 react-scripts 运行测试，这在单体项目中当然很好，但如果是 monorepo，则会出现一些问题。react-scripts 运行时会强制修改 "),a("code",null,"tsconfig.json/react-app-env.d.ts"),r("，这在一些 node 子模块中会出现问题，而 react-scripts 目前还不能关闭这个功能。所以只能修改 WebStorm 的测试运行工具了，可以在 "),a("code",null,"Edit configuration"),r(" 中修改 "),a("code",null,"Jest => Jest Package"),r(" 字段值为 "),a("code",null,"jest"),r("，更推荐设置 "),a("code",null,"Templates => Jest => Jest Package"),r(" 字段，因为它可以一劳永逸。")],-1),un=a("p",null,[a("img",{src:"/assets/468e71461fca48fa9ae306f2da89fc48.e81f307e.png",alt:"1615086542056"})],-1),cn=r("参考："),pn={href:"https://stackoverflow.com/questions/53794875",target:"_blank",rel:"noopener noreferrer"},dn=r("How to configure react-script so that it doesn't override tsconfig.json on 'start'");s.render=function(r,s){const bn=l("OutboundLink");return e(),n(t,null,[o,u,i,c,p,d,b,g,h,m,f,k,S,v,j,C,x,A,a("blockquote",null,[a("p",null,[W,a("a",w,[T,a(bn)]),E])]),J,y,_,a("ul",null,[a("li",null,[a("a",F,[L,a(bn)]),M]),a("li",null,[a("a",N,[$,a(bn)]),P]),a("li",null,[a("a",D,[B,a(bn)]),q]),a("li",null,[a("a",R,[G,a(bn)]),H]),a("li",null,[a("a",I,[O,a(bn)]),Q]),a("li",null,[a("a",X,[K,a(bn)]),V,Y,U,z,Z,ll,el,nl]),a("li",null,[a("a",al,[tl,a(bn)]),rl]),a("li",null,[a("a",sl,[ol,a(bn)]),ul]),a("li",null,[a("a",il,[cl,a(bn)]),pl]),a("li",null,[a("a",dl,[bl,a(bn)]),gl]),a("li",null,[a("a",hl,[ml,a(bn)]),fl]),a("li",null,[a("a",kl,[Sl,a(bn)]),vl]),a("li",null,[a("a",jl,[Cl,a(bn)]),xl]),a("li",null,[a("a",Al,[Wl,a(bn)]),wl]),a("li",null,[a("a",Tl,[El,a(bn)]),Jl]),a("li",null,[a("a",yl,[_l,a(bn)]),Fl]),a("li",null,[a("a",Ll,[Ml,a(bn)]),Nl]),a("li",null,[a("a",$l,[Pl,a(bn)]),Dl]),a("li",null,[a("a",Bl,[ql,a(bn)]),Rl,Gl,Hl,Il,Ol]),a("li",null,[a("a",Ql,[Xl,a(bn)]),Kl])]),Vl,Yl,Ul,zl,Zl,le,ee,ne,ae,te,re,a("p",null,[se,a("a",oe,[ue,a(bn)]),ie,a("a",ce,[pe,a(bn)]),de]),be,ge,he,me,fe,ke,Se,ve,je,Ce,xe,Ae,We,we,Te,Ee,Je,ye,_e,Fe,Le,Me,Ne,$e,Pe,De,Be,qe,Re,Ge,He,Ie,Oe,Qe,Xe,Ke,Ve,a("blockquote",null,[a("p",null,[Ye,a("a",Ue,[ze,a(bn)]),Ze])]),ln,a("blockquote",null,[en,a("ul",null,[a("li",null,[a("a",nn,[an,a(bn)])])])]),tn,rn,sn,on,un,a("blockquote",null,[a("p",null,[cn,a("a",pn,[dn,a(bn)])])])],64)};export default s;
