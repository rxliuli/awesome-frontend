import{_ as o,M as n,p as a,q as s,R as e,t as r,N as l}from"./framework-96b046e1.js";const c={},i=e("h2",{id:"技术栈",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#技术栈","aria-hidden":"true"},"#"),r(" 技术栈")],-1),_={href:"https://electronjs.org/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://reactjs.org/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://www.typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"},p={href:"https://lerna.js.org/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://classic.yarnpkg.com/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://create-react-app.dev/",target:"_blank",rel:"noopener noreferrer"},b=e("h2",{id:"其他依赖库",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#其他依赖库","aria-hidden":"true"},"#"),r(" 其他依赖库")],-1),g=e("blockquote",null,[e("p",null,[r("参考: "),e("a",{href:"/p/664f86d038744a01894699e368cc2708"},"前端资源管理")])],-1),k={href:"https://rollupjs.org/",target:"_blank",rel:"noopener noreferrer"},m=e("li",null,"electron-builder: electron 打包工具",-1),w=e("li",null,"is-electron: 在渲染层判断是否为 electron 环境的微型库",-1),j=e("li",null,"fs-extra: nodejs api 的 Promise 化封装",-1),v=e("li",null,"react-use: react 中的通用 hooks 库",-1),x={href:"https://www.npmjs.com/org/liuli-util",target:"_blank",rel:"noopener noreferrer"},y=e("li",null,"jest: 单元测试工具",-1),E=e("li",null,"wallaby.js: 单元测试 IDE 集成",-1),N=e("li",null,"gulp: 流式任务管理工具",-1),q=e("li",null,"electron-store: 主进程和渲染层通用的 k-v 存储",-1),B=e("li",null,"electron-reloader: electron 热更新工具",-1),I=e("li",null,"electron-devtools-installer: electron 插件安装工具",-1),P=e("li",null,"utility-types: typescript 通用类型库",-1),V=e("h2",{id:"选择动机",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#选择动机","aria-hidden":"true"},"#"),r(" 选择动机")],-1),J=e("li",null,"electron: 想必来看到这篇文章的人都无需解释，基于 web 技术的跨平台足以解释一切。",-1),L=e("li",null,"react: 吾辈无意争论框架优劣，但 react 确实是目前最流行的解决方案，所以吾辈选择了它。",-1),S=e("li",null,"typescript: 由于吾辈有着 Java 后端的经验，所以对强类型情有独钟。",-1),C=e("code",null,"package.json",-1),D={href:"https://maven.apache.org/",target:"_blank",rel:"noopener noreferrer"},F={href:"https://github.com/electron-react-boilerplate/electron-react-boilerplate/",target:"_blank",rel:"noopener noreferrer"},M={href:"https://www.electronforge.io/",target:"_blank",rel:"noopener noreferrer"};function R(T,z){const t=n("ExternalLinkIcon");return a(),s("div",null,[i,e("ul",null,[e("li",null,[e("a",_,[r("electron"),l(t)]),r(": 跨平台桌面开发")]),e("li",null,[e("a",h,[r("react"),l(t)]),r(": 视图层框架")]),e("li",null,[e("a",d,[r("typescript"),l(t)]),r(": 强类型的 js")]),e("li",null,[e("a",p,[r("lerna"),l(t)]),r(": 前端 monorepo 管理工具")]),e("li",null,[e("a",u,[r("yarn"),l(t)]),r(": 包管理器，workspace 与 lerna 搭配非常好")]),e("li",null,[e("a",f,[r("create-react-app"),l(t)]),r(": react 官方出品的 react 脚手架生成器，社区和活跃度都不是其它工具可比的")])]),b,g,e("ul",null,[e("li",null,[e("a",k,[r("rollup"),l(t)]),r(": 前端库打包工具")]),m,w,j,v,e("li",null,[e("a",x,[r("@liuli-util/*"),l(t)]),r(": 吾辈个人的一系列通用工具库")]),y,E,N,q,B,I,P]),V,e("ul",null,[J,L,S,e("li",null,[r("lerna: 这个确实需要解释一下，electron 应用分为主进程和渲染层，一般示例中是将它们在一个项目中通过目录区分，但这种隔离性并不好，还会污染 "),C,r("。这时候就到了 lerna 出场了，它是由 babel 的作者开发，专门用以解决前端没有多模块工程的问题。 "),e("blockquote",null,[e("p",null,[r("PS1: 老实说，吾辈很想念 Java "),e("a",D,[r("maven"),l(t)]),r(" 多模块的支持，可以非常简单的抽取模块出来。 PS2: 前端有名的 electron-react 示例项目 "),e("a",F,[r("electron-react-boilerplate"),l(t)]),r(" 就是单模块的。")])])]),e("li",null,[r("electron-builder: electron 官方其实更推荐 "),e("a",M,[r("Electron Forge"),l(t)]),r("，但目前而言，electron-builder 更好。")])])])}const G=o(c,[["render",R],["__file","6edf2cfaf7ec46f0bfb659d8c7246c52.html.vue"]]);export{G as default};
