import{_ as o,M as c,p,q as i,R as n,t as s,N as e,a1 as t}from"./framework-96b046e1.js";const l={},r=n("h2",{id:"突然之间-electron-就不能启动了",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#突然之间-electron-就不能启动了","aria-hidden":"true"},"#"),s(" 突然之间 electron 就不能启动了")],-1),u=n("p",null,"删除 node_modules 重新 yarn 看看？",-1),d=n("h2",{id:"打包之后的程序页面空白",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#打包之后的程序页面空白","aria-hidden":"true"},"#"),s(" 打包之后的程序页面空白")],-1),k=n("p",null,"实际上是 electron 无法正常加载页面，原因很多",-1),h=n("li",null,[s("路径问题，解压 asar 查看实际路径（"),n("code",null,"main.js"),s(" 中 "),n("code",null,"loadUrl"),s(" 的路径是否正确）")],-1),_=n("li",null,"react router 仅支持 hash 模式",-1),m=n("code",null,"#",-1),f={href:"https://stackoverflow.com/questions/55715384s",target:"_blank",rel:"noopener noreferrer"},g=n("em",null,"win-unpacked/:/app",-1),b={href:"https://github.com/electron/asar",target:"_blank",rel:"noopener noreferrer"},v=n("h2",{id:"electron-程序命令行输出中文乱码",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#electron-程序命令行输出中文乱码","aria-hidden":"true"},"#"),s(" electron 程序命令行输出中文乱码")],-1),w=n("code",null,"chcp 65001",-1),x={href:"https://stackoverflow.com/questions/57131654",target:"_blank",rel:"noopener noreferrer"},q=t(`<h2 id="如何不打包成压缩格式-asar" tabindex="-1"><a class="header-anchor" href="#如何不打包成压缩格式-asar" aria-hidden="true">#</a> 如何不打包成压缩格式 asar</h2><p>配置 electron-builder <code>&quot;asar&quot;: false</code>。</p><h2 id="second-instance-事件监听无效" tabindex="-1"><a class="header-anchor" href="#second-instance-事件监听无效" aria-hidden="true">#</a> <code>second-instance</code> 事件监听无效</h2><p>必须使用 <code>app.requestSingleInstanceLock()</code> 保持应用程序单例，才能正常监听到该事件。</p><p>示例代码</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> gotTheLock <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">requestSingleInstanceLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>gotTheLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  app<span class="token punctuation">.</span><span class="token function">quit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;second-instance&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>event<span class="token punctuation">,</span> commandLine<span class="token punctuation">,</span> workingDirectory<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;second-instance&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),y={href:"https://www.electronjs.org/docs/api/app#apprequestsingleinstancelock",target:"_blank",rel:"noopener noreferrer"},L=t(`<h2 id="安装浏览器扩展报错" tabindex="-1"><a class="header-anchor" href="#安装浏览器扩展报错" aria-hidden="true">#</a> 安装浏览器扩展报错</h2><p>提示安装失败</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">(</span>node:23488<span class="token punctuation">)</span> ExtensionLoadWarning: Warnings loading extension at C:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>rxliuli<span class="token punctuation">\\</span>AppData<span class="token punctuation">\\</span>Roaming<span class="token punctuation">\\</span>Electron<span class="token punctuation">\\</span>extensions<span class="token punctuation">\\</span>fmkadmapgofadopljbjfkapdkoienihi: Unrecognized manifest key <span class="token string">&#39;browser_action&#39;</span><span class="token builtin class-name">.</span> Unre
cognized manifest key <span class="token string">&#39;minimum_chrome_version&#39;</span><span class="token builtin class-name">.</span> Unrecognized manifest key <span class="token string">&#39;update_url&#39;</span><span class="token builtin class-name">.</span> Cannot load extension with <span class="token function">file</span> or directory name _metadata. Filenames starting with <span class="token string">&quot;_&quot;</span> are reserved <span class="token keyword">for</span> use by
 the system.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其实答案是：扩展必须在 <code>app.ready</code> 之后，创建 BrowserWindow 窗口之前安装。</p>`,4);function U(C,E){const a=c("ExternalLinkIcon");return p(),i("div",null,[r,u,d,k,n("ol",null,[h,_,n("li",null,[s("在从文件系统中读取 html 文件时不能使用 "),m,s(" 指定路由，参考: "),n("a",f,[s("https://stackoverflow.com/questions/55715384s"),e(a)])])]),n("blockquote",null,[n("p",null,[s("asar 文件一般在 "),g,s("，参考: "),n("a",b,[s("https://github.com/electron/asar"),e(a)])])]),v,n("p",null,[s("在运行命令前首先运行 "),w,s(" 修改活动代码页编号，参考："),n("a",x,[s("Using UTF-8 Encoding (CHCP 65001) in Command Prompt / Windows Powershell (Windows 10)"),e(a)])]),q,n("blockquote",null,[n("p",null,[s("参考: "),n("a",y,[s("https://www.electronjs.org/docs/api/app#apprequestsingleinstancelock"),e(a)])])]),L])}const N=o(l,[["render",U],["__file","c68829779f5449d0afe0e67806dc7fc1.html.vue"]]);export{N as default};
