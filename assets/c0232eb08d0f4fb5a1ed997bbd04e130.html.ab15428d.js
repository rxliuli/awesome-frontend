import{r as o,o as e,c,a as s,d as p,F as u,b as n,e as t}from"./app.23916856.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";var i="/assets/f4568d723eb942838d7a068d46f721a1.153f9ace.svg",k="/assets/ff279700bc3646e68b53ba833dce9a5f.f3fd4baf.svg";const r={},b=s("h2",{id:"\u573A\u666F",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u573A\u666F","aria-hidden":"true"},"#"),n(" \u573A\u666F")],-1),m=s("p",null,[n("\u5728\u524D\u6587 "),s("a",{href:"/p/bafce41b0e6840908c5b5452c0fca1db"},"JavaScript \u6C99\u7BB1\u63A2\u7D22"),n(" \u4E2D\u58F0\u660E\u4E86\u6C99\u7BB1\u7684\u63A5\u53E3\uFF0C\u5E76\u4E14\u7ED9\u51FA\u4E86\u4E00\u4E9B\u7B80\u5355\u7684\u6267\u884C\u4EFB\u610F\u7B2C\u4E09\u65B9 js \u811A\u672C\u7684\u4EE3\u7801\uFF0C\u4F46\u5E76\u672A\u5B9E\u73B0\u5B8C\u6574\u7684 "),s("code",null,"IJavaScriptShadowbox"),n("\uFF0C\u4E0B\u9762\u4FBF\u8BB2\u4E00\u4E0B\u5982\u4F55\u57FA\u4E8E quickjs \u5B9E\u73B0\u5B83\u3002")],-1),d=n("quickjs \u5728 js \u7684\u5C01\u88C5\u5E93\u662F "),f={href:"https://github.com/justjake/quickjs-emscripten/",target:"_blank",rel:"noopener noreferrer"},v=n("quickjs-emscripten"),g=n("\uFF0C\u57FA\u672C\u539F\u7406\u662F\u5C06 c \u7F16\u8BD1\u4E3A wasm \u7136\u540E\u8FD0\u884C\u5728\u6D4F\u89C8\u5668\u3001nodejs \u4E0A\uFF0C\u5B83\u63D0\u4F9B\u4E86\u4EE5\u4E0B\u57FA\u7840\u7684 api\u3002"),w=t(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">LowLevelJavascriptVm<span class="token operator">&lt;</span>VmHandle<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  global<span class="token operator">:</span> VmHandle<span class="token punctuation">;</span>
  <span class="token keyword">undefined</span><span class="token operator">:</span> VmHandle<span class="token punctuation">;</span>
  <span class="token keyword">typeof</span><span class="token punctuation">(</span>handle<span class="token operator">:</span> VmHandle<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token function">getNumber</span><span class="token punctuation">(</span>handle<span class="token operator">:</span> VmHandle<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token function">getString</span><span class="token punctuation">(</span>handle<span class="token operator">:</span> VmHandle<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token function">newNumber</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> VmHandle<span class="token punctuation">;</span>
  <span class="token function">newString</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> VmHandle<span class="token punctuation">;</span>
  <span class="token function">newObject</span><span class="token punctuation">(</span>prototype<span class="token operator">?</span><span class="token operator">:</span> VmHandle<span class="token punctuation">)</span><span class="token operator">:</span> VmHandle<span class="token punctuation">;</span>
  <span class="token function">newFunction</span><span class="token punctuation">(</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    value<span class="token operator">:</span> VmFunctionImplementation<span class="token operator">&lt;</span>VmHandle<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> VmHandle<span class="token punctuation">;</span>
  <span class="token function">getProp</span><span class="token punctuation">(</span>handle<span class="token operator">:</span> VmHandle<span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> VmHandle<span class="token punctuation">)</span><span class="token operator">:</span> VmHandle<span class="token punctuation">;</span>
  <span class="token function">setProp</span><span class="token punctuation">(</span>handle<span class="token operator">:</span> VmHandle<span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> VmHandle<span class="token punctuation">,</span> value<span class="token operator">:</span> VmHandle<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token function">defineProp</span><span class="token punctuation">(</span>
    handle<span class="token operator">:</span> VmHandle<span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> VmHandle<span class="token punctuation">,</span>
    descriptor<span class="token operator">:</span> VmPropertyDescriptor<span class="token operator">&lt;</span>VmHandle<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token function">callFunction</span><span class="token punctuation">(</span>
    func<span class="token operator">:</span> VmHandle<span class="token punctuation">,</span>
    thisVal<span class="token operator">:</span> VmHandle<span class="token punctuation">,</span>
    <span class="token operator">...</span>args<span class="token operator">:</span> VmHandle<span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">)</span><span class="token operator">:</span> VmCallResult<span class="token operator">&lt;</span>VmHandle<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token function">evalCode</span><span class="token punctuation">(</span>code<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> VmCallResult<span class="token operator">&lt;</span>VmHandle<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>\u4E0B\u9762\u662F\u4E00\u6BB5\u5B98\u65B9\u7684\u4EE3\u7801\u793A\u4F8B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getQuickJS <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;quickjs-emscripten&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> QuickJS <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getQuickJS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> vm <span class="token operator">=</span> QuickJS<span class="token punctuation">.</span><span class="token function">createVm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> world <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">newString</span><span class="token punctuation">(</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  vm<span class="token punctuation">.</span><span class="token function">setProp</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>global<span class="token punctuation">,</span> <span class="token string">&quot;NAME&quot;</span><span class="token punctuation">,</span> world<span class="token punctuation">)</span><span class="token punctuation">;</span>
  world<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> result <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;Hello &quot; + NAME + &quot;!&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Execution failed:&quot;</span><span class="token punctuation">,</span> vm<span class="token punctuation">.</span><span class="token function">dump</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    result<span class="token punctuation">.</span>error<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Success:&quot;</span><span class="token punctuation">,</span> vm<span class="token punctuation">.</span><span class="token function">dump</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    result<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  vm<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div>`,3),y=n("\u53EF\u4EE5\u770B\u5230\uFF0C\u521B\u5EFA vm \u4E2D\u7684\u53D8\u91CF\u540E\u8FD8\u5FC5\u987B\u7559\u610F\u8C03\u7528 "),h=s("code",null,"dispose",-1),q=n("\uFF0C\u6709\u70B9\u50CF\u662F\u540E\u7AEF\u8FDE\u63A5\u6570\u636E\u5E93\u65F6\u5FC5\u987B\u6CE8\u610F\u5173\u95ED\u8FDE\u63A5\uFF0C\u800C\u8FD9\u5176\u5B9E\u662F\u6BD4\u8F83\u7E41\u7410\u7684\uFF0C\u5C24\u5176\u662F\u5728\u590D\u6742\u7684\u60C5\u51B5\u4E0B\u3002\u7B80\u800C\u8A00\u4E4B\uFF0C\u5B83\u7684 api \u592A\u8FC7\u4E8E\u5E95\u5C42\u4E86\u3002\u5728 github issue \u4E2D\u6709\u4EBA\u521B\u5EFA\u4E86 "),S={href:"https://github.com/reearth/quickjs-emscripten-sync",target:"_blank",rel:"noopener noreferrer"},_=n("quickjs-emscripten-sync"),V=n("\uFF0C\u8FD9\u7ED9\u4E86\u543E\u8F88\u5F88\u591A\u7075\u611F\uFF0C\u6240\u4EE5\u543E\u8F88\u57FA\u4E8E quickjs-emscripten \u5C01\u88C5\u4E86\u4E00\u4E9B\u5DE5\u5177\u51FD\u6570\uFF0C\u8F85\u52A9\u800C\u975E\u66FF\u4EE3\u5B83\u3002"),x=t(`<h2 id="\u7B80\u5316\u5E95\u5C42-api" tabindex="-1"><a class="header-anchor" href="#\u7B80\u5316\u5E95\u5C42-api" aria-hidden="true">#</a> \u7B80\u5316\u5E95\u5C42 api</h2><p>\u4E3B\u8981\u76EE\u7684\u6709\u4E24\u4E2A</p><ul><li>\u81EA\u52A8\u8C03\u7528 <code>dispose</code></li><li>\u63D0\u4F9B\u66F4\u597D\u7684\u521B\u5EFA vm \u503C\u7684\u65B9\u6CD5</li></ul><h3 id="\u81EA\u52A8\u8C03\u7528-dispose" tabindex="-1"><a class="header-anchor" href="#\u81EA\u52A8\u8C03\u7528-dispose" aria-hidden="true">#</a> \u81EA\u52A8\u8C03\u7528 <code>dispose</code></h3><p>\u4E3B\u8981\u601D\u8DEF\u662F\u81EA\u52A8\u6536\u96C6\u6240\u6709\u9700\u8981\u8C03\u7528 <code>dispose</code> \u7684\u503C\uFF0C\u4F7F\u7528\u9AD8\u9636\u51FD\u6570\u5728 callback \u6267\u884C\u5B8C\u4E4B\u540E\u81EA\u52A8\u8C03\u7528\u3002</p><blockquote><p>\u8FD9\u91CC\u8FD8\u9700\u8981\u6CE8\u610F\u907F\u514D\u4E0D\u9700\u8981\u7684\u591A\u5C42\u5D4C\u5957\u4EE3\u7406\uFF0C\u4E3B\u8981\u662F\u8003\u8651\u5230\u4E0B\u9762\u66F4\u591A\u7684\u5E95\u5C42 api \u57FA\u4E8E\u5B83\u5B9E\u73B0\uFF0C\u800C\u5B83\u4EEC\u4E4B\u95F4\u53EF\u80FD\u5B58\u5728\u5D4C\u5957\u8C03\u7528\u3002</p></blockquote><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> QuickJSHandle<span class="token punctuation">,</span> QuickJSVm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;quickjs-emscripten&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> QuickJSVmScopeSymbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;QuickJSVmScope&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u4E3A QuickJSVm \u6DFB\u52A0\u5C40\u90E8\u4F5C\u7528\u57DF\uFF0C\u5C40\u90E8\u4F5C\u7528\u57DF\u7684\u6240\u6709\u65B9\u6CD5\u8C03\u7528\u4E0D\u518D\u9700\u8981\u624B\u52A8\u91CA\u653E\u5185\u5B58
 * <span class="token keyword">@param</span> <span class="token parameter">vm</span>
 * <span class="token keyword">@param</span> <span class="token parameter">handle</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> withScope<span class="token operator">&lt;</span><span class="token constant">F</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span>vm<span class="token operator">:</span> QuickJSVm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  vm<span class="token operator">:</span> QuickJSVm<span class="token punctuation">,</span>
  handle<span class="token operator">:</span> <span class="token constant">F</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  value<span class="token operator">:</span> ReturnType<span class="token operator">&lt;</span><span class="token constant">F</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> disposes<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">wrap</span><span class="token punctuation">(</span>handle<span class="token operator">:</span> QuickJSHandle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    disposes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> handle<span class="token punctuation">.</span>alive <span class="token operator">&amp;&amp;</span> handle<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> handle<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//\u907F\u514D\u591A\u5C42\u4EE3\u7406</span>
  <span class="token keyword">const</span> isProxy <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> QuickJSVmScopeSymbol<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isProxy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> QuickJSVmScopeSymbol<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    disposes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>dispose<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u624B\u52A8\u91CA\u653E\u95ED\u5305\u53D8\u91CF\u7684\u5185\u5B58</span>
    disposes<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token function">handle</span><span class="token punctuation">(</span>
    isProxy
      <span class="token operator">?</span> vm
      <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token punctuation">{</span>
          <span class="token function">get</span><span class="token punctuation">(</span>
            target<span class="token operator">:</span> QuickJSVm<span class="token punctuation">,</span>
            p<span class="token operator">:</span> <span class="token keyword">keyof</span> QuickJSVm <span class="token operator">|</span> <span class="token keyword">typeof</span> QuickJSVmScopeSymbol
          <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">===</span> QuickJSVmScopeSymbol<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> dispose<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//\u9501\u5B9A\u6240\u6709\u65B9\u6CD5\u7684 this \u503C\u4E3A QuickJSVm \u5BF9\u8C61\u800C\u975E Proxy \u5BF9\u8C61</span>
            <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> p<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>
              p<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;new&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span>
              <span class="token punctuation">[</span><span class="token string">&quot;getProp&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;unwrapResult&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
            <span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> QuickJSHandle <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token function">wrap</span><span class="token punctuation">(</span><span class="token function">Reflect</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> target<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;evalCode&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;callFunction&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">(</span>target<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
                disposes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                  <span class="token keyword">const</span> handle <span class="token operator">=</span> res<span class="token punctuation">.</span>error <span class="token operator">??</span> res<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
                  handle<span class="token punctuation">.</span>alive <span class="token operator">&amp;&amp;</span> handle<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> res<span class="token punctuation">;</span>
              <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> res <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token function">Reflect</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> target<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> res<span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> dispose <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br></div></div><p>\u4F7F\u7528</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">withScope</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> _hello <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">newFunction</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> _object <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">newObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  vm<span class="token punctuation">.</span><span class="token function">setProp</span><span class="token punctuation">(</span>_object<span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> _hello<span class="token punctuation">)</span><span class="token punctuation">;</span>
  vm<span class="token punctuation">.</span><span class="token function">setProp</span><span class="token punctuation">(</span>_object<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> vm<span class="token punctuation">.</span><span class="token function">newString</span><span class="token punctuation">(</span><span class="token string">&quot;liuli&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">dump</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">getProp</span><span class="token punctuation">(</span>_object<span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>not<span class="token punctuation">.</span><span class="token function">toBeNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  vm<span class="token punctuation">.</span><span class="token function">setProp</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>global<span class="token punctuation">,</span> <span class="token string">&quot;VM_GLOBAL&quot;</span><span class="token punctuation">,</span> _object<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u751A\u81F3\u652F\u6301\u5D4C\u5957\u8C03\u7528\uFF0C\u800C\u4E14\u4EC5\u9700\u8981\u5728\u6700\u5916\u5C42\u7EDF\u4E00\u8C03\u7528 <code>dispose</code> \u5373\u53EF</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">withScope</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token function">withScope</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">dump</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">unwrapResult</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token string">&quot;1+1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u63D0\u4F9B\u66F4\u597D\u7684\u521B\u5EFA-vm-\u503C\u7684\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u63D0\u4F9B\u66F4\u597D\u7684\u521B\u5EFA-vm-\u503C\u7684\u65B9\u6CD5" aria-hidden="true">#</a> \u63D0\u4F9B\u66F4\u597D\u7684\u521B\u5EFA vm \u503C\u7684\u65B9\u6CD5</h3><p>\u4E3B\u8981\u601D\u8DEF\u662F\u5224\u65AD\u521B\u5EFA vm \u53D8\u91CF\u7684\u7C7B\u578B\uFF0C\u81EA\u52A8\u8C03\u7528\u76F8\u5E94\u7684\u51FD\u6570\uFF0C\u7136\u540E\u8FD4\u56DE\u521B\u5EFA\u7684\u53D8\u91CF\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> QuickJSHandle<span class="token punctuation">,</span> QuickJSVm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;quickjs-emscripten&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> withScope <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./withScope&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">MarshalValue</span> <span class="token operator">=</span> <span class="token punctuation">{</span> value<span class="token operator">:</span> QuickJSHandle<span class="token punctuation">;</span> <span class="token function-variable function">dispose</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u7B80\u5316\u4F7F\u7528 QuickJSVm \u521B\u5EFA\u590D\u6742\u5BF9\u8C61\u7684\u64CD\u4F5C
 * <span class="token keyword">@param</span> <span class="token parameter">vm</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">marshal</span><span class="token punctuation">(</span>vm<span class="token operator">:</span> QuickJSVm<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">marshal</span><span class="token punctuation">(</span><span class="token function-variable function">value</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> MarshalValue<span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">marshal</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> MarshalValue<span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">marshal</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> MarshalValue <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">withScope</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">function</span> <span class="token function">_f</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> QuickJSHandle <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> vm<span class="token punctuation">.</span><span class="token function">newString</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> vm<span class="token punctuation">.</span><span class="token function">newNumber</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&quot;boolean&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> vm<span class="token punctuation">.</span><span class="token function">unwrapResult</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> vm<span class="token punctuation">.</span>undefined<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> vm<span class="token punctuation">.</span>null<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&quot;bigint&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> vm<span class="token punctuation">.</span><span class="token function">unwrapResult</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">BigInt(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> vm<span class="token punctuation">.</span><span class="token function">newFunction</span><span class="token punctuation">(</span>name<span class="token operator">!</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token builtin">Array</span><span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> _array <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">newArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            value<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> v <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;\u6570\u7EC4\u4E2D\u7981\u6B62\u5305\u542B\u51FD\u6570\uFF0C\u56E0\u4E3A\u65E0\u6CD5\u6307\u5B9A\u540D\u5B57&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
              vm<span class="token punctuation">.</span><span class="token function">callFunction</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">getProp</span><span class="token punctuation">(</span>_array<span class="token punctuation">,</span> <span class="token string">&quot;push&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _array<span class="token punctuation">,</span> <span class="token function">_f</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> _array<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token keyword">instanceof</span> <span class="token class-name">Map</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> _map <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">unwrapResult</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token string">&quot;new Map()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            value<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> k<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              vm<span class="token punctuation">.</span><span class="token function">unwrapResult</span><span class="token punctuation">(</span>
                vm<span class="token punctuation">.</span><span class="token function">callFunction</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">getProp</span><span class="token punctuation">(</span>_map<span class="token punctuation">,</span> <span class="token string">&quot;set&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> _map<span class="token punctuation">,</span> <span class="token function">_f</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">_f</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">)</span>
              <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> _map<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">const</span> _object <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">newObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">[</span>k<span class="token punctuation">,</span> v<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            vm<span class="token punctuation">.</span><span class="token function">setProp</span><span class="token punctuation">(</span>_object<span class="token punctuation">,</span> k<span class="token punctuation">,</span> <span class="token function">_f</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> _object<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E0D\u652F\u6301\u7684\u7C7B\u578B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token function">_f</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> marshal<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br></div></div><p>\u4F7F\u7528</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> mockHello <span class="token operator">=</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> dispose <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">marshal</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;liuli&quot;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  sex<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  hobby<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  account<span class="token operator">:</span> <span class="token punctuation">{</span>
    username<span class="token operator">:</span> <span class="token string">&quot;li&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  hello<span class="token operator">:</span> mockHello<span class="token punctuation">,</span>
  map<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  date<span class="token operator">:</span> now<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
vm<span class="token punctuation">.</span><span class="token function">setProp</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>global<span class="token punctuation">,</span> <span class="token string">&quot;vm_global&quot;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">evalCode</span><span class="token punctuation">(</span>code<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> vm<span class="token punctuation">.</span><span class="token function">unwrapResult</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">evalCode</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">consume</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">dump</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token string">&quot;vm_global.name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&quot;liuli&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token string">&quot;vm_global.age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token string">&quot;vm_global.sex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token string">&quot;vm_global.hobby&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token string">&quot;vm_global.date&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token string">&quot;vm_global.account.username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span><span class="token string">&quot;li&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token string">&quot;vm_global.hello()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>mockHello<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>calls<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token string">&quot;vm_global.map.size&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token string">&quot;vm_global.map.get(1)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div>`,16),M=n("\u76EE\u524D\u652F\u6301\u7684\u7C7B\u578B\u4E0E "),C={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Workers_API/Structured_clone_algorithm",target:"_blank",rel:"noopener noreferrer"},J=n("JavaScript \u7ED3\u6784\u5316\u514B\u9686\u7B97\u6CD5"),I=n(" \u5BF9\u6BD4\uFF0C\u540E\u8005\u5728\u5F88\u591A\u5730\u65B9\uFF08iframe/web worker/worker_threads\uFF09\u5747\u6709\u4F7F\u7528"),E=t(`<table><thead><tr><th>\u5BF9\u8C61\u7C7B\u578B</th><th>quickjs</th><th>\u7ED3\u6784\u5316\u514B\u9686</th><th>\u6CE8\u610F</th></tr></thead><tbody><tr><td>\u6240\u6709\u7684\u539F\u59CB\u7C7B\u578B</td><td>\u2714\uFE0F</td><td>\u274C</td><td>symbols \u9664\u5916</td></tr><tr><td>Function</td><td>\u2714\uFE0F</td><td>\u2714\uFE0F</td><td></td></tr><tr><td>Array</td><td>\u2714\uFE0F</td><td>\u2714\uFE0F</td><td></td></tr><tr><td>Object</td><td>\u2714\uFE0F</td><td>\u2714\uFE0F</td><td>\u4EC5\u5305\u62EC\u666E\u901A\u5BF9\u8C61\uFF08\u5982\u5BF9\u8C61\u5B57\u9762\u91CF\uFF09</td></tr><tr><td>Map</td><td>\u2714\uFE0F</td><td>\u2714\uFE0F</td><td></td></tr><tr><td>Set</td><td>\u2714\uFE0F</td><td>\u2714\uFE0F</td><td></td></tr><tr><td>Date</td><td>\u2714\uFE0F</td><td>\u2714\uFE0F</td><td></td></tr><tr><td>Error</td><td>\u274C</td><td>\u274C</td><td></td></tr><tr><td>Boolean</td><td>\u274C</td><td>\u2714\uFE0F</td><td>\u5BF9\u8C61</td></tr><tr><td>String</td><td>\u274C</td><td>\u2714\uFE0F</td><td>\u5BF9\u8C61</td></tr><tr><td>RegExp</td><td>\u274C</td><td>\u2714\uFE0F</td><td>lastIndex \u5B57\u6BB5\u4E0D\u4F1A\u88AB\u4FDD\u7559\u3002</td></tr><tr><td>Blob</td><td>\u274C</td><td>\u2714\uFE0F</td><td></td></tr><tr><td>File</td><td>\u274C</td><td>\u2714\uFE0F</td><td></td></tr><tr><td>FileList</td><td>\u274C</td><td>\u2714\uFE0F</td><td></td></tr><tr><td>ArrayBuffer</td><td>\u274C</td><td>\u2714\uFE0F</td><td></td></tr><tr><td>ArrayBufferView</td><td>\u274C</td><td>\u2714\uFE0F</td><td>\u8FD9\u57FA\u672C\u4E0A\u610F\u5473\u7740\u6240\u6709\u7684\u7C7B\u578B\u5316\u6570\u7EC4</td></tr><tr><td>ImageData</td><td>\u274C</td><td>\u2714\uFE0F</td><td></td></tr></tbody></table><blockquote><p>\u4EE5\u4E0A\u4E0D\u652F\u6301\u7684\u975E\u5E38\u89C1\u7C7B\u578B\u5E76\u975E quickjs \u4E0D\u652F\u6301\uFF0C\u4EC5\u4EC5\u662F marshal \u6682\u672A\u652F\u6301\u3002</p></blockquote><h2 id="\u5B9E\u73B0-console-settimeout-setinterval-\u7B49\u5E38\u89C1-api" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-console-settimeout-setinterval-\u7B49\u5E38\u89C1-api" aria-hidden="true">#</a> \u5B9E\u73B0 console/setTimeout/setInterval \u7B49\u5E38\u89C1 api</h2><p>\u7531\u4E8E console/setTimeout/setInterval \u5747\u4E0D\u662F js \u8BED\u8A00\u7EA7\u522B\u7684 api\uFF08\u4F46\u662F\u6D4F\u89C8\u5668\u3001nodejs \u5747\u5B9E\u73B0\u4E86\uFF09\uFF0C\u6240\u4EE5\u543E\u8F88\u5FC5\u987B\u624B\u52A8\u5B9E\u73B0\u5E76\u6CE8\u5165\u5B83\u4EEC\u3002</p><h3 id="\u5B9E\u73B0-console" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-console" aria-hidden="true">#</a> \u5B9E\u73B0 console</h3><p>\u57FA\u672C\u601D\u8DEF\uFF1A\u4E3A vm \u6CE8\u5165\u5168\u5C40 console \u5BF9\u8C61\uFF0C\u5C06\u53C2\u6570 dump \u4E4B\u540E\u8F6C\u53D1\u5230\u771F\u6B63\u7684 console api</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> QuickJSVm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;quickjs-emscripten&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> marshal <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../util/marshal&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">IVmConsole</span> <span class="token punctuation">{</span>
  <span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token function">info</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token function">warn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
  <span class="token function">error</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u5B9A\u4E49 vm \u4E2D\u7684 console api
 * <span class="token keyword">@param</span> <span class="token parameter">vm</span>
 * <span class="token keyword">@param</span> <span class="token parameter">logger</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">defineConsole</span><span class="token punctuation">(</span>vm<span class="token operator">:</span> QuickJSVm<span class="token punctuation">,</span> logger<span class="token operator">:</span> IVmConsole<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> fields <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;log&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;warn&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> dump <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">dump</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> dispose <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">marshal</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">(</span>
    fields<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> k<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        logger<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>dump<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">as</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  vm<span class="token punctuation">.</span><span class="token function">setProp</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>global<span class="token punctuation">,</span> <span class="token string">&quot;console&quot;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">BasicVmConsole</span> <span class="token keyword">implements</span> <span class="token class-name">IVmConsole</span> <span class="token punctuation">{</span>
  <span class="token function">error</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">info</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">warn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><p>\u4F7F\u7528</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">defineConsole</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BasicVmConsole</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="\u5B9E\u73B0-settimeout" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-settimeout" aria-hidden="true">#</a> \u5B9E\u73B0 setTimeout</h3><p>\u57FA\u672C\u601D\u8DEF</p><p><img src="`+i+`" alt="\u57FA\u4E8E quickjs \u5B9E\u73B0 setTimeout \u4E0E clearTimeout.drawio.svg"></p><ol><li>\u4E3A vm \u6CE8\u5165\u5168\u5C40 <code>setTimeout/clearTimeout</code> \u51FD\u6570</li><li>setTimeout <ol><li>\u5C06\u4F20\u8FC7\u6765\u7684 <code>callbackFunc</code> \u6CE8\u518C\u4E3A vm \u5168\u5C40\u53D8\u91CF</li><li>\u5728\u7CFB\u7EDF\u5C42\u6267\u884C <code>setTimeout</code></li><li>\u5C06 <code>clearTimeoutId =&gt; timeoutId</code> \u5199\u5230 map\uFF0C\u8FD4\u56DE\u4E00\u4E2A <code>clearTimeoutId</code></li><li>\u6267\u884C\u521A\u521A\u6CE8\u518C\u7684\u5168\u5C40 vm \u53D8\u91CF\uFF0C\u5E76\u6E05\u9664\u56DE\u8C03</li></ol></li><li>clearTimeout: \u6839\u636E <code>clearTimeoutId</code> \u5728\u7CFB\u7EDF\u5C42\u8C03\u7528\u771F\u5B9E\u7684 <code>clearTimeout</code></li></ol><blockquote><p>\u4E0D\u76F4\u63A5\u8FD4\u56DE setTimeout \u8FD4\u56DE\u503C\u7684\u539F\u56E0\u5728\u4E8E\u5728 nodejs \u4E2D\u8FD4\u56DE\u503C\u662F\u4E00\u4E2A\u5BF9\u8C61\u800C\u975E\u4E00\u4E2A\u6570\u5B57\uFF0C\u6240\u4EE5\u9700\u8981\u4F7F\u7528 map \u517C\u5BB9</p></blockquote><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> QuickJSVm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;quickjs-emscripten&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> withScope <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../util/withScope&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> VmSetInterval <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./defineSetInterval&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> deleteKey <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../util/deleteKey&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> CallbackIdGenerator <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@webos/ipc-main&quot;</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u6CE8\u5165 setTimeout \u65B9\u6CD5
 * \u9700\u8981\u5728\u6CE8\u5165\u540E\u8C03\u7528 <span class="token punctuation">{</span><span class="token keyword">@link</span> defineEventLoop<span class="token punctuation">}</span> \u8BA9 vm \u7684\u4E8B\u4EF6\u5FAA\u73AF\u8DD1\u8D77\u6765
 * <span class="token keyword">@param</span> <span class="token parameter">vm</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">defineSetTimeout</span><span class="token punctuation">(</span>vm<span class="token operator">:</span> QuickJSVm<span class="token punctuation">)</span><span class="token operator">:</span> VmSetInterval <span class="token punctuation">{</span>
  <span class="token keyword">const</span> callbackMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">clear</span><span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">withScope</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">deleteKey</span><span class="token punctuation">(</span>
        vm<span class="token punctuation">,</span>
        vm<span class="token punctuation">.</span><span class="token function">unwrapResult</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">VM_GLOBAL.setTimeoutCallback</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        id
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">clearInterval</span><span class="token punctuation">(</span>callbackMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    callbackMap<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">withScope</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> vmGlobal <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">getProp</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>global<span class="token punctuation">,</span> <span class="token string">&quot;VM_GLOBAL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">typeof</span><span class="token punctuation">(</span>vmGlobal<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;undefined&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;VM_GLOBAL \u4E0D\u5B58\u5728\uFF0C\u9700\u8981\u5148\u6267\u884C defineVmGlobal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    vm<span class="token punctuation">.</span><span class="token function">setProp</span><span class="token punctuation">(</span>vmGlobal<span class="token punctuation">,</span> <span class="token string">&quot;setTimeoutCallback&quot;</span><span class="token punctuation">,</span> vm<span class="token punctuation">.</span><span class="token function">newObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    vm<span class="token punctuation">.</span><span class="token function">setProp</span><span class="token punctuation">(</span>
      vm<span class="token punctuation">.</span>global<span class="token punctuation">,</span>
      <span class="token string">&quot;setTimeout&quot;</span><span class="token punctuation">,</span>
      vm<span class="token punctuation">.</span><span class="token function">newFunction</span><span class="token punctuation">(</span><span class="token string">&quot;setTimeout&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>callback<span class="token punctuation">,</span> ms<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> id <span class="token operator">=</span> CallbackIdGenerator<span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u6B64\u5904\u5DF2\u7ECF\u662F\u5F02\u6B65\u4E86\uFF0C\u5FC5\u987B\u518D\u5305\u4E00\u5C42</span>
        <span class="token function">withScope</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> callbacks <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">unwrapResult</span><span class="token punctuation">(</span>
            vm<span class="token punctuation">.</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token string">&quot;VM_GLOBAL.setTimeoutCallback&quot;</span><span class="token punctuation">)</span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
          vm<span class="token punctuation">.</span><span class="token function">setProp</span><span class="token punctuation">(</span>callbacks<span class="token punctuation">,</span> id<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">//\u6B64\u5904\u8FD8\u662F\u5F02\u6B65\u7684\uFF0C\u5FC5\u987B\u518D\u5305\u4E00\u5C42</span>
          <span class="token keyword">const</span> timeout <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>
            <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
              <span class="token function">withScope</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> callbacks <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">unwrapResult</span><span class="token punctuation">(</span>
                  vm<span class="token punctuation">.</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">VM_GLOBAL.setTimeoutCallback</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">const</span> callback <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">getProp</span><span class="token punctuation">(</span>callbacks<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
                vm<span class="token punctuation">.</span><span class="token function">callFunction</span><span class="token punctuation">(</span>callback<span class="token punctuation">,</span> vm<span class="token punctuation">.</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>
                callbackMap<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            vm<span class="token punctuation">.</span><span class="token function">dump</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
          callbackMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> vm<span class="token punctuation">.</span><span class="token function">newString</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    vm<span class="token punctuation">.</span><span class="token function">setProp</span><span class="token punctuation">(</span>
      vm<span class="token punctuation">.</span>global<span class="token punctuation">,</span>
      <span class="token string">&quot;clearTimeout&quot;</span><span class="token punctuation">,</span>
      vm<span class="token punctuation">.</span><span class="token function">newFunction</span><span class="token punctuation">(</span><span class="token string">&quot;clearTimeout&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">clear</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">dump</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    callbackMap<span class="token punctuation">,</span>
    <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token punctuation">[</span><span class="token operator">...</span>callbackMap<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>clear<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br></div></div><p>\u4F7F\u7528</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> vmSetTimeout <span class="token operator">=</span> <span class="token function">defineSetTimeout</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">withScope</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  vm<span class="token punctuation">.</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
      const begin = Date.now()
      setInterval(() =&gt; {
        console.log(Date.now() - begin)
      }, 100)
    </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
vmSetTimeout<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="\u5B9E\u73B0-setinterval" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-setinterval" aria-hidden="true">#</a> \u5B9E\u73B0 setInterval</h3><p>\u57FA\u672C\u4E0A\uFF0C\u4E0E\u5B9E\u73B0 setTimeout \u6D41\u7A0B\u5DEE\u4E0D\u591A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> QuickJSVm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;quickjs-emscripten&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> withScope <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../util/withScope&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> deleteKey <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../util/deleteKey&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> CallbackIdGenerator <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@webos/ipc-main&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">VmSetInterval</span> <span class="token punctuation">{</span>
  callbackMap<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u6CE8\u5165 setInterval \u65B9\u6CD5
 * \u9700\u8981\u5728\u6CE8\u5165\u540E\u8C03\u7528 <span class="token punctuation">{</span><span class="token keyword">@link</span> defineEventLoop<span class="token punctuation">}</span> \u8BA9 vm \u7684\u4E8B\u4EF6\u5FAA\u73AF\u8DD1\u8D77\u6765
 * <span class="token keyword">@param</span> <span class="token parameter">vm</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">defineSetInterval</span><span class="token punctuation">(</span>vm<span class="token operator">:</span> QuickJSVm<span class="token punctuation">)</span><span class="token operator">:</span> VmSetInterval <span class="token punctuation">{</span>
  <span class="token keyword">const</span> callbackMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">clear</span><span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">withScope</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">deleteKey</span><span class="token punctuation">(</span>
        vm<span class="token punctuation">,</span>
        vm<span class="token punctuation">.</span><span class="token function">unwrapResult</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">VM_GLOBAL.setTimeoutCallback</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        id
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">clearInterval</span><span class="token punctuation">(</span>callbackMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    callbackMap<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">withScope</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> vmGlobal <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">getProp</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>global<span class="token punctuation">,</span> <span class="token string">&quot;VM_GLOBAL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">typeof</span><span class="token punctuation">(</span>vmGlobal<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;undefined&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;VM_GLOBAL \u4E0D\u5B58\u5728\uFF0C\u9700\u8981\u5148\u6267\u884C defineVmGlobal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    vm<span class="token punctuation">.</span><span class="token function">setProp</span><span class="token punctuation">(</span>vmGlobal<span class="token punctuation">,</span> <span class="token string">&quot;setIntervalCallback&quot;</span><span class="token punctuation">,</span> vm<span class="token punctuation">.</span><span class="token function">newObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    vm<span class="token punctuation">.</span><span class="token function">setProp</span><span class="token punctuation">(</span>
      vm<span class="token punctuation">.</span>global<span class="token punctuation">,</span>
      <span class="token string">&quot;setInterval&quot;</span><span class="token punctuation">,</span>
      vm<span class="token punctuation">.</span><span class="token function">newFunction</span><span class="token punctuation">(</span><span class="token string">&quot;setInterval&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>callback<span class="token punctuation">,</span> ms<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> id <span class="token operator">=</span> CallbackIdGenerator<span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u6B64\u5904\u5DF2\u7ECF\u662F\u5F02\u6B65\u4E86\uFF0C\u5FC5\u987B\u518D\u5305\u4E00\u5C42</span>
        <span class="token function">withScope</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> callbacks <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">unwrapResult</span><span class="token punctuation">(</span>
            vm<span class="token punctuation">.</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token string">&quot;VM_GLOBAL.setIntervalCallback&quot;</span><span class="token punctuation">)</span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
          vm<span class="token punctuation">.</span><span class="token function">setProp</span><span class="token punctuation">(</span>callbacks<span class="token punctuation">,</span> id<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">const</span> interval <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">withScope</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              vm<span class="token punctuation">.</span><span class="token function">callFunction</span><span class="token punctuation">(</span>
                vm<span class="token punctuation">.</span><span class="token function">unwrapResult</span><span class="token punctuation">(</span>
                  vm<span class="token punctuation">.</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">VM_GLOBAL.setIntervalCallback[&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;]</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
                <span class="token punctuation">)</span><span class="token punctuation">,</span>
                vm<span class="token punctuation">.</span>null
              <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> vm<span class="token punctuation">.</span><span class="token function">dump</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          callbackMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> interval<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> vm<span class="token punctuation">.</span><span class="token function">newString</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    vm<span class="token punctuation">.</span><span class="token function">setProp</span><span class="token punctuation">(</span>
      vm<span class="token punctuation">.</span>global<span class="token punctuation">,</span>
      <span class="token string">&quot;clearInterval&quot;</span><span class="token punctuation">,</span>
      vm<span class="token punctuation">.</span><span class="token function">newFunction</span><span class="token punctuation">(</span><span class="token string">&quot;clearInterval&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">clear</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">dump</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    callbackMap<span class="token punctuation">,</span>
    <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token punctuation">[</span><span class="token operator">...</span>callbackMap<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>clear<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br></div></div><h3 id="\u5B9E\u73B0\u4E8B\u4EF6\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u4E8B\u4EF6\u5FAA\u73AF" aria-hidden="true">#</a> \u5B9E\u73B0\u4E8B\u4EF6\u5FAA\u73AF</h3><p>\u4F46\u6709\u4E00\u70B9\u9EBB\u70E6\u7684\u662F\uFF0Cquickjs-emscripten \u4E0D\u4F1A\u81EA\u52A8\u6267\u884C\u4E8B\u4EF6\u5FAA\u73AF\uFF0C\u5373 Promise \u5728 resolve \u4E4B\u540E\u4E0D\u4F1A\u81EA\u52A8\u6267\u884C\u4E0B\u4E00\u6B65\u3002\u5B98\u65B9\u63D0\u4F9B\u4E86 <code>executePendingJobs</code> \u65B9\u6CD5\u8BA9\u6211\u4EEC\u624B\u52A8\u6267\u884C\u4E8B\u4EF6\u5FAA\u73AF\uFF0C\u5982\u4E0B\u6240\u793A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> log <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">defineMockConsole</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">withScope</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  vm<span class="token punctuation">.</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Promise.resolve().then(()=&gt;console.log(1))</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>log<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>calls<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
vm<span class="token punctuation">.</span><span class="token function">executePendingJobs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>log<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>calls<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u6240\u4EE5\u6211\u4EEC\u5B9E\u73B0\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u81EA\u52A8\u8C03\u7528 <code>executePendingJobs</code> \u7684\u51FD\u6570</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> QuickJSVm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;quickjs-emscripten&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">VmEventLoop</span> <span class="token punctuation">{</span>
  <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u5B9A\u4E49 vm \u4E2D\u7684\u4E8B\u4EF6\u5FAA\u73AF\u673A\u5236\uFF0C\u5C1D\u8BD5\u5FAA\u73AF\u6267\u884C\u7B49\u5F85\u7684\u5F02\u6B65\u64CD\u4F5C
 * <span class="token keyword">@param</span> <span class="token parameter">vm</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">defineEventLoop</span><span class="token punctuation">(</span>vm<span class="token operator">:</span> QuickJSVm<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> interval <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    vm<span class="token punctuation">.</span><span class="token function">executePendingJobs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">clearInterval</span><span class="token punctuation">(</span>interval<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u73B0\u5728\u53EA\u8981\u8C03\u7528 defineEventLoop \u5373\u4F1A\u5FAA\u73AF\u6267\u884C <code>executePendingJobs</code> \u51FD\u6570\u4E86</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> log <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">defineMockConsole</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> eventLoop <span class="token operator">=</span> <span class="token function">defineEventLoop</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token function">withScope</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    vm<span class="token punctuation">.</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Promise.resolve().then(()=&gt;console.log(1))</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>log<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>calls<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">wait</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>log<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>calls<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
  eventLoop<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="\u5B9E\u73B0\u6C99\u7BB1\u4E0E\u7CFB\u7EDF\u4E4B\u95F4\u7684\u901A\u4FE1" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u6C99\u7BB1\u4E0E\u7CFB\u7EDF\u4E4B\u95F4\u7684\u901A\u4FE1" aria-hidden="true">#</a> \u5B9E\u73B0\u6C99\u7BB1\u4E0E\u7CFB\u7EDF\u4E4B\u95F4\u7684\u901A\u4FE1</h2><p>\u73B0\u5728\uFF0C\u6211\u4EEC\u6C99\u7BB1\u8FD8\u6B20\u7F3A\u7684\u5C31\u662F\u901A\u4FE1\u673A\u5236\u4E86\uFF0C\u4E0B\u9762\u6211\u4EEC\u4FBF\u5B9E\u73B0\u4E00\u4E2A <code>EventEmiiter</code>\u3002</p><p>\u6838\u5FC3\u662F\u8BA9\u7CFB\u7EDF\u5C42\u548C\u6C99\u7BB1\u90FD\u5B9E\u73B0 EventEmitter\uFF0Cquickjs \u5141\u8BB8\u6211\u4EEC\u5411\u6C99\u7BB1\u4E2D\u6CE8\u5165\u65B9\u6CD5\uFF0C\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u6CE8\u5165\u4E00\u4E2A Map \u548C <code>emitMain</code> \u51FD\u6570\u3002\u8BA9\u6C99\u7BB1\u65E2\u80FD\u591F\u5411 Map \u4E2D\u6CE8\u518C\u4E8B\u4EF6\u4EE5\u4F9B\u7CFB\u7EDF\u5C42\u8C03\u7528\uFF0C\u4E5F\u80FD\u901A\u8FC7 <code>emitMain</code> \u5411\u7CFB\u7EDF\u5C42\u53D1\u9001\u4E8B\u4EF6\u3002</p><p><img src="`+k+`" alt="\u6C99\u7BB1\u4E0E\u7CFB\u7EDF\u4E4B\u95F4\u7684\u901A\u4FE1.drawio.svg"></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> QuickJSHandle<span class="token punctuation">,</span> QuickJSVm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;quickjs-emscripten&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> marshal <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../util/marshal&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> withScope <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../util/withScope&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> IEventEmitter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@webos/ipc-main&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">VmMessageChannel</span> <span class="token operator">=</span> IEventEmitter <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
  listenerMap<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>msg<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * \u5B9A\u4E49\u6D88\u606F\u901A\u4FE1
 * <span class="token keyword">@param</span> <span class="token parameter">vm</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">defineMessageChannel</span><span class="token punctuation">(</span>vm<span class="token operator">:</span> QuickJSVm<span class="token punctuation">)</span><span class="token operator">:</span> VmMessageChannel <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">withScope</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> vmGlobal <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">getProp</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>global<span class="token punctuation">,</span> <span class="token string">&quot;VM_GLOBAL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">typeof</span><span class="token punctuation">(</span>vmGlobal<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;undefined&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;VM_GLOBAL \u4E0D\u5B58\u5728\uFF0C\u9700\u8981\u5148\u6267\u884C defineVmGlobal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> listenerMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>msg<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span></span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> messagePort <span class="token operator">=</span> <span class="token function">marshal</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">//region vm \u8FDB\u7A0B\u56DE\u8C03\u51FD\u6570\u5B9A\u4E49</span>
      listenerMap<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token comment">//\u7ED9 vm \u8FDB\u7A0B\u7528\u7684</span>
      <span class="token function">emitMain</span><span class="token punctuation">(</span>channel<span class="token operator">:</span> QuickJSHandle<span class="token punctuation">,</span> msg<span class="token operator">:</span> QuickJSHandle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> key <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">dump</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> value <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">dump</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>listenerMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E3B\u8FDB\u7A0B\u6CA1\u6709\u76D1\u542C api: &quot;</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        listenerMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">fn</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;\u6267\u884C\u56DE\u8C03\u51FD\u6570\u53D1\u751F\u9519\u8BEF: &quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token comment">//endregion</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    vm<span class="token punctuation">.</span><span class="token function">setProp</span><span class="token punctuation">(</span>vmGlobal<span class="token punctuation">,</span> <span class="token string">&quot;MessagePort&quot;</span><span class="token punctuation">,</span> messagePort<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u7ED9\u4E3B\u8FDB\u7A0B\u7528\u7684</span>
    <span class="token keyword">function</span> <span class="token function">emitVM</span><span class="token punctuation">(</span>channel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> msg<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">withScope</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> _map <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">unwrapResult</span><span class="token punctuation">(</span>
          vm<span class="token punctuation">.</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token string">&quot;VM_GLOBAL.MessagePort.listenerMap&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> _get <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">getProp</span><span class="token punctuation">(</span>_map<span class="token punctuation">,</span> <span class="token string">&quot;get&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> _array <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">unwrapResult</span><span class="token punctuation">(</span>
          vm<span class="token punctuation">.</span><span class="token function">callFunction</span><span class="token punctuation">(</span>_get<span class="token punctuation">,</span> _map<span class="token punctuation">,</span> vm<span class="token punctuation">.</span><span class="token function">newString</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>vm<span class="token punctuation">.</span><span class="token function">dump</span><span class="token punctuation">(</span>_array<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>
          <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> length <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">dump</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">getProp</span><span class="token punctuation">(</span>_array<span class="token punctuation">,</span> <span class="token string">&quot;length&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span>
          i<span class="token operator">++</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
          vm<span class="token punctuation">.</span><span class="token function">callFunction</span><span class="token punctuation">(</span>
            vm<span class="token punctuation">.</span><span class="token function">getProp</span><span class="token punctuation">(</span>_array<span class="token punctuation">,</span> vm<span class="token punctuation">.</span><span class="token function">newNumber</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            vm<span class="token punctuation">.</span>null<span class="token punctuation">,</span>
            <span class="token function">marshal</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">.</span>value
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      emit<span class="token operator">:</span> emitVM<span class="token punctuation">,</span>
      <span class="token function">offByChannel</span><span class="token punctuation">(</span>channel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
        listenerMap<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function">on</span><span class="token punctuation">(</span>channel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token function-variable function">handle</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>listenerMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          listenerMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        listenerMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>handle<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      listenerMap<span class="token punctuation">,</span>
    <span class="token punctuation">}</span> <span class="token keyword">as</span> VmMessageChannel<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  res<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> res<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br></div></div><blockquote><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u6211\u4EEC\u9664\u4E86\u5B9E\u73B0\u4E86 IEventEmitter\uFF0C\u8FD8\u989D\u5916\u6DFB\u52A0\u4E86\u5B57\u6BB5 listenerMap\uFF0C\u8FD9\u4E3B\u8981\u662F\u5E0C\u671B\u5411\u4E0A\u5C42\u66B4\u9732\u66F4\u591A\u7EC6\u8282\uFF0C\u4FBF\u4E8E\u5728\u9700\u8981\u7684\u65F6\u5019\uFF08\u4F8B\u5982\u6E05\u7406\u5168\u90E8\u6CE8\u518C\u7684\u4E8B\u4EF6\uFF09\u53EF\u4EE5\u76F4\u63A5\u5B9E\u73B0\u3002</p></blockquote><p>\u4F7F\u7528</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">defineVmGlobal</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> messageChannel <span class="token operator">=</span> <span class="token function">defineMessageChannel</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> mockFn <span class="token operator">=</span> jest<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
messageChannel<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> mockFn<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">withScope</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  vm<span class="token punctuation">.</span><span class="token function">evalCode</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
class QuickJSEventEmitter {
    emit(channel, data) {
        VM_GLOBAL.MessagePort.emitMain(channel, data);
    }
    on(channel, handle) {
        if (!VM_GLOBAL.MessagePort.listenerMap.has(channel)) {
            VM_GLOBAL.MessagePort.listenerMap.set(channel, []);
        }
        VM_GLOBAL.MessagePort.listenerMap.get(channel).push(handle);
    }
    offByChannel(channel) {
        VM_GLOBAL.MessagePort.listenerMap.delete(channel);
    }
}

const em = new QuickJSEventEmitter()
em.emit(&#39;hello&#39;, &#39;liuli&#39;)
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>mockFn<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>calls<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&quot;liuli&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
messageChannel<span class="token punctuation">.</span>listenerMap<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="\u5B9E\u73B0-ijavascriptshadowbox" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-ijavascriptshadowbox" aria-hidden="true">#</a> \u5B9E\u73B0 IJavaScriptShadowbox</h2><p>\u6700\u7EC8\uFF0C\u6211\u4EEC\u4EE5\u4E0A\u5B9E\u73B0\u7684\u529F\u80FD\u96C6\u5408\u8D77\u6765\uFF0C\u4FBF\u5B9E\u73B0\u4E86 <code>IJavaScriptShadowbox</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> IJavaScriptShadowbox <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./IJavaScriptShadowbox&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getQuickJS<span class="token punctuation">,</span> QuickJS<span class="token punctuation">,</span> QuickJSVm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;quickjs-emscripten&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  BasicVmConsole<span class="token punctuation">,</span>
  defineConsole<span class="token punctuation">,</span>
  defineEventLoop<span class="token punctuation">,</span>
  defineMessageChannel<span class="token punctuation">,</span>
  defineSetInterval<span class="token punctuation">,</span>
  defineSetTimeout<span class="token punctuation">,</span>
  defineVmGlobal<span class="token punctuation">,</span>
  VmEventLoop<span class="token punctuation">,</span>
  VmMessageChannel<span class="token punctuation">,</span>
  VmSetInterval<span class="token punctuation">,</span>
  withScope<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@webos/quickjs-emscripten-utils&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">QuickJSShadowbox</span> <span class="token keyword">implements</span> <span class="token class-name">IJavaScriptShadowbox</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> vmMessageChannel<span class="token operator">:</span> VmMessageChannel<span class="token punctuation">;</span>
  <span class="token keyword">private</span> vmEventLoop<span class="token operator">:</span> VmEventLoop<span class="token punctuation">;</span>
  <span class="token keyword">private</span> vmSetInterval<span class="token operator">:</span> VmSetInterval<span class="token punctuation">;</span>
  <span class="token keyword">private</span> vmSetTimeout<span class="token operator">:</span> VmSetInterval<span class="token punctuation">;</span>

  <span class="token keyword">private</span> <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">readonly</span> vm<span class="token operator">:</span> QuickJSVm<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">defineConsole</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BasicVmConsole</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">defineVmGlobal</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vmSetTimeout <span class="token operator">=</span> <span class="token function">defineSetTimeout</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vmSetInterval <span class="token operator">=</span> <span class="token function">defineSetInterval</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vmEventLoop <span class="token operator">=</span> <span class="token function">defineEventLoop</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vmMessageChannel <span class="token operator">=</span> <span class="token function">defineMessageChannel</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vmMessageChannel<span class="token punctuation">.</span>listenerMap<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vmEventLoop<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vmSetInterval<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vmSetTimeout<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">eval</span><span class="token punctuation">(</span>code<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token function">withScope</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span>vm<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      vm<span class="token punctuation">.</span><span class="token function">unwrapResult</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">evalCode</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">emit</span><span class="token punctuation">(</span>channel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> data<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vmMessageChannel<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">on</span><span class="token punctuation">(</span>channel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token function-variable function">handle</span><span class="token operator">:</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vmMessageChannel<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> handle<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">offByChannel</span><span class="token punctuation">(</span>channel<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vmMessageChannel<span class="token punctuation">.</span><span class="token function">offByChannel</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token keyword">static</span> quickJS<span class="token operator">:</span> QuickJS<span class="token punctuation">;</span>

  <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>QuickJSShadowbox<span class="token punctuation">.</span>quickJS<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      QuickJSShadowbox<span class="token punctuation">.</span>quickJS <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getQuickJS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">QuickJSShadowbox</span><span class="token punctuation">(</span>QuickJSShadowbox<span class="token punctuation">.</span>quickJS<span class="token punctuation">.</span><span class="token function">createVm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">static</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    QuickJSShadowbox<span class="token punctuation">.</span>quickJS <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br></div></div><p>\u5728\u7CFB\u7EDF\u5C42\u4F7F\u7528</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> shadowbox <span class="token operator">=</span> <span class="token keyword">await</span> QuickJSShadowbox<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> mockConsole <span class="token operator">=</span> <span class="token function">defineMockConsole</span><span class="token punctuation">(</span>shadowbox<span class="token punctuation">.</span>vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
shadowbox<span class="token punctuation">.</span><span class="token function">eval</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
shadowbox<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span>AppChannelEnum<span class="token punctuation">.</span>Open<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>mockConsole<span class="token punctuation">.</span>log<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>calls<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&quot;open&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
shadowbox<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span>WindowChannelEnum<span class="token punctuation">.</span>AllClose<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>mockConsole<span class="token punctuation">.</span>log<span class="token punctuation">.</span>mock<span class="token punctuation">.</span>calls<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token string">&quot;all close&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
shadowbox<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5728\u6C99\u7BB1\u4F7F\u7528</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> eventEmitter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QuickJSEventEmitter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
eventEmitter<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>AppChannelEnum<span class="token punctuation">.</span>Open<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;open&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
eventEmitter<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>WindowChannelEnum<span class="token punctuation">.</span>AllClose<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;all close&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u76EE\u524D-quickjs-\u6C99\u7BB1\u7684\u9650\u5236" tabindex="-1"><a class="header-anchor" href="#\u76EE\u524D-quickjs-\u6C99\u7BB1\u7684\u9650\u5236" aria-hidden="true">#</a> \u76EE\u524D quickjs \u6C99\u7BB1\u7684\u9650\u5236</h2><p>\u4E0B\u9762\u662F\u76EE\u524D\u5B9E\u73B0\u7684\u4E00\u4E9B\u9650\u5236\uFF0C\u4E5F\u662F\u4EE5\u540E\u53EF\u4EE5\u7EE7\u7EED\u6539\u8FDB\u7684\u70B9</p><ul><li><code>console</code> \u4EC5\u652F\u6301\u5E38\u89C1\u7684 <code>log/info/warn/error</code> \u65B9\u6CD5</li><li><code>setTimeout/setInterval</code> \u4E8B\u4EF6\u5FAA\u73AF\u65F6\u95F4\u6CA1\u6709\u4FDD\u8BC1\uFF0C\u76EE\u524D\u5927\u7EA6\u5728 100ms \u8C03\u7528\u4E00\u6B21</li><li>\u65E0\u6CD5\u4F7F\u7528 chrome devtool \u8C03\u8BD5\uFF0C\u4E5F\u4E0D\u4F1A\u5904\u7406 sourcemap\uFF08figma \u81F3\u4ECA\u7684\u5F00\u53D1\u4F53\u9A8C\u4ECD\u7136\u5982\u6B64\uFF0C\u540E\u9762\u53EF\u80FD\u6DFB\u52A0\u5F00\u5173\u652F\u6301\u5728 web worker \u4E2D\u8C03\u8BD5\uFF09</li><li>vm \u4E2D\u51FA\u73B0\u9519\u8BEF\u4E0D\u4F1A\u5C06\u9519\u8BEF\u629B\u51FA\u6765\u5E76\u6253\u5370\u5728\u63A7\u5236\u53F0</li><li>\u5404\u4E2A api \u8C03\u7528\u7684\u987A\u5E8F\u4E0E\u6E05\u7406\u987A\u5E8F\u5FC5\u987B\u624B\u52A8\u4FDD\u8BC1\u662F\u76F8\u53CD\u7684\uFF0C\u4F8B\u5982 vm \u521B\u5EFA\u5FC5\u987B\u5728 <code>defineSetTimeout</code> \u4E4B\u524D\uFF0C\u800C <code>defineSetTimeout</code> \u7684\u6E05\u7406\u51FD\u6570\u8C03\u7528\u5FC5\u987B\u5728 <code>vm.dispose</code> \u4E4B\u524D</li><li>\u4E0D\u80FD\u5728 <code>messageChannel.on</code> \u56DE\u8C03\u4E2D\u540C\u6B65\u8C03\u7528 <code>vm.dispose</code>\uFF0C\u56E0\u4E3A\u662F\u540C\u6B65\u8C03\u7528\u7684</li></ul>`,45);function L(j,P){const a=o("ExternalLinkIcon");return e(),c(u,null,[b,m,s("p",null,[d,s("a",f,[v,p(a)]),g]),w,s("p",null,[y,h,q,s("a",S,[_,p(a)]),V]),x,s("p",null,[M,s("a",C,[J,p(a)]),I]),E],64)}var T=l(r,[["render",L]]);export{T as default};
