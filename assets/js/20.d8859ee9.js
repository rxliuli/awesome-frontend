(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{385:function(t,e,s){"use strict";s.r(e);var a=s(44),v=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("记录一些最常用的命令（从上往下使用频率依次降低），当然，这里只是吾辈个人的，其他功能可能暂时还没用到呢")]),t._v(" "),s("blockquote",[s("p",[t._v("详细的 git 相关知识强烈推荐 "),s("a",{attrs:{href:"https://git-scm.com/book/zh",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pro Git"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"基本命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本命令"}},[t._v("#")]),t._v(" 基本命令")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("关键词")]),t._v(" "),s("th",[t._v("命令格式")]),t._v(" "),s("th",[t._v("命令解释")]),t._v(" "),s("th",[t._v("命令示例")]),t._v(" "),s("th",[t._v("命令解释")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("init")]),t._v(" "),s("td",[s("code",[t._v("git init")])]),t._v(" "),s("td",[t._v("为当前目录初始化 git 本地仓库")]),t._v(" "),s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("add")]),t._v(" "),s("td",[s("code",[t._v("git add [要追踪的文件/路径]")])]),t._v(" "),s("td",[t._v("添加到 git 跟踪")]),t._v(" "),s("td",[s("code",[t._v("git add -A")])]),t._v(" "),s("td",[t._v("追踪仓库目录下的所有文件")])]),t._v(" "),s("tr",[s("td",[t._v("commit")]),t._v(" "),s("td",[s("code",[t._v("git commit [路径] [选项] [提交说明]")])]),t._v(" "),s("td",[t._v("提交当前的修改内容")]),t._v(" "),s("td",[s("code",[t._v('git commit -a -m "提交全部的修改"')])]),t._v(" "),s("td",[t._v("提交了全部的修改内容（仍在本机）")])]),t._v(" "),s("tr",[s("td",[t._v("remote")]),t._v(" "),s("td",[s("code",[t._v("git remote [选项] [远程仓库名]")])]),t._v(" "),s("td",[t._v("操作 git 远程仓库")]),t._v(" "),s("td",[s("code",[t._v("git remote")])]),t._v(" "),s("td",[t._v("显示所有远程仓库的别名")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td",[s("code",[t._v("git remote add origin https://github.com/rxliuli/rxliuli.github.io.git")])]),t._v(" "),s("td",[t._v("为本地仓库关联一个远程仓库")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td",[s("code",[t._v("git remote show origin")])]),t._v(" "),s("td",[t._v("显示 origin 远程仓库的详细信息")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td",[s("code",[t._v("git remote remove origin")])]),t._v(" "),s("td",[t._v("删除 origin 远程仓库")])]),t._v(" "),s("tr",[s("td",[t._v("push")]),t._v(" "),s("td",[s("code",[t._v("git push [远程别名] [远程分支]")])]),t._v(" "),s("td",[t._v("推送本地修改到远程")]),t._v(" "),s("td",[s("code",[t._v("git push origin master")])]),t._v(" "),s("td",[t._v("推送本地修改到远程 origin 的 master 分支上")])]),t._v(" "),s("tr",[s("td",[t._v("pull")]),t._v(" "),s("td",[s("code",[t._v("git pull [远程别名] [远程分支]")])]),t._v(" "),s("td",[t._v("拉取远程修改到本地")]),t._v(" "),s("td",[s("code",[t._v("git pull origin master")])]),t._v(" "),s("td",[t._v("拉去远程 origin 上 master 分支的修改到本地")])]),t._v(" "),s("tr",[s("td",[t._v("status")]),t._v(" "),s("td",[s("code",[t._v("git status")])]),t._v(" "),s("td",[t._v("查看本地仓库的状态，以此得知添加和修改的文件")]),t._v(" "),s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("clone")]),t._v(" "),s("td",[s("code",[t._v("git clone [远程仓库地址]")])]),t._v(" "),s("td",[t._v("克隆一个远程仓库到本地，这里和 pull 不同点在于本地不存在要克隆的仓库")]),t._v(" "),s("td",[s("code",[t._v("git clone https://github.com/rxliuli/rxliuli.github.io.git")])]),t._v(" "),s("td",[t._v("克隆吾辈的博客 github 仓库到本地")])]),t._v(" "),s("tr",[s("td",[t._v("log")]),t._v(" "),s("td",[s("code",[t._v("git log [选项]")])]),t._v(" "),s("td",[t._v("查看 git 日志")]),t._v(" "),s("td",[s("code",[t._v("git log")])]),t._v(" "),s("td",[t._v("简单的查看 git commit 历史纪录")])]),t._v(" "),s("tr",[s("td",[t._v("revert")]),t._v(" "),s("td",[s("code",[t._v("git revert [提交记录 hash]")])]),t._v(" "),s("td",[t._v("撤销掉指定提交")]),t._v(" "),s("td",[s("code",[t._v("git revert ab1c2d2")])]),t._v(" "),s("td",[t._v("撤销一次提交内容，然后将撤销的内容作为修改提交一次，保留了所有的记录")])]),t._v(" "),s("tr",[s("td",[t._v("reset")]),t._v(" "),s("td",[s("code",[t._v("git reset [提交记录 hash]")])]),t._v(" "),s("td",[t._v("重置到某次提交上，和上面不一样的是不会添加新的提交记录，而是删除已有的提交记录")]),t._v(" "),s("td",[s("code",[t._v("git reset ab1c2d2")])]),t._v(" "),s("td",[t._v("不会在 log 中留下痕迹")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("code",[t._v("git reset HEAD~[N 回退次数]")])]),t._v(" "),s("td",[t._v("回退最近几次的提交, N 为几就回退几次")]),t._v(" "),s("td",[s("code",[t._v("git reset HEAD~1")])]),t._v(" "),s("td",[t._v("回退最近一次的提交")])]),t._v(" "),s("tr",[s("td",[t._v("branch")]),t._v(" "),s("td",[s("code",[t._v("git branch [分支]")])]),t._v(" "),s("td",[t._v("git 分支(强大而又复杂的功能)")]),t._v(" "),s("td",[s("code",[t._v("git branch dev")])]),t._v(" "),s("td",[t._v("创建 dev 分支")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td",[s("code",[t._v("git branch")])]),t._v(" "),s("td",[t._v("列出所有分支")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td",[s("code",[t._v("git branch dev -D")])]),t._v(" "),s("td",[t._v("删除名为 dev 的分支")])]),t._v(" "),s("tr",[s("td",[t._v("checkout")]),t._v(" "),s("td",[s("code",[t._v("git checkout [分支名]")])]),t._v(" "),s("td",[t._v("切换当前分支(分支之间不共享修改)")]),t._v(" "),s("td",[s("code",[t._v("git checkout master")])]),t._v(" "),s("td",[t._v("切换当前分支到 master 分支")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td",[s("code",[t._v("git checkout origin/dev -b dev")])]),t._v(" "),s("td",[t._v("拉取远程分支到本地并切换")])]),t._v(" "),s("tr",[s("td",[t._v("merge")]),t._v(" "),s("td",[s("code",[t._v("git merge [选项]")])]),t._v(" "),s("td",[t._v("合并其他分支的修改到当前分支上")]),t._v(" "),s("td",[s("code",[t._v("git merge dev")])]),t._v(" "),s("td",[t._v("合并 dev 分支的修改到当前分支(一般是 master 分支)")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td",[s("code",[t._v("git merge origin/master --allow-unrelated-histories")])]),t._v(" "),s("td",[t._v("强行合并远程分支到本地")])]),t._v(" "),s("tr",[s("td",[t._v("push")]),t._v(" "),s("td",[s("code",[t._v("git push [远程仓库名] :[分支名]")])]),t._v(" "),s("td",[t._v("删除掉指定的远程分支（仓库还在，只是删除分支）")]),t._v(" "),s("td",[s("code",[t._v("git push origin :dev")])]),t._v(" "),s("td",[t._v("删除远程仓库 origin 下的 dev 开发分支")])]),t._v(" "),s("tr",[s("td",[t._v("stash")]),t._v(" "),s("td",[s("code",[t._v("git stash")])]),t._v(" "),s("td",[t._v("暂存本地更改")]),t._v(" "),s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("code",[t._v("git stash list")])]),t._v(" "),s("td",[t._v("查看所有暂存更改")]),t._v(" "),s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("code",[t._v("git stash apply [index]")])]),t._v(" "),s("td",[t._v("重新应用指定暂存更改")]),t._v(" "),s("td",[s("code",[t._v("git stash apply")])]),t._v(" "),s("td",[t._v("重新应用最新的暂存更改")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[s("code",[t._v("git stash drop [index]")])]),t._v(" "),s("td",[t._v("删除掉指定的暂存更改")]),t._v(" "),s("td",[s("code",[t._v("git stash drop")])]),t._v(" "),s("td",[t._v("删除掉最新的暂存更改")])])])]),t._v(" "),s("h2",{attrs:{id:"复合命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复合命令"}},[t._v("#")]),t._v(" 复合命令")]),t._v(" "),s("h3",{attrs:{id:"撤销掉本地所有的修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#撤销掉本地所有的修改"}},[t._v("#")]),t._v(" 撤销掉本地所有的修改")]),t._v(" "),s("p",[t._v("命令")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash drop\n")])])]),s("p",[t._v("解释")]),t._v(" "),s("ol",[s("li",[t._v("添加所有更改到 git 追踪中（如果没有被忽略的话）")]),t._v(" "),s("li",[t._v("添加所有本地更改到暂存区域中")]),t._v(" "),s("li",[t._v("删除掉刚添加的最新暂存更改")])]),t._v(" "),s("p",[t._v("应用场景\n修改了一些文件但又没有提交，突然发现有问题，想把它们全删除了重来，或者全部回到上次提交，先把这些修改暂存起来（不加最后一条命令）")]),t._v(" "),s("h3",{attrs:{id:"区分文件名大小写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#区分文件名大小写"}},[t._v("#")]),t._v(" 区分文件名大小写")]),t._v(" "),s("p",[t._v("命令")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config core.ignorecase "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),s("p",[t._v("解释\nWindows 下默认不区分文件名大小写，所以需要特别设置一下。")]),t._v(" "),s("h3",{attrs:{id:"git-push-强制推送"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-push-强制推送"}},[t._v("#")]),t._v(" git push 强制推送")]),t._v(" "),s("p",[t._v("命令")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -f\n")])])]),s("p",[t._v("解释")]),t._v(" "),s("p",[t._v("强制推送到远程分支，即便是远程包含本地不存在的提交")]),t._v(" "),s("h3",{attrs:{id:"忽略已经跟踪的文件的提交"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#忽略已经跟踪的文件的提交"}},[t._v("#")]),t._v(" 忽略已经跟踪的文件的提交")]),t._v(" "),s("blockquote",[s("p",[t._v("参考："),s("a",{attrs:{href:"https://ruby-china.org/topics/17948",target:"_blank",rel:"noopener noreferrer"}},[t._v("怎样让 Git 忽略当前已经更改的文件"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("忽略修改")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" update-index --assume-unchanged "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("files"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("取消这种设定")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" update-index --no-assume-unchanged "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("files"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h3",{attrs:{id:"从远端拉取分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从远端拉取分支"}},[t._v("#")]),t._v(" 从远端拉取分支")]),t._v(" "),s("blockquote",[s("p",[t._v("参考："),s("a",{attrs:{href:"https://www.cnblogs.com/phpper/p/7136048.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("git 获取远程服务器的指定分支"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("命令")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("本地分支名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("不存在"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("远程分支名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("示例")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b dev origin/dev\n")])])]),s("h3",{attrs:{id:"忽略已提交的文件修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#忽略已提交的文件修改"}},[t._v("#")]),t._v(" 忽略已提交的文件修改")]),t._v(" "),s("blockquote",[s("p",[t._v("参考："),s("a",{attrs:{href:"https://www.jianshu.com/p/e5b13480479b",target:"_blank",rel:"noopener noreferrer"}},[t._v("git 如何忽略已经提交的文件 (.gitignore 文件无效)"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("主要用于忽略一些本地修改的文件但又不希望提交，同时也不希望添加到 .gitignore 中将之从云端排除的方式。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" update-index --assume-unchanged "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file-pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h3",{attrs:{id:"git-删除远程-tag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-删除远程-tag"}},[t._v("#")]),t._v(" git 删除远程 tag")]),t._v(" "),s("p",[t._v("显示本地 tag")]),t._v(" "),s("div",{staticClass:"language-null extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git tag\n")])])]),s("p",[t._v("删除本地 tag")]),t._v(" "),s("div",{staticClass:"language-null extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git tag -d Remote_Systems_Operation ```\n")])])]),s("p",[t._v("用 push, 删除远程 tag")]),t._v(" "),s("div",{staticClass:"language-null extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git push origin :refs/tags/Remote_Systems_Operation```\n")])])]),s("p",[t._v("删除远程分支")]),t._v(" "),s("div",{staticClass:"language-null extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git branch -r -d origin/branch-name\ngit push origin :branch-name\n")])])]),s("h3",{attrs:{id:"两个-git-仓库合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#两个-git-仓库合并"}},[t._v("#")]),t._v(" 两个 git 仓库合并")]),t._v(" "),s("p",[t._v("现在有两个仓库 "),s("a",{attrs:{href:"https://github.com/kktjs/kkt.git",target:"_blank",rel:"noopener noreferrer"}},[t._v("kktjs/kkt"),s("OutboundLink")],1),t._v(" 和 "),s("a",{attrs:{href:"https://github.com/kktjs/kkt-next.git",target:"_blank",rel:"noopener noreferrer"}},[t._v("kktjs/kkt-next"),s("OutboundLink")],1),t._v(" 我们需要将 "),s("code",[t._v("kkt-next")]),t._v(" 仓库合并到 "),s("code",[t._v("kkt")]),t._v(" 并保留 "),s("code",[t._v("kkt-next")]),t._v(" 的所有提交内容。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1. 克隆主仓库代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone git@github.com:kktjs/kkt.git\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2. 将 kkt-next 作为远程仓库，添加到 kkt 中，设置别名为 other")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" other git@github.com:kktjs/kkt-next.git\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3. 从 kkt-next 仓库中拉取数据到本仓库")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch other\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4. 将 kkt-next 仓库拉取的 master 分支作为新分支 checkout 到本地，新分支名设定为 dev")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b dev other/master\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5. 切换回 kkt 的 master 分支")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 6. 将 dev 合并入 kkt 的 master 分支")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge dev\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果第 6 步报错 `fatal: refusing to merge unrelated histories`")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 请执行下面命令 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge dev --allow-unrelated-histories\n")])])]),s("blockquote",[s("p",[t._v("JetBrains IDE 提供了非常好用的冲突合并工具")])]),t._v(" "),s("p",[t._v("在合并时有可能两个分支对同一个文件都做了修改，这时需要解决冲突，对文本文件来说很简单，根据需要对冲突的位置进行处理就可以。对于二进制文件，需要用到如下命令:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout --theirs YOUR_BINARY_FILES     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 保留需要合并进来的分支的修改")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout --ours YOUR_BINARY_FILES       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 保留自己的修改")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" YOUR_BINARY_FILES\n")])])]),s("blockquote",[s("p",[t._v("参考: "),s("a",{attrs:{href:"https://segmentfault.com/a/1190000021919753",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://segmentfault.com/a/1190000021919753"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=v.exports}}]);