import{r as t,o as e,c as r,a as d,F as s,b as a,d as n}from"./app.969c9eca.js";const l={},i=d("h2",{id:"推荐-rimraf",tabindex:"-1"},[d("a",{class:"header-anchor",href:"#推荐-rimraf","aria-hidden":"true"},"#"),a(" [推荐] rimraf")],-1),h=d("p",null,"2021-11-20",-1),o=d("p",null,[a("删除任何东西的 cli，支持 glob 模式，例如 "),d("code",null,"rimraf **/node_modules"),a("。")],-1),c=a("同类型的工具很多，但 rimraf 是最流行的，参考 "),p={href:"https://www.npmtrends.com/del-cli-vs-rimraf-vs-trash-cli",target:"_blank",rel:"noopener noreferrer"},b=a("del-cli vs rimraf vs trash-cli"),u=a(" 吾辈曾经写过类似的 cli "),m={href:"https://www.npmjs.com/package/@liuli-util/shell",target:"_blank",rel:"noopener noreferrer"},v=a("@liuli-util/shell"),f=a("，但实际使用中发现大多数时候都只需要删除罢了，其他操作更多是作为插件集成到构建工具中。"),g=n('<h2 id="推荐-esno" tabindex="-1"><a class="header-anchor" href="#推荐-esno" aria-hidden="true">#</a> [推荐] esno</h2><p>2021-11-20</p><p>基于 esbuild 的 node 运行时，支持直接运行 esm/cjs 的 js/ts 代码，非常适合测试 cli。</p><table><thead><tr><th>对比</th><th>esno</th><th>node</th><th>ts-node</th></tr></thead><tbody><tr><td>速度</td><td>快</td><td>快</td><td>较慢（类型检查）</td></tr><tr><td>支持 ts</td><td>是</td><td>否</td><td>是</td></tr><tr><td>支持 esm/cjs 混合</td><td>是</td><td>否</td><td>否</td></tr></tbody></table><h2 id="推荐-live-server" tabindex="-1"><a class="header-anchor" href="#推荐-live-server" aria-hidden="true">#</a> [推荐] live-server</h2><p>2021-11-20</p><p>一个支持热更新的简单的 nodejs http 静态服务器。</p><p>可以使用以下方式简单的将指定目录或文件作为静态服务器，默认为当前目录。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 指定目录</span>\nlive-server dist/\n<span class="token comment"># 指定文件</span>\nlive-server src/index.html\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><table><thead><tr><th>对比</th><th>live-server</th><th>http-server</th></tr></thead><tbody><tr><td>热更新</td><td>是</td><td>否</td></tr><tr><td>css 热更新</td><td>是</td><td>否</td></tr><tr><td>跨域访问</td><td>是</td><td>是</td></tr><tr><td>维护</td><td>否</td><td>是</td></tr></tbody></table>',10);l.render=function(a,n){const l=t("OutboundLink");return e(),r(s,null,[i,h,o,d("blockquote",null,[d("p",null,[c,d("a",p,[b,d(l)]),u,d("a",m,[v,d(l)]),f])]),g],64)};export{l as default};
